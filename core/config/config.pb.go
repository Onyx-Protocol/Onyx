// Code generated by protoc-gen-go.
// source: config.proto
// DO NOT EDIT!

/*
Package config is a generated protocol buffer package.

It is generated from these files:
	config.proto

It has these top-level messages:
	Config
	BlockSigner
*/
package config

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import bc "chain/protocol/bc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Config struct {
	Id                   string         `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	IsSigner             bool           `protobuf:"varint,2,opt,name=is_signer,json=isSigner" json:"is_signer,omitempty"`
	IsGenerator          bool           `protobuf:"varint,3,opt,name=is_generator,json=isGenerator" json:"is_generator,omitempty"`
	BlockchainId         *bc.Hash       `protobuf:"bytes,4,opt,name=blockchain_id,json=blockchainId" json:"blockchain_id,omitempty"`
	GeneratorUrl         string         `protobuf:"bytes,5,opt,name=generator_url,json=generatorUrl" json:"generator_url,omitempty"`
	GeneratorAccessToken string         `protobuf:"bytes,6,opt,name=generator_access_token,json=generatorAccessToken" json:"generator_access_token,omitempty"`
	BlockHsmUrl          string         `protobuf:"bytes,7,opt,name=block_hsm_url,json=blockHsmUrl" json:"block_hsm_url,omitempty"`
	BlockHsmAccessToken  string         `protobuf:"bytes,8,opt,name=block_hsm_access_token,json=blockHsmAccessToken" json:"block_hsm_access_token,omitempty"`
	ConfiguredAt         uint64         `protobuf:"varint,9,opt,name=configured_at,json=configuredAt" json:"configured_at,omitempty"`
	BlockPub             string         `protobuf:"bytes,10,opt,name=block_pub,json=blockPub" json:"block_pub,omitempty"`
	Signers              []*BlockSigner `protobuf:"bytes,11,rep,name=signers" json:"signers,omitempty"`
	Quorum               uint32         `protobuf:"varint,12,opt,name=quorum" json:"quorum,omitempty"`
	MaxIssuanceWindowMs  uint64         `protobuf:"varint,13,opt,name=max_issuance_window_ms,json=maxIssuanceWindowMs" json:"max_issuance_window_ms,omitempty"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Config) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Config) GetIsSigner() bool {
	if m != nil {
		return m.IsSigner
	}
	return false
}

func (m *Config) GetIsGenerator() bool {
	if m != nil {
		return m.IsGenerator
	}
	return false
}

func (m *Config) GetBlockchainId() *bc.Hash {
	if m != nil {
		return m.BlockchainId
	}
	return nil
}

func (m *Config) GetGeneratorUrl() string {
	if m != nil {
		return m.GeneratorUrl
	}
	return ""
}

func (m *Config) GetGeneratorAccessToken() string {
	if m != nil {
		return m.GeneratorAccessToken
	}
	return ""
}

func (m *Config) GetBlockHsmUrl() string {
	if m != nil {
		return m.BlockHsmUrl
	}
	return ""
}

func (m *Config) GetBlockHsmAccessToken() string {
	if m != nil {
		return m.BlockHsmAccessToken
	}
	return ""
}

func (m *Config) GetConfiguredAt() uint64 {
	if m != nil {
		return m.ConfiguredAt
	}
	return 0
}

func (m *Config) GetBlockPub() string {
	if m != nil {
		return m.BlockPub
	}
	return ""
}

func (m *Config) GetSigners() []*BlockSigner {
	if m != nil {
		return m.Signers
	}
	return nil
}

func (m *Config) GetQuorum() uint32 {
	if m != nil {
		return m.Quorum
	}
	return 0
}

func (m *Config) GetMaxIssuanceWindowMs() uint64 {
	if m != nil {
		return m.MaxIssuanceWindowMs
	}
	return 0
}

type BlockSigner struct {
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	Pubkey      []byte `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Url         string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
}

func (m *BlockSigner) Reset()                    { *m = BlockSigner{} }
func (m *BlockSigner) String() string            { return proto.CompactTextString(m) }
func (*BlockSigner) ProtoMessage()               {}
func (*BlockSigner) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BlockSigner) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *BlockSigner) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *BlockSigner) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func init() {
	proto.RegisterType((*Config)(nil), "config.Config")
	proto.RegisterType((*BlockSigner)(nil), "config.BlockSigner")
}

func init() { proto.RegisterFile("config.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 406 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0x41, 0x6f, 0xd3, 0x40,
	0x10, 0x85, 0xe5, 0xb8, 0xb8, 0xce, 0xd8, 0x46, 0x68, 0x83, 0xa2, 0x15, 0x70, 0x30, 0xe9, 0xc5,
	0x97, 0x26, 0x52, 0xcb, 0x1f, 0x28, 0x1c, 0x68, 0x0f, 0x48, 0xc8, 0x80, 0x90, 0xb8, 0xac, 0xd6,
	0x6b, 0x13, 0xaf, 0x12, 0x7b, 0x83, 0xc7, 0xab, 0x96, 0x9f, 0xce, 0x0d, 0xed, 0xd8, 0x89, 0xd3,
	0x9b, 0xe7, 0xbd, 0xcf, 0x6f, 0x67, 0x67, 0x07, 0x62, 0x65, 0xda, 0xdf, 0x7a, 0xbb, 0x3e, 0x74,
	0xa6, 0x37, 0x2c, 0x18, 0xaa, 0x37, 0xef, 0x54, 0x2d, 0x75, 0xbb, 0x21, 0x51, 0x99, 0xfd, 0xa6,
	0x50, 0x9b, 0x5a, 0x62, 0x3d, 0x50, 0xab, 0x7f, 0x3e, 0x04, 0x9f, 0x08, 0x64, 0x2f, 0x61, 0xa6,
	0x4b, 0xee, 0xa5, 0x5e, 0x36, 0xcf, 0x67, 0xba, 0x64, 0x6f, 0x61, 0xae, 0x51, 0xa0, 0xde, 0xb6,
	0x55, 0xc7, 0x67, 0xa9, 0x97, 0x85, 0x79, 0xa8, 0xf1, 0x1b, 0xd5, 0xec, 0x3d, 0xc4, 0x1a, 0xc5,
	0xb6, 0x6a, 0xab, 0x4e, 0xf6, 0xa6, 0xe3, 0x3e, 0xf9, 0x91, 0xc6, 0xcf, 0x47, 0x89, 0x5d, 0x43,
	0x52, 0xec, 0x8d, 0xda, 0xd1, 0xf9, 0x42, 0x97, 0xfc, 0x22, 0xf5, 0xb2, 0xe8, 0x26, 0x5c, 0x17,
	0x6a, 0x7d, 0x2f, 0xb1, 0xce, 0xe3, 0xc9, 0x7e, 0x28, 0xd9, 0x15, 0x24, 0xa7, 0x38, 0x61, 0xbb,
	0x3d, 0x7f, 0x41, 0x9d, 0xc4, 0x27, 0xf1, 0x47, 0xb7, 0x67, 0x1f, 0x60, 0x39, 0x41, 0x52, 0xa9,
	0x0a, 0x51, 0xf4, 0x66, 0x57, 0xb5, 0x3c, 0x20, 0xfa, 0xf5, 0xc9, 0xbd, 0x23, 0xf3, 0xbb, 0xf3,
	0xd8, 0x6a, 0xec, 0x44, 0xd4, 0xd8, 0x50, 0xf4, 0x25, 0xc1, 0x11, 0x89, 0xf7, 0xd8, 0xb8, 0xe4,
	0x5b, 0x58, 0x4e, 0xcc, 0xb3, 0xe4, 0x90, 0xe0, 0xc5, 0x11, 0x3e, 0x0f, 0xbe, 0x82, 0x64, 0x98,
	0xb2, 0xed, 0xaa, 0x52, 0xc8, 0x9e, 0xcf, 0x53, 0x2f, 0xbb, 0xc8, 0xe3, 0x49, 0xbc, 0xeb, 0xdd,
	0x1c, 0x87, 0xe4, 0x83, 0x2d, 0x38, 0x50, 0x58, 0x48, 0xc2, 0x57, 0x5b, 0xb0, 0x6b, 0xb8, 0x1c,
	0x26, 0x8c, 0x3c, 0x4a, 0xfd, 0x2c, 0xba, 0x59, 0xac, 0xc7, 0x57, 0xfc, 0xe8, 0x90, 0x61, 0xda,
	0xf9, 0x91, 0x61, 0x4b, 0x08, 0xfe, 0x58, 0xd3, 0xd9, 0x86, 0xc7, 0xa9, 0x97, 0x25, 0xf9, 0x58,
	0xb9, 0xee, 0x1b, 0xf9, 0x24, 0x34, 0xa2, 0x95, 0xad, 0xaa, 0xc4, 0xa3, 0x6e, 0x4b, 0xf3, 0x28,
	0x1a, 0xe4, 0x09, 0x75, 0xb4, 0x68, 0xe4, 0xd3, 0xc3, 0x68, 0xfe, 0x24, 0xef, 0x0b, 0xae, 0x7e,
	0x41, 0x74, 0x76, 0x88, 0x7b, 0xd2, 0x67, 0xf7, 0x1e, 0x36, 0x21, 0x92, 0x67, 0xf7, 0x5d, 0x42,
	0x70, 0xb0, 0xc5, 0xae, 0xfa, 0x4b, 0xfb, 0x10, 0xe7, 0x63, 0xc5, 0x5e, 0x81, 0xef, 0xc6, 0xea,
	0xd3, 0x1f, 0xee, 0xb3, 0x08, 0x68, 0xbd, 0x6e, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0xb0, 0xc4,
	0x52, 0x9f, 0x94, 0x02, 0x00, 0x00,
}
