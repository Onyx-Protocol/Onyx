// Code generated by protoc-gen-go.
// source: chaincore.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	chaincore.proto

It has these top-level messages:
	Empty
	ErrorResponse
	Error
	Asset
	CreateAssetsRequest
	CreateAssetsResponse
	Account
	CreateAccountsRequest
	CreateAccountsResponse
	CreateControlProgramsRequest
	CreateControlProgramsResponse
	TxFeed
	TxFeedResponse
	CreateTxFeedRequest
	GetTxFeedRequest
	UpdateTxFeedRequest
	DeleteTxFeedRequest
	CreateAccessTokenRequest
	CreateAccessTokenResponse
	ListAccessTokensQuery
	ListAccessTokensResponse
	DeleteAccessTokenRequest
	AccessToken
	FilterParam
	ListAccountsQuery
	ListAccountsResponse
	ListAssetsQuery
	ListAssetsResponse
	ListBalancesQuery
	ListBalancesResponse
	ListTxFeedsQuery
	ListTxFeedsResponse
	ListTxsQuery
	ListTxsResponse
	ListUnspentOutputsQuery
	ListUnspentOutputsResponse
	ResetRequest
	InfoResponse
	ConfigureRequest
	AssetIdentifier
	AccountIdentifier
	Action
	BuildTxsRequest
	TxTemplate
	TxsResponse
	SubmitTxsRequest
	SubmitTxsResponse
	XPub
	CreateKeyRequest
	CreateKeyResponse
	ListKeysQuery
	ListKeysResponse
	DeleteKeyRequest
	SignTxsRequest
	SubmitTxRequest
	SubmitTxResponse
	GetBlockRequest
	GetBlockResponse
	GetSnapshotRequest
	GetSnapshotResponse
	GetSnapshotInfoResponse
	GetBlockHeightResponse
	SignBlockRequest
	SignBlockResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ErrorResponse struct {
	Error *Error `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *ErrorResponse) Reset()                    { *m = ErrorResponse{} }
func (m *ErrorResponse) String() string            { return proto.CompactTextString(m) }
func (*ErrorResponse) ProtoMessage()               {}
func (*ErrorResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ErrorResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type Error struct {
	Code      string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Message   string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Detail    string `protobuf:"bytes,3,opt,name=detail" json:"detail,omitempty"`
	Temporary bool   `protobuf:"varint,4,opt,name=temporary" json:"temporary,omitempty"`
	Data      []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Error) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Error) GetDetail() string {
	if m != nil {
		return m.Detail
	}
	return ""
}

func (m *Error) GetTemporary() bool {
	if m != nil {
		return m.Temporary
	}
	return false
}

func (m *Error) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Asset struct {
	Id              []byte       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Alias           string       `protobuf:"bytes,2,opt,name=alias" json:"alias,omitempty"`
	VmVersion       uint64       `protobuf:"varint,9,opt,name=vm_version,json=vmVersion" json:"vm_version,omitempty"`
	IssuanceProgram []byte       `protobuf:"bytes,3,opt,name=issuance_program,json=issuanceProgram,proto3" json:"issuance_program,omitempty"`
	Keys            []*Asset_Key `protobuf:"bytes,4,rep,name=keys" json:"keys,omitempty"`
	Quorum          int32        `protobuf:"varint,5,opt,name=quorum" json:"quorum,omitempty"`
	Definition      []byte       `protobuf:"bytes,6,opt,name=definition,proto3" json:"definition,omitempty"`
	Tags            []byte       `protobuf:"bytes,7,opt,name=tags,proto3" json:"tags,omitempty"`
	IsLocal         bool         `protobuf:"varint,8,opt,name=is_local,json=isLocal" json:"is_local,omitempty"`
}

func (m *Asset) Reset()                    { *m = Asset{} }
func (m *Asset) String() string            { return proto.CompactTextString(m) }
func (*Asset) ProtoMessage()               {}
func (*Asset) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Asset) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Asset) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *Asset) GetVmVersion() uint64 {
	if m != nil {
		return m.VmVersion
	}
	return 0
}

func (m *Asset) GetIssuanceProgram() []byte {
	if m != nil {
		return m.IssuanceProgram
	}
	return nil
}

func (m *Asset) GetKeys() []*Asset_Key {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *Asset) GetQuorum() int32 {
	if m != nil {
		return m.Quorum
	}
	return 0
}

func (m *Asset) GetDefinition() []byte {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *Asset) GetTags() []byte {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Asset) GetIsLocal() bool {
	if m != nil {
		return m.IsLocal
	}
	return false
}

type Asset_Key struct {
	RootXpub            []byte   `protobuf:"bytes,1,opt,name=root_xpub,json=rootXpub,proto3" json:"root_xpub,omitempty"`
	AssetPubkey         []byte   `protobuf:"bytes,2,opt,name=asset_pubkey,json=assetPubkey,proto3" json:"asset_pubkey,omitempty"`
	AssetDerivationPath [][]byte `protobuf:"bytes,3,rep,name=asset_derivation_path,json=assetDerivationPath,proto3" json:"asset_derivation_path,omitempty"`
}

func (m *Asset_Key) Reset()                    { *m = Asset_Key{} }
func (m *Asset_Key) String() string            { return proto.CompactTextString(m) }
func (*Asset_Key) ProtoMessage()               {}
func (*Asset_Key) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

func (m *Asset_Key) GetRootXpub() []byte {
	if m != nil {
		return m.RootXpub
	}
	return nil
}

func (m *Asset_Key) GetAssetPubkey() []byte {
	if m != nil {
		return m.AssetPubkey
	}
	return nil
}

func (m *Asset_Key) GetAssetDerivationPath() [][]byte {
	if m != nil {
		return m.AssetDerivationPath
	}
	return nil
}

type CreateAssetsRequest struct {
	Requests []*CreateAssetsRequest_Request `protobuf:"bytes,1,rep,name=requests" json:"requests,omitempty"`
}

func (m *CreateAssetsRequest) Reset()                    { *m = CreateAssetsRequest{} }
func (m *CreateAssetsRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAssetsRequest) ProtoMessage()               {}
func (*CreateAssetsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateAssetsRequest) GetRequests() []*CreateAssetsRequest_Request {
	if m != nil {
		return m.Requests
	}
	return nil
}

type CreateAssetsRequest_Request struct {
	Alias       string   `protobuf:"bytes,1,opt,name=alias" json:"alias,omitempty"`
	RootXpubs   [][]byte `protobuf:"bytes,2,rep,name=root_xpubs,json=rootXpubs,proto3" json:"root_xpubs,omitempty"`
	Quorum      int32    `protobuf:"varint,3,opt,name=quorum" json:"quorum,omitempty"`
	Definition  []byte   `protobuf:"bytes,4,opt,name=definition,proto3" json:"definition,omitempty"`
	Tags        []byte   `protobuf:"bytes,5,opt,name=tags,proto3" json:"tags,omitempty"`
	ClientToken string   `protobuf:"bytes,6,opt,name=client_token,json=clientToken" json:"client_token,omitempty"`
}

func (m *CreateAssetsRequest_Request) Reset()                    { *m = CreateAssetsRequest_Request{} }
func (m *CreateAssetsRequest_Request) String() string            { return proto.CompactTextString(m) }
func (*CreateAssetsRequest_Request) ProtoMessage()               {}
func (*CreateAssetsRequest_Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

func (m *CreateAssetsRequest_Request) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *CreateAssetsRequest_Request) GetRootXpubs() [][]byte {
	if m != nil {
		return m.RootXpubs
	}
	return nil
}

func (m *CreateAssetsRequest_Request) GetQuorum() int32 {
	if m != nil {
		return m.Quorum
	}
	return 0
}

func (m *CreateAssetsRequest_Request) GetDefinition() []byte {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *CreateAssetsRequest_Request) GetTags() []byte {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *CreateAssetsRequest_Request) GetClientToken() string {
	if m != nil {
		return m.ClientToken
	}
	return ""
}

type CreateAssetsResponse struct {
	Responses []*CreateAssetsResponse_Response `protobuf:"bytes,1,rep,name=responses" json:"responses,omitempty"`
	Error     *Error                           `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *CreateAssetsResponse) Reset()                    { *m = CreateAssetsResponse{} }
func (m *CreateAssetsResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateAssetsResponse) ProtoMessage()               {}
func (*CreateAssetsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateAssetsResponse) GetResponses() []*CreateAssetsResponse_Response {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *CreateAssetsResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type CreateAssetsResponse_Response struct {
	Asset *Asset `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
	Error *Error `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *CreateAssetsResponse_Response) Reset()         { *m = CreateAssetsResponse_Response{} }
func (m *CreateAssetsResponse_Response) String() string { return proto.CompactTextString(m) }
func (*CreateAssetsResponse_Response) ProtoMessage()    {}
func (*CreateAssetsResponse_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 0}
}

func (m *CreateAssetsResponse_Response) GetAsset() *Asset {
	if m != nil {
		return m.Asset
	}
	return nil
}

func (m *CreateAssetsResponse_Response) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type Account struct {
	Id     string         `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Alias  string         `protobuf:"bytes,2,opt,name=alias" json:"alias,omitempty"`
	Keys   []*Account_Key `protobuf:"bytes,3,rep,name=keys" json:"keys,omitempty"`
	Quorum int32          `protobuf:"varint,4,opt,name=quorum" json:"quorum,omitempty"`
	Tags   []byte         `protobuf:"bytes,5,opt,name=tags,proto3" json:"tags,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Account) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Account) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *Account) GetKeys() []*Account_Key {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *Account) GetQuorum() int32 {
	if m != nil {
		return m.Quorum
	}
	return 0
}

func (m *Account) GetTags() []byte {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Account_Key struct {
	RootXpub              []byte   `protobuf:"bytes,1,opt,name=root_xpub,json=rootXpub,proto3" json:"root_xpub,omitempty"`
	AccountXpub           []byte   `protobuf:"bytes,2,opt,name=account_xpub,json=accountXpub,proto3" json:"account_xpub,omitempty"`
	AccountDerivationPath [][]byte `protobuf:"bytes,3,rep,name=account_derivation_path,json=accountDerivationPath,proto3" json:"account_derivation_path,omitempty"`
}

func (m *Account_Key) Reset()                    { *m = Account_Key{} }
func (m *Account_Key) String() string            { return proto.CompactTextString(m) }
func (*Account_Key) ProtoMessage()               {}
func (*Account_Key) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6, 0} }

func (m *Account_Key) GetRootXpub() []byte {
	if m != nil {
		return m.RootXpub
	}
	return nil
}

func (m *Account_Key) GetAccountXpub() []byte {
	if m != nil {
		return m.AccountXpub
	}
	return nil
}

func (m *Account_Key) GetAccountDerivationPath() [][]byte {
	if m != nil {
		return m.AccountDerivationPath
	}
	return nil
}

type CreateAccountsRequest struct {
	Requests []*CreateAccountsRequest_Request `protobuf:"bytes,1,rep,name=requests" json:"requests,omitempty"`
}

func (m *CreateAccountsRequest) Reset()                    { *m = CreateAccountsRequest{} }
func (m *CreateAccountsRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAccountsRequest) ProtoMessage()               {}
func (*CreateAccountsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CreateAccountsRequest) GetRequests() []*CreateAccountsRequest_Request {
	if m != nil {
		return m.Requests
	}
	return nil
}

type CreateAccountsRequest_Request struct {
	RootXpubs   [][]byte `protobuf:"bytes,1,rep,name=root_xpubs,json=rootXpubs,proto3" json:"root_xpubs,omitempty"`
	Quorum      int32    `protobuf:"varint,2,opt,name=quorum" json:"quorum,omitempty"`
	Alias       string   `protobuf:"bytes,3,opt,name=alias" json:"alias,omitempty"`
	Tags        []byte   `protobuf:"bytes,4,opt,name=tags,proto3" json:"tags,omitempty"`
	ClientToken string   `protobuf:"bytes,5,opt,name=client_token,json=clientToken" json:"client_token,omitempty"`
}

func (m *CreateAccountsRequest_Request) Reset()         { *m = CreateAccountsRequest_Request{} }
func (m *CreateAccountsRequest_Request) String() string { return proto.CompactTextString(m) }
func (*CreateAccountsRequest_Request) ProtoMessage()    {}
func (*CreateAccountsRequest_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{7, 0}
}

func (m *CreateAccountsRequest_Request) GetRootXpubs() [][]byte {
	if m != nil {
		return m.RootXpubs
	}
	return nil
}

func (m *CreateAccountsRequest_Request) GetQuorum() int32 {
	if m != nil {
		return m.Quorum
	}
	return 0
}

func (m *CreateAccountsRequest_Request) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *CreateAccountsRequest_Request) GetTags() []byte {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *CreateAccountsRequest_Request) GetClientToken() string {
	if m != nil {
		return m.ClientToken
	}
	return ""
}

type CreateAccountsResponse struct {
	Responses []*CreateAccountsResponse_Response `protobuf:"bytes,1,rep,name=responses" json:"responses,omitempty"`
	Error     *Error                             `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *CreateAccountsResponse) Reset()                    { *m = CreateAccountsResponse{} }
func (m *CreateAccountsResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateAccountsResponse) ProtoMessage()               {}
func (*CreateAccountsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CreateAccountsResponse) GetResponses() []*CreateAccountsResponse_Response {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *CreateAccountsResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type CreateAccountsResponse_Response struct {
	Account *Account `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Error   *Error   `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *CreateAccountsResponse_Response) Reset()         { *m = CreateAccountsResponse_Response{} }
func (m *CreateAccountsResponse_Response) String() string { return proto.CompactTextString(m) }
func (*CreateAccountsResponse_Response) ProtoMessage()    {}
func (*CreateAccountsResponse_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{8, 0}
}

func (m *CreateAccountsResponse_Response) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *CreateAccountsResponse_Response) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type CreateControlProgramsRequest struct {
	Requests []*CreateControlProgramsRequest_Request `protobuf:"bytes,1,rep,name=requests" json:"requests,omitempty"`
}

func (m *CreateControlProgramsRequest) Reset()                    { *m = CreateControlProgramsRequest{} }
func (m *CreateControlProgramsRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateControlProgramsRequest) ProtoMessage()               {}
func (*CreateControlProgramsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CreateControlProgramsRequest) GetRequests() []*CreateControlProgramsRequest_Request {
	if m != nil {
		return m.Requests
	}
	return nil
}

type CreateControlProgramsRequest_Account struct {
	// Types that are valid to be assigned to Identifier:
	//	*CreateControlProgramsRequest_Account_AccountId
	//	*CreateControlProgramsRequest_Account_AccountAlias
	Identifier isCreateControlProgramsRequest_Account_Identifier `protobuf_oneof:"identifier"`
}

func (m *CreateControlProgramsRequest_Account) Reset()         { *m = CreateControlProgramsRequest_Account{} }
func (m *CreateControlProgramsRequest_Account) String() string { return proto.CompactTextString(m) }
func (*CreateControlProgramsRequest_Account) ProtoMessage()    {}
func (*CreateControlProgramsRequest_Account) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{9, 0}
}

type isCreateControlProgramsRequest_Account_Identifier interface {
	isCreateControlProgramsRequest_Account_Identifier()
}

type CreateControlProgramsRequest_Account_AccountId struct {
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,oneof"`
}
type CreateControlProgramsRequest_Account_AccountAlias struct {
	AccountAlias string `protobuf:"bytes,2,opt,name=account_alias,json=accountAlias,oneof"`
}

func (*CreateControlProgramsRequest_Account_AccountId) isCreateControlProgramsRequest_Account_Identifier() {
}
func (*CreateControlProgramsRequest_Account_AccountAlias) isCreateControlProgramsRequest_Account_Identifier() {
}

func (m *CreateControlProgramsRequest_Account) GetIdentifier() isCreateControlProgramsRequest_Account_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *CreateControlProgramsRequest_Account) GetAccountId() string {
	if x, ok := m.GetIdentifier().(*CreateControlProgramsRequest_Account_AccountId); ok {
		return x.AccountId
	}
	return ""
}

func (m *CreateControlProgramsRequest_Account) GetAccountAlias() string {
	if x, ok := m.GetIdentifier().(*CreateControlProgramsRequest_Account_AccountAlias); ok {
		return x.AccountAlias
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CreateControlProgramsRequest_Account) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CreateControlProgramsRequest_Account_OneofMarshaler, _CreateControlProgramsRequest_Account_OneofUnmarshaler, _CreateControlProgramsRequest_Account_OneofSizer, []interface{}{
		(*CreateControlProgramsRequest_Account_AccountId)(nil),
		(*CreateControlProgramsRequest_Account_AccountAlias)(nil),
	}
}

func _CreateControlProgramsRequest_Account_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CreateControlProgramsRequest_Account)
	// identifier
	switch x := m.Identifier.(type) {
	case *CreateControlProgramsRequest_Account_AccountId:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.AccountId)
	case *CreateControlProgramsRequest_Account_AccountAlias:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.AccountAlias)
	case nil:
	default:
		return fmt.Errorf("CreateControlProgramsRequest_Account.Identifier has unexpected type %T", x)
	}
	return nil
}

func _CreateControlProgramsRequest_Account_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CreateControlProgramsRequest_Account)
	switch tag {
	case 1: // identifier.account_id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Identifier = &CreateControlProgramsRequest_Account_AccountId{x}
		return true, err
	case 2: // identifier.account_alias
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Identifier = &CreateControlProgramsRequest_Account_AccountAlias{x}
		return true, err
	default:
		return false, nil
	}
}

func _CreateControlProgramsRequest_Account_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CreateControlProgramsRequest_Account)
	// identifier
	switch x := m.Identifier.(type) {
	case *CreateControlProgramsRequest_Account_AccountId:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.AccountId)))
		n += len(x.AccountId)
	case *CreateControlProgramsRequest_Account_AccountAlias:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.AccountAlias)))
		n += len(x.AccountAlias)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CreateControlProgramsRequest_Request struct {
	// Types that are valid to be assigned to Type:
	//	*CreateControlProgramsRequest_Request_Account
	Type isCreateControlProgramsRequest_Request_Type `protobuf_oneof:"type"`
}

func (m *CreateControlProgramsRequest_Request) Reset()         { *m = CreateControlProgramsRequest_Request{} }
func (m *CreateControlProgramsRequest_Request) String() string { return proto.CompactTextString(m) }
func (*CreateControlProgramsRequest_Request) ProtoMessage()    {}
func (*CreateControlProgramsRequest_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{9, 1}
}

type isCreateControlProgramsRequest_Request_Type interface {
	isCreateControlProgramsRequest_Request_Type()
}

type CreateControlProgramsRequest_Request_Account struct {
	Account *CreateControlProgramsRequest_Account `protobuf:"bytes,1,opt,name=account,oneof"`
}

func (*CreateControlProgramsRequest_Request_Account) isCreateControlProgramsRequest_Request_Type() {}

func (m *CreateControlProgramsRequest_Request) GetType() isCreateControlProgramsRequest_Request_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *CreateControlProgramsRequest_Request) GetAccount() *CreateControlProgramsRequest_Account {
	if x, ok := m.GetType().(*CreateControlProgramsRequest_Request_Account); ok {
		return x.Account
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CreateControlProgramsRequest_Request) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CreateControlProgramsRequest_Request_OneofMarshaler, _CreateControlProgramsRequest_Request_OneofUnmarshaler, _CreateControlProgramsRequest_Request_OneofSizer, []interface{}{
		(*CreateControlProgramsRequest_Request_Account)(nil),
	}
}

func _CreateControlProgramsRequest_Request_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CreateControlProgramsRequest_Request)
	// type
	switch x := m.Type.(type) {
	case *CreateControlProgramsRequest_Request_Account:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Account); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CreateControlProgramsRequest_Request.Type has unexpected type %T", x)
	}
	return nil
}

func _CreateControlProgramsRequest_Request_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CreateControlProgramsRequest_Request)
	switch tag {
	case 1: // type.account
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CreateControlProgramsRequest_Account)
		err := b.DecodeMessage(msg)
		m.Type = &CreateControlProgramsRequest_Request_Account{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CreateControlProgramsRequest_Request_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CreateControlProgramsRequest_Request)
	// type
	switch x := m.Type.(type) {
	case *CreateControlProgramsRequest_Request_Account:
		s := proto.Size(x.Account)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CreateControlProgramsResponse struct {
	Responses []*CreateControlProgramsResponse_Response `protobuf:"bytes,1,rep,name=responses" json:"responses,omitempty"`
	Error     *Error                                    `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *CreateControlProgramsResponse) Reset()                    { *m = CreateControlProgramsResponse{} }
func (m *CreateControlProgramsResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateControlProgramsResponse) ProtoMessage()               {}
func (*CreateControlProgramsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CreateControlProgramsResponse) GetResponses() []*CreateControlProgramsResponse_Response {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *CreateControlProgramsResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type CreateControlProgramsResponse_Response struct {
	ControlProgram []byte `protobuf:"bytes,1,opt,name=control_program,json=controlProgram,proto3" json:"control_program,omitempty"`
	Error          *Error `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *CreateControlProgramsResponse_Response) Reset() {
	*m = CreateControlProgramsResponse_Response{}
}
func (m *CreateControlProgramsResponse_Response) String() string { return proto.CompactTextString(m) }
func (*CreateControlProgramsResponse_Response) ProtoMessage()    {}
func (*CreateControlProgramsResponse_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{10, 0}
}

func (m *CreateControlProgramsResponse_Response) GetControlProgram() []byte {
	if m != nil {
		return m.ControlProgram
	}
	return nil
}

func (m *CreateControlProgramsResponse_Response) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type TxFeed struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Alias  string `protobuf:"bytes,2,opt,name=alias" json:"alias,omitempty"`
	Filter string `protobuf:"bytes,3,opt,name=filter" json:"filter,omitempty"`
	After  string `protobuf:"bytes,4,opt,name=after" json:"after,omitempty"`
}

func (m *TxFeed) Reset()                    { *m = TxFeed{} }
func (m *TxFeed) String() string            { return proto.CompactTextString(m) }
func (*TxFeed) ProtoMessage()               {}
func (*TxFeed) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *TxFeed) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TxFeed) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *TxFeed) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *TxFeed) GetAfter() string {
	if m != nil {
		return m.After
	}
	return ""
}

type TxFeedResponse struct {
	Response *TxFeed `protobuf:"bytes,1,opt,name=response" json:"response,omitempty"`
	Error    *Error  `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *TxFeedResponse) Reset()                    { *m = TxFeedResponse{} }
func (m *TxFeedResponse) String() string            { return proto.CompactTextString(m) }
func (*TxFeedResponse) ProtoMessage()               {}
func (*TxFeedResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *TxFeedResponse) GetResponse() *TxFeed {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *TxFeedResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type CreateTxFeedRequest struct {
	Alias       string `protobuf:"bytes,1,opt,name=alias" json:"alias,omitempty"`
	Filter      string `protobuf:"bytes,2,opt,name=filter" json:"filter,omitempty"`
	ClientToken string `protobuf:"bytes,3,opt,name=client_token,json=clientToken" json:"client_token,omitempty"`
}

func (m *CreateTxFeedRequest) Reset()                    { *m = CreateTxFeedRequest{} }
func (m *CreateTxFeedRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateTxFeedRequest) ProtoMessage()               {}
func (*CreateTxFeedRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *CreateTxFeedRequest) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *CreateTxFeedRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *CreateTxFeedRequest) GetClientToken() string {
	if m != nil {
		return m.ClientToken
	}
	return ""
}

type GetTxFeedRequest struct {
	// Types that are valid to be assigned to Identifier:
	//	*GetTxFeedRequest_Id
	//	*GetTxFeedRequest_Alias
	Identifier isGetTxFeedRequest_Identifier `protobuf_oneof:"identifier"`
}

func (m *GetTxFeedRequest) Reset()                    { *m = GetTxFeedRequest{} }
func (m *GetTxFeedRequest) String() string            { return proto.CompactTextString(m) }
func (*GetTxFeedRequest) ProtoMessage()               {}
func (*GetTxFeedRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

type isGetTxFeedRequest_Identifier interface {
	isGetTxFeedRequest_Identifier()
}

type GetTxFeedRequest_Id struct {
	Id string `protobuf:"bytes,1,opt,name=id,oneof"`
}
type GetTxFeedRequest_Alias struct {
	Alias string `protobuf:"bytes,2,opt,name=alias,oneof"`
}

func (*GetTxFeedRequest_Id) isGetTxFeedRequest_Identifier()    {}
func (*GetTxFeedRequest_Alias) isGetTxFeedRequest_Identifier() {}

func (m *GetTxFeedRequest) GetIdentifier() isGetTxFeedRequest_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *GetTxFeedRequest) GetId() string {
	if x, ok := m.GetIdentifier().(*GetTxFeedRequest_Id); ok {
		return x.Id
	}
	return ""
}

func (m *GetTxFeedRequest) GetAlias() string {
	if x, ok := m.GetIdentifier().(*GetTxFeedRequest_Alias); ok {
		return x.Alias
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GetTxFeedRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GetTxFeedRequest_OneofMarshaler, _GetTxFeedRequest_OneofUnmarshaler, _GetTxFeedRequest_OneofSizer, []interface{}{
		(*GetTxFeedRequest_Id)(nil),
		(*GetTxFeedRequest_Alias)(nil),
	}
}

func _GetTxFeedRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GetTxFeedRequest)
	// identifier
	switch x := m.Identifier.(type) {
	case *GetTxFeedRequest_Id:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Id)
	case *GetTxFeedRequest_Alias:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Alias)
	case nil:
	default:
		return fmt.Errorf("GetTxFeedRequest.Identifier has unexpected type %T", x)
	}
	return nil
}

func _GetTxFeedRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GetTxFeedRequest)
	switch tag {
	case 1: // identifier.id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Identifier = &GetTxFeedRequest_Id{x}
		return true, err
	case 2: // identifier.alias
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Identifier = &GetTxFeedRequest_Alias{x}
		return true, err
	default:
		return false, nil
	}
}

func _GetTxFeedRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GetTxFeedRequest)
	// identifier
	switch x := m.Identifier.(type) {
	case *GetTxFeedRequest_Id:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Id)))
		n += len(x.Id)
	case *GetTxFeedRequest_Alias:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Alias)))
		n += len(x.Alias)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type UpdateTxFeedRequest struct {
	// Types that are valid to be assigned to Identifier:
	//	*UpdateTxFeedRequest_Id
	//	*UpdateTxFeedRequest_Alias
	Identifier    isUpdateTxFeedRequest_Identifier `protobuf_oneof:"identifier"`
	PreviousAfter string                           `protobuf:"bytes,3,opt,name=previous_after,json=previousAfter" json:"previous_after,omitempty"`
	After         string                           `protobuf:"bytes,4,opt,name=after" json:"after,omitempty"`
}

func (m *UpdateTxFeedRequest) Reset()                    { *m = UpdateTxFeedRequest{} }
func (m *UpdateTxFeedRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateTxFeedRequest) ProtoMessage()               {}
func (*UpdateTxFeedRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

type isUpdateTxFeedRequest_Identifier interface {
	isUpdateTxFeedRequest_Identifier()
}

type UpdateTxFeedRequest_Id struct {
	Id string `protobuf:"bytes,1,opt,name=id,oneof"`
}
type UpdateTxFeedRequest_Alias struct {
	Alias string `protobuf:"bytes,2,opt,name=alias,oneof"`
}

func (*UpdateTxFeedRequest_Id) isUpdateTxFeedRequest_Identifier()    {}
func (*UpdateTxFeedRequest_Alias) isUpdateTxFeedRequest_Identifier() {}

func (m *UpdateTxFeedRequest) GetIdentifier() isUpdateTxFeedRequest_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *UpdateTxFeedRequest) GetId() string {
	if x, ok := m.GetIdentifier().(*UpdateTxFeedRequest_Id); ok {
		return x.Id
	}
	return ""
}

func (m *UpdateTxFeedRequest) GetAlias() string {
	if x, ok := m.GetIdentifier().(*UpdateTxFeedRequest_Alias); ok {
		return x.Alias
	}
	return ""
}

func (m *UpdateTxFeedRequest) GetPreviousAfter() string {
	if m != nil {
		return m.PreviousAfter
	}
	return ""
}

func (m *UpdateTxFeedRequest) GetAfter() string {
	if m != nil {
		return m.After
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UpdateTxFeedRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UpdateTxFeedRequest_OneofMarshaler, _UpdateTxFeedRequest_OneofUnmarshaler, _UpdateTxFeedRequest_OneofSizer, []interface{}{
		(*UpdateTxFeedRequest_Id)(nil),
		(*UpdateTxFeedRequest_Alias)(nil),
	}
}

func _UpdateTxFeedRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UpdateTxFeedRequest)
	// identifier
	switch x := m.Identifier.(type) {
	case *UpdateTxFeedRequest_Id:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Id)
	case *UpdateTxFeedRequest_Alias:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Alias)
	case nil:
	default:
		return fmt.Errorf("UpdateTxFeedRequest.Identifier has unexpected type %T", x)
	}
	return nil
}

func _UpdateTxFeedRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UpdateTxFeedRequest)
	switch tag {
	case 1: // identifier.id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Identifier = &UpdateTxFeedRequest_Id{x}
		return true, err
	case 2: // identifier.alias
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Identifier = &UpdateTxFeedRequest_Alias{x}
		return true, err
	default:
		return false, nil
	}
}

func _UpdateTxFeedRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UpdateTxFeedRequest)
	// identifier
	switch x := m.Identifier.(type) {
	case *UpdateTxFeedRequest_Id:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Id)))
		n += len(x.Id)
	case *UpdateTxFeedRequest_Alias:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Alias)))
		n += len(x.Alias)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type DeleteTxFeedRequest struct {
	// Types that are valid to be assigned to Identifier:
	//	*DeleteTxFeedRequest_Id
	//	*DeleteTxFeedRequest_Alias
	Identifier isDeleteTxFeedRequest_Identifier `protobuf_oneof:"identifier"`
}

func (m *DeleteTxFeedRequest) Reset()                    { *m = DeleteTxFeedRequest{} }
func (m *DeleteTxFeedRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteTxFeedRequest) ProtoMessage()               {}
func (*DeleteTxFeedRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

type isDeleteTxFeedRequest_Identifier interface {
	isDeleteTxFeedRequest_Identifier()
}

type DeleteTxFeedRequest_Id struct {
	Id string `protobuf:"bytes,1,opt,name=id,oneof"`
}
type DeleteTxFeedRequest_Alias struct {
	Alias string `protobuf:"bytes,2,opt,name=alias,oneof"`
}

func (*DeleteTxFeedRequest_Id) isDeleteTxFeedRequest_Identifier()    {}
func (*DeleteTxFeedRequest_Alias) isDeleteTxFeedRequest_Identifier() {}

func (m *DeleteTxFeedRequest) GetIdentifier() isDeleteTxFeedRequest_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *DeleteTxFeedRequest) GetId() string {
	if x, ok := m.GetIdentifier().(*DeleteTxFeedRequest_Id); ok {
		return x.Id
	}
	return ""
}

func (m *DeleteTxFeedRequest) GetAlias() string {
	if x, ok := m.GetIdentifier().(*DeleteTxFeedRequest_Alias); ok {
		return x.Alias
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DeleteTxFeedRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DeleteTxFeedRequest_OneofMarshaler, _DeleteTxFeedRequest_OneofUnmarshaler, _DeleteTxFeedRequest_OneofSizer, []interface{}{
		(*DeleteTxFeedRequest_Id)(nil),
		(*DeleteTxFeedRequest_Alias)(nil),
	}
}

func _DeleteTxFeedRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DeleteTxFeedRequest)
	// identifier
	switch x := m.Identifier.(type) {
	case *DeleteTxFeedRequest_Id:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Id)
	case *DeleteTxFeedRequest_Alias:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Alias)
	case nil:
	default:
		return fmt.Errorf("DeleteTxFeedRequest.Identifier has unexpected type %T", x)
	}
	return nil
}

func _DeleteTxFeedRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DeleteTxFeedRequest)
	switch tag {
	case 1: // identifier.id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Identifier = &DeleteTxFeedRequest_Id{x}
		return true, err
	case 2: // identifier.alias
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Identifier = &DeleteTxFeedRequest_Alias{x}
		return true, err
	default:
		return false, nil
	}
}

func _DeleteTxFeedRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DeleteTxFeedRequest)
	// identifier
	switch x := m.Identifier.(type) {
	case *DeleteTxFeedRequest_Id:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Id)))
		n += len(x.Id)
	case *DeleteTxFeedRequest_Alias:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Alias)))
		n += len(x.Alias)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CreateAccessTokenRequest struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
}

func (m *CreateAccessTokenRequest) Reset()                    { *m = CreateAccessTokenRequest{} }
func (m *CreateAccessTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAccessTokenRequest) ProtoMessage()               {}
func (*CreateAccessTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *CreateAccessTokenRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateAccessTokenRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type CreateAccessTokenResponse struct {
	Token *AccessToken `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Error *Error       `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *CreateAccessTokenResponse) Reset()                    { *m = CreateAccessTokenResponse{} }
func (m *CreateAccessTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateAccessTokenResponse) ProtoMessage()               {}
func (*CreateAccessTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *CreateAccessTokenResponse) GetToken() *AccessToken {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *CreateAccessTokenResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ListAccessTokensQuery struct {
	Type     string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	PageSize int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	After    string `protobuf:"bytes,3,opt,name=after" json:"after,omitempty"`
}

func (m *ListAccessTokensQuery) Reset()                    { *m = ListAccessTokensQuery{} }
func (m *ListAccessTokensQuery) String() string            { return proto.CompactTextString(m) }
func (*ListAccessTokensQuery) ProtoMessage()               {}
func (*ListAccessTokensQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *ListAccessTokensQuery) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ListAccessTokensQuery) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListAccessTokensQuery) GetAfter() string {
	if m != nil {
		return m.After
	}
	return ""
}

type ListAccessTokensResponse struct {
	Items    []*AccessToken         `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	LastPage bool                   `protobuf:"varint,2,opt,name=last_page,json=lastPage" json:"last_page,omitempty"`
	Next     *ListAccessTokensQuery `protobuf:"bytes,3,opt,name=next" json:"next,omitempty"`
	Error    *Error                 `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *ListAccessTokensResponse) Reset()                    { *m = ListAccessTokensResponse{} }
func (m *ListAccessTokensResponse) String() string            { return proto.CompactTextString(m) }
func (*ListAccessTokensResponse) ProtoMessage()               {}
func (*ListAccessTokensResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ListAccessTokensResponse) GetItems() []*AccessToken {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ListAccessTokensResponse) GetLastPage() bool {
	if m != nil {
		return m.LastPage
	}
	return false
}

func (m *ListAccessTokensResponse) GetNext() *ListAccessTokensQuery {
	if m != nil {
		return m.Next
	}
	return nil
}

func (m *ListAccessTokensResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type DeleteAccessTokenRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteAccessTokenRequest) Reset()                    { *m = DeleteAccessTokenRequest{} }
func (m *DeleteAccessTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAccessTokenRequest) ProtoMessage()               {}
func (*DeleteAccessTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *DeleteAccessTokenRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AccessToken struct {
	Id        string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Token     string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	Type      string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	CreatedAt string `protobuf:"bytes,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
}

func (m *AccessToken) Reset()                    { *m = AccessToken{} }
func (m *AccessToken) String() string            { return proto.CompactTextString(m) }
func (*AccessToken) ProtoMessage()               {}
func (*AccessToken) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *AccessToken) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AccessToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *AccessToken) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AccessToken) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

type FilterParam struct {
	// Types that are valid to be assigned to Value:
	//	*FilterParam_String_
	//	*FilterParam_Int64
	//	*FilterParam_Bytes
	//	*FilterParam_Bool
	Value isFilterParam_Value `protobuf_oneof:"value"`
}

func (m *FilterParam) Reset()                    { *m = FilterParam{} }
func (m *FilterParam) String() string            { return proto.CompactTextString(m) }
func (*FilterParam) ProtoMessage()               {}
func (*FilterParam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

type isFilterParam_Value interface {
	isFilterParam_Value()
}

type FilterParam_String_ struct {
	String_ string `protobuf:"bytes,1,opt,name=string,oneof"`
}
type FilterParam_Int64 struct {
	Int64 int64 `protobuf:"varint,2,opt,name=int64,oneof"`
}
type FilterParam_Bytes struct {
	Bytes []byte `protobuf:"bytes,3,opt,name=bytes,proto3,oneof"`
}
type FilterParam_Bool struct {
	Bool bool `protobuf:"varint,4,opt,name=bool,oneof"`
}

func (*FilterParam_String_) isFilterParam_Value() {}
func (*FilterParam_Int64) isFilterParam_Value()   {}
func (*FilterParam_Bytes) isFilterParam_Value()   {}
func (*FilterParam_Bool) isFilterParam_Value()    {}

func (m *FilterParam) GetValue() isFilterParam_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *FilterParam) GetString_() string {
	if x, ok := m.GetValue().(*FilterParam_String_); ok {
		return x.String_
	}
	return ""
}

func (m *FilterParam) GetInt64() int64 {
	if x, ok := m.GetValue().(*FilterParam_Int64); ok {
		return x.Int64
	}
	return 0
}

func (m *FilterParam) GetBytes() []byte {
	if x, ok := m.GetValue().(*FilterParam_Bytes); ok {
		return x.Bytes
	}
	return nil
}

func (m *FilterParam) GetBool() bool {
	if x, ok := m.GetValue().(*FilterParam_Bool); ok {
		return x.Bool
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FilterParam) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FilterParam_OneofMarshaler, _FilterParam_OneofUnmarshaler, _FilterParam_OneofSizer, []interface{}{
		(*FilterParam_String_)(nil),
		(*FilterParam_Int64)(nil),
		(*FilterParam_Bytes)(nil),
		(*FilterParam_Bool)(nil),
	}
}

func _FilterParam_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FilterParam)
	// value
	switch x := m.Value.(type) {
	case *FilterParam_String_:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.String_)
	case *FilterParam_Int64:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Int64))
	case *FilterParam_Bytes:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Bytes)
	case *FilterParam_Bool:
		t := uint64(0)
		if x.Bool {
			t = 1
		}
		b.EncodeVarint(4<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("FilterParam.Value has unexpected type %T", x)
	}
	return nil
}

func _FilterParam_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FilterParam)
	switch tag {
	case 1: // value.string
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Value = &FilterParam_String_{x}
		return true, err
	case 2: // value.int64
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &FilterParam_Int64{int64(x)}
		return true, err
	case 3: // value.bytes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Value = &FilterParam_Bytes{x}
		return true, err
	case 4: // value.bool
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &FilterParam_Bool{x != 0}
		return true, err
	default:
		return false, nil
	}
}

func _FilterParam_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FilterParam)
	// value
	switch x := m.Value.(type) {
	case *FilterParam_String_:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.String_)))
		n += len(x.String_)
	case *FilterParam_Int64:
		n += proto.SizeVarint(2<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Int64))
	case *FilterParam_Bytes:
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Bytes)))
		n += len(x.Bytes)
	case *FilterParam_Bool:
		n += proto.SizeVarint(4<<3 | proto.WireVarint)
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ListAccountsQuery struct {
	Filter       string         `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	FilterParams []*FilterParam `protobuf:"bytes,2,rep,name=filter_params,json=filterParams" json:"filter_params,omitempty"`
	After        string         `protobuf:"bytes,3,opt,name=after" json:"after,omitempty"`
	PageSize     int32          `protobuf:"varint,4,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (m *ListAccountsQuery) Reset()                    { *m = ListAccountsQuery{} }
func (m *ListAccountsQuery) String() string            { return proto.CompactTextString(m) }
func (*ListAccountsQuery) ProtoMessage()               {}
func (*ListAccountsQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *ListAccountsQuery) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListAccountsQuery) GetFilterParams() []*FilterParam {
	if m != nil {
		return m.FilterParams
	}
	return nil
}

func (m *ListAccountsQuery) GetAfter() string {
	if m != nil {
		return m.After
	}
	return ""
}

func (m *ListAccountsQuery) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type ListAccountsResponse struct {
	Items    []*Account         `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	LastPage bool               `protobuf:"varint,2,opt,name=last_page,json=lastPage" json:"last_page,omitempty"`
	Next     *ListAccountsQuery `protobuf:"bytes,3,opt,name=next" json:"next,omitempty"`
	Error    *Error             `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *ListAccountsResponse) Reset()                    { *m = ListAccountsResponse{} }
func (m *ListAccountsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListAccountsResponse) ProtoMessage()               {}
func (*ListAccountsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *ListAccountsResponse) GetItems() []*Account {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ListAccountsResponse) GetLastPage() bool {
	if m != nil {
		return m.LastPage
	}
	return false
}

func (m *ListAccountsResponse) GetNext() *ListAccountsQuery {
	if m != nil {
		return m.Next
	}
	return nil
}

func (m *ListAccountsResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ListAssetsQuery struct {
	Filter       string         `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	FilterParams []*FilterParam `protobuf:"bytes,2,rep,name=filter_params,json=filterParams" json:"filter_params,omitempty"`
	After        string         `protobuf:"bytes,3,opt,name=after" json:"after,omitempty"`
	PageSize     int32          `protobuf:"varint,4,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (m *ListAssetsQuery) Reset()                    { *m = ListAssetsQuery{} }
func (m *ListAssetsQuery) String() string            { return proto.CompactTextString(m) }
func (*ListAssetsQuery) ProtoMessage()               {}
func (*ListAssetsQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *ListAssetsQuery) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListAssetsQuery) GetFilterParams() []*FilterParam {
	if m != nil {
		return m.FilterParams
	}
	return nil
}

func (m *ListAssetsQuery) GetAfter() string {
	if m != nil {
		return m.After
	}
	return ""
}

func (m *ListAssetsQuery) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type ListAssetsResponse struct {
	Items    []*Asset         `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	LastPage bool             `protobuf:"varint,2,opt,name=last_page,json=lastPage" json:"last_page,omitempty"`
	Next     *ListAssetsQuery `protobuf:"bytes,3,opt,name=next" json:"next,omitempty"`
	Error    *Error           `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *ListAssetsResponse) Reset()                    { *m = ListAssetsResponse{} }
func (m *ListAssetsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListAssetsResponse) ProtoMessage()               {}
func (*ListAssetsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *ListAssetsResponse) GetItems() []*Asset {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ListAssetsResponse) GetLastPage() bool {
	if m != nil {
		return m.LastPage
	}
	return false
}

func (m *ListAssetsResponse) GetNext() *ListAssetsQuery {
	if m != nil {
		return m.Next
	}
	return nil
}

func (m *ListAssetsResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ListBalancesQuery struct {
	Filter       string         `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	FilterParams []*FilterParam `protobuf:"bytes,2,rep,name=filter_params,json=filterParams" json:"filter_params,omitempty"`
	SumBy        []string       `protobuf:"bytes,3,rep,name=sum_by,json=sumBy" json:"sum_by,omitempty"`
	Timestamp    uint64         `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *ListBalancesQuery) Reset()                    { *m = ListBalancesQuery{} }
func (m *ListBalancesQuery) String() string            { return proto.CompactTextString(m) }
func (*ListBalancesQuery) ProtoMessage()               {}
func (*ListBalancesQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *ListBalancesQuery) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListBalancesQuery) GetFilterParams() []*FilterParam {
	if m != nil {
		return m.FilterParams
	}
	return nil
}

func (m *ListBalancesQuery) GetSumBy() []string {
	if m != nil {
		return m.SumBy
	}
	return nil
}

func (m *ListBalancesQuery) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type ListBalancesResponse struct {
	Items    []byte             `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
	LastPage bool               `protobuf:"varint,2,opt,name=last_page,json=lastPage" json:"last_page,omitempty"`
	Next     *ListBalancesQuery `protobuf:"bytes,3,opt,name=next" json:"next,omitempty"`
	Error    *Error             `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *ListBalancesResponse) Reset()                    { *m = ListBalancesResponse{} }
func (m *ListBalancesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListBalancesResponse) ProtoMessage()               {}
func (*ListBalancesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *ListBalancesResponse) GetItems() []byte {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ListBalancesResponse) GetLastPage() bool {
	if m != nil {
		return m.LastPage
	}
	return false
}

func (m *ListBalancesResponse) GetNext() *ListBalancesQuery {
	if m != nil {
		return m.Next
	}
	return nil
}

func (m *ListBalancesResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ListTxFeedsQuery struct {
	After    string `protobuf:"bytes,1,opt,name=after" json:"after,omitempty"`
	PageSize int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (m *ListTxFeedsQuery) Reset()                    { *m = ListTxFeedsQuery{} }
func (m *ListTxFeedsQuery) String() string            { return proto.CompactTextString(m) }
func (*ListTxFeedsQuery) ProtoMessage()               {}
func (*ListTxFeedsQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *ListTxFeedsQuery) GetAfter() string {
	if m != nil {
		return m.After
	}
	return ""
}

func (m *ListTxFeedsQuery) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type ListTxFeedsResponse struct {
	Items    []*TxFeed         `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	LastPage bool              `protobuf:"varint,2,opt,name=last_page,json=lastPage" json:"last_page,omitempty"`
	Next     *ListTxFeedsQuery `protobuf:"bytes,3,opt,name=next" json:"next,omitempty"`
	Error    *Error            `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *ListTxFeedsResponse) Reset()                    { *m = ListTxFeedsResponse{} }
func (m *ListTxFeedsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListTxFeedsResponse) ProtoMessage()               {}
func (*ListTxFeedsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *ListTxFeedsResponse) GetItems() []*TxFeed {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ListTxFeedsResponse) GetLastPage() bool {
	if m != nil {
		return m.LastPage
	}
	return false
}

func (m *ListTxFeedsResponse) GetNext() *ListTxFeedsQuery {
	if m != nil {
		return m.Next
	}
	return nil
}

func (m *ListTxFeedsResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ListTxsQuery struct {
	Filter                string         `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	FilterParams          []*FilterParam `protobuf:"bytes,2,rep,name=filter_params,json=filterParams" json:"filter_params,omitempty"`
	AscendingWithLongPoll bool           `protobuf:"varint,3,opt,name=ascending_with_long_poll,json=ascendingWithLongPoll" json:"ascending_with_long_poll,omitempty"`
	Timeout               string         `protobuf:"bytes,4,opt,name=timeout" json:"timeout,omitempty"`
	StartTime             uint64         `protobuf:"varint,5,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime               uint64         `protobuf:"varint,6,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	After                 string         `protobuf:"bytes,7,opt,name=after" json:"after,omitempty"`
	PageSize              int32          `protobuf:"varint,8,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (m *ListTxsQuery) Reset()                    { *m = ListTxsQuery{} }
func (m *ListTxsQuery) String() string            { return proto.CompactTextString(m) }
func (*ListTxsQuery) ProtoMessage()               {}
func (*ListTxsQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *ListTxsQuery) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListTxsQuery) GetFilterParams() []*FilterParam {
	if m != nil {
		return m.FilterParams
	}
	return nil
}

func (m *ListTxsQuery) GetAscendingWithLongPoll() bool {
	if m != nil {
		return m.AscendingWithLongPoll
	}
	return false
}

func (m *ListTxsQuery) GetTimeout() string {
	if m != nil {
		return m.Timeout
	}
	return ""
}

func (m *ListTxsQuery) GetStartTime() uint64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ListTxsQuery) GetEndTime() uint64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *ListTxsQuery) GetAfter() string {
	if m != nil {
		return m.After
	}
	return ""
}

func (m *ListTxsQuery) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type ListTxsResponse struct {
	Items    []byte        `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
	LastPage bool          `protobuf:"varint,2,opt,name=last_page,json=lastPage" json:"last_page,omitempty"`
	Next     *ListTxsQuery `protobuf:"bytes,3,opt,name=next" json:"next,omitempty"`
	Error    *Error        `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *ListTxsResponse) Reset()                    { *m = ListTxsResponse{} }
func (m *ListTxsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListTxsResponse) ProtoMessage()               {}
func (*ListTxsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *ListTxsResponse) GetItems() []byte {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ListTxsResponse) GetLastPage() bool {
	if m != nil {
		return m.LastPage
	}
	return false
}

func (m *ListTxsResponse) GetNext() *ListTxsQuery {
	if m != nil {
		return m.Next
	}
	return nil
}

func (m *ListTxsResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ListUnspentOutputsQuery struct {
	Filter       string         `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	FilterParams []*FilterParam `protobuf:"bytes,2,rep,name=filter_params,json=filterParams" json:"filter_params,omitempty"`
	After        string         `protobuf:"bytes,3,opt,name=after" json:"after,omitempty"`
	Timestamp    uint64         `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	PageSize     int32          `protobuf:"varint,5,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (m *ListUnspentOutputsQuery) Reset()                    { *m = ListUnspentOutputsQuery{} }
func (m *ListUnspentOutputsQuery) String() string            { return proto.CompactTextString(m) }
func (*ListUnspentOutputsQuery) ProtoMessage()               {}
func (*ListUnspentOutputsQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *ListUnspentOutputsQuery) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListUnspentOutputsQuery) GetFilterParams() []*FilterParam {
	if m != nil {
		return m.FilterParams
	}
	return nil
}

func (m *ListUnspentOutputsQuery) GetAfter() string {
	if m != nil {
		return m.After
	}
	return ""
}

func (m *ListUnspentOutputsQuery) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ListUnspentOutputsQuery) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type ListUnspentOutputsResponse struct {
	Items    []byte                   `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
	LastPage bool                     `protobuf:"varint,2,opt,name=last_page,json=lastPage" json:"last_page,omitempty"`
	Next     *ListUnspentOutputsQuery `protobuf:"bytes,3,opt,name=next" json:"next,omitempty"`
	Error    *Error                   `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *ListUnspentOutputsResponse) Reset()                    { *m = ListUnspentOutputsResponse{} }
func (m *ListUnspentOutputsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListUnspentOutputsResponse) ProtoMessage()               {}
func (*ListUnspentOutputsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *ListUnspentOutputsResponse) GetItems() []byte {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ListUnspentOutputsResponse) GetLastPage() bool {
	if m != nil {
		return m.LastPage
	}
	return false
}

func (m *ListUnspentOutputsResponse) GetNext() *ListUnspentOutputsQuery {
	if m != nil {
		return m.Next
	}
	return nil
}

func (m *ListUnspentOutputsResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ResetRequest struct {
	Everything bool `protobuf:"varint,1,opt,name=everything" json:"everything,omitempty"`
}

func (m *ResetRequest) Reset()                    { *m = ResetRequest{} }
func (m *ResetRequest) String() string            { return proto.CompactTextString(m) }
func (*ResetRequest) ProtoMessage()               {}
func (*ResetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *ResetRequest) GetEverything() bool {
	if m != nil {
		return m.Everything
	}
	return false
}

type InfoResponse struct {
	IsConfigured                  bool                   `protobuf:"varint,1,opt,name=is_configured,json=isConfigured" json:"is_configured,omitempty"`
	ConfiguredAt                  string                 `protobuf:"bytes,2,opt,name=configured_at,json=configuredAt" json:"configured_at,omitempty"`
	IsSigner                      bool                   `protobuf:"varint,3,opt,name=is_signer,json=isSigner" json:"is_signer,omitempty"`
	IsGenerator                   bool                   `protobuf:"varint,4,opt,name=is_generator,json=isGenerator" json:"is_generator,omitempty"`
	GeneratorUrl                  string                 `protobuf:"bytes,5,opt,name=generator_url,json=generatorUrl" json:"generator_url,omitempty"`
	GeneratorAccessToken          string                 `protobuf:"bytes,6,opt,name=generator_access_token,json=generatorAccessToken" json:"generator_access_token,omitempty"`
	BlockchainId                  []byte                 `protobuf:"bytes,7,opt,name=blockchain_id,json=blockchainId,proto3" json:"blockchain_id,omitempty"`
	BlockHeight                   uint64                 `protobuf:"varint,8,opt,name=block_height,json=blockHeight" json:"block_height,omitempty"`
	GeneratorBlockHeight          uint64                 `protobuf:"varint,10,opt,name=generator_block_height,json=generatorBlockHeight" json:"generator_block_height,omitempty"`
	GeneratorBlockHeightFetchedAt string                 `protobuf:"bytes,11,opt,name=generator_block_height_fetched_at,json=generatorBlockHeightFetchedAt" json:"generator_block_height_fetched_at,omitempty"`
	IsProduction                  bool                   `protobuf:"varint,12,opt,name=is_production,json=isProduction" json:"is_production,omitempty"`
	NetworkRpcVersion             int32                  `protobuf:"varint,13,opt,name=network_rpc_version,json=networkRpcVersion" json:"network_rpc_version,omitempty"`
	CoreId                        string                 `protobuf:"bytes,14,opt,name=core_id,json=coreId" json:"core_id,omitempty"`
	Version                       string                 `protobuf:"bytes,15,opt,name=version" json:"version,omitempty"`
	BuildCommit                   string                 `protobuf:"bytes,16,opt,name=build_commit,json=buildCommit" json:"build_commit,omitempty"`
	BuildDate                     string                 `protobuf:"bytes,17,opt,name=build_date,json=buildDate" json:"build_date,omitempty"`
	Health                        map[string]string      `protobuf:"bytes,18,rep,name=health" json:"health,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Snapshot                      *InfoResponse_Snapshot `protobuf:"bytes,19,opt,name=snapshot" json:"snapshot,omitempty"`
	Error                         *Error                 `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *InfoResponse) Reset()                    { *m = InfoResponse{} }
func (m *InfoResponse) String() string            { return proto.CompactTextString(m) }
func (*InfoResponse) ProtoMessage()               {}
func (*InfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *InfoResponse) GetIsConfigured() bool {
	if m != nil {
		return m.IsConfigured
	}
	return false
}

func (m *InfoResponse) GetConfiguredAt() string {
	if m != nil {
		return m.ConfiguredAt
	}
	return ""
}

func (m *InfoResponse) GetIsSigner() bool {
	if m != nil {
		return m.IsSigner
	}
	return false
}

func (m *InfoResponse) GetIsGenerator() bool {
	if m != nil {
		return m.IsGenerator
	}
	return false
}

func (m *InfoResponse) GetGeneratorUrl() string {
	if m != nil {
		return m.GeneratorUrl
	}
	return ""
}

func (m *InfoResponse) GetGeneratorAccessToken() string {
	if m != nil {
		return m.GeneratorAccessToken
	}
	return ""
}

func (m *InfoResponse) GetBlockchainId() []byte {
	if m != nil {
		return m.BlockchainId
	}
	return nil
}

func (m *InfoResponse) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *InfoResponse) GetGeneratorBlockHeight() uint64 {
	if m != nil {
		return m.GeneratorBlockHeight
	}
	return 0
}

func (m *InfoResponse) GetGeneratorBlockHeightFetchedAt() string {
	if m != nil {
		return m.GeneratorBlockHeightFetchedAt
	}
	return ""
}

func (m *InfoResponse) GetIsProduction() bool {
	if m != nil {
		return m.IsProduction
	}
	return false
}

func (m *InfoResponse) GetNetworkRpcVersion() int32 {
	if m != nil {
		return m.NetworkRpcVersion
	}
	return 0
}

func (m *InfoResponse) GetCoreId() string {
	if m != nil {
		return m.CoreId
	}
	return ""
}

func (m *InfoResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *InfoResponse) GetBuildCommit() string {
	if m != nil {
		return m.BuildCommit
	}
	return ""
}

func (m *InfoResponse) GetBuildDate() string {
	if m != nil {
		return m.BuildDate
	}
	return ""
}

func (m *InfoResponse) GetHealth() map[string]string {
	if m != nil {
		return m.Health
	}
	return nil
}

func (m *InfoResponse) GetSnapshot() *InfoResponse_Snapshot {
	if m != nil {
		return m.Snapshot
	}
	return nil
}

func (m *InfoResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type InfoResponse_Snapshot struct {
	Attempt    int32  `protobuf:"varint,1,opt,name=attempt" json:"attempt,omitempty"`
	Height     uint64 `protobuf:"varint,2,opt,name=height" json:"height,omitempty"`
	Size       uint64 `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	Downloaded uint64 `protobuf:"varint,4,opt,name=downloaded" json:"downloaded,omitempty"`
	InProgress bool   `protobuf:"varint,5,opt,name=in_progress,json=inProgress" json:"in_progress,omitempty"`
}

func (m *InfoResponse_Snapshot) Reset()                    { *m = InfoResponse_Snapshot{} }
func (m *InfoResponse_Snapshot) String() string            { return proto.CompactTextString(m) }
func (*InfoResponse_Snapshot) ProtoMessage()               {}
func (*InfoResponse_Snapshot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37, 0} }

func (m *InfoResponse_Snapshot) GetAttempt() int32 {
	if m != nil {
		return m.Attempt
	}
	return 0
}

func (m *InfoResponse_Snapshot) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *InfoResponse_Snapshot) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *InfoResponse_Snapshot) GetDownloaded() uint64 {
	if m != nil {
		return m.Downloaded
	}
	return 0
}

func (m *InfoResponse_Snapshot) GetInProgress() bool {
	if m != nil {
		return m.InProgress
	}
	return false
}

type ConfigureRequest struct {
	IsSigner             bool                            `protobuf:"varint,1,opt,name=is_signer,json=isSigner" json:"is_signer,omitempty"`
	IsGenerator          bool                            `protobuf:"varint,2,opt,name=is_generator,json=isGenerator" json:"is_generator,omitempty"`
	BlockchainId         []byte                          `protobuf:"bytes,3,opt,name=blockchain_id,json=blockchainId,proto3" json:"blockchain_id,omitempty"`
	GeneratorUrl         string                          `protobuf:"bytes,4,opt,name=generator_url,json=generatorUrl" json:"generator_url,omitempty"`
	GeneratorAccessToken string                          `protobuf:"bytes,5,opt,name=generator_access_token,json=generatorAccessToken" json:"generator_access_token,omitempty"`
	BlockPub             []byte                          `protobuf:"bytes,6,opt,name=block_pub,json=blockPub,proto3" json:"block_pub,omitempty"`
	BlockSignerUrls      []*ConfigureRequest_BlockSigner `protobuf:"bytes,7,rep,name=block_signer_urls,json=blockSignerUrls" json:"block_signer_urls,omitempty"`
	Quorum               int32                           `protobuf:"varint,8,opt,name=quorum" json:"quorum,omitempty"`
	MaxIssuanceWindow    string                          `protobuf:"bytes,9,opt,name=max_issuance_window,json=maxIssuanceWindow" json:"max_issuance_window,omitempty"`
}

func (m *ConfigureRequest) Reset()                    { *m = ConfigureRequest{} }
func (m *ConfigureRequest) String() string            { return proto.CompactTextString(m) }
func (*ConfigureRequest) ProtoMessage()               {}
func (*ConfigureRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *ConfigureRequest) GetIsSigner() bool {
	if m != nil {
		return m.IsSigner
	}
	return false
}

func (m *ConfigureRequest) GetIsGenerator() bool {
	if m != nil {
		return m.IsGenerator
	}
	return false
}

func (m *ConfigureRequest) GetBlockchainId() []byte {
	if m != nil {
		return m.BlockchainId
	}
	return nil
}

func (m *ConfigureRequest) GetGeneratorUrl() string {
	if m != nil {
		return m.GeneratorUrl
	}
	return ""
}

func (m *ConfigureRequest) GetGeneratorAccessToken() string {
	if m != nil {
		return m.GeneratorAccessToken
	}
	return ""
}

func (m *ConfigureRequest) GetBlockPub() []byte {
	if m != nil {
		return m.BlockPub
	}
	return nil
}

func (m *ConfigureRequest) GetBlockSignerUrls() []*ConfigureRequest_BlockSigner {
	if m != nil {
		return m.BlockSignerUrls
	}
	return nil
}

func (m *ConfigureRequest) GetQuorum() int32 {
	if m != nil {
		return m.Quorum
	}
	return 0
}

func (m *ConfigureRequest) GetMaxIssuanceWindow() string {
	if m != nil {
		return m.MaxIssuanceWindow
	}
	return ""
}

type ConfigureRequest_BlockSigner struct {
	Url         string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	AccessToken string `protobuf:"bytes,2,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	Pubkey      []byte `protobuf:"bytes,3,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
}

func (m *ConfigureRequest_BlockSigner) Reset()         { *m = ConfigureRequest_BlockSigner{} }
func (m *ConfigureRequest_BlockSigner) String() string { return proto.CompactTextString(m) }
func (*ConfigureRequest_BlockSigner) ProtoMessage()    {}
func (*ConfigureRequest_BlockSigner) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{38, 0}
}

func (m *ConfigureRequest_BlockSigner) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ConfigureRequest_BlockSigner) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *ConfigureRequest_BlockSigner) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

type AssetIdentifier struct {
	// Types that are valid to be assigned to Identifier:
	//	*AssetIdentifier_AssetId
	//	*AssetIdentifier_AssetAlias
	Identifier isAssetIdentifier_Identifier `protobuf_oneof:"identifier"`
}

func (m *AssetIdentifier) Reset()                    { *m = AssetIdentifier{} }
func (m *AssetIdentifier) String() string            { return proto.CompactTextString(m) }
func (*AssetIdentifier) ProtoMessage()               {}
func (*AssetIdentifier) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

type isAssetIdentifier_Identifier interface {
	isAssetIdentifier_Identifier()
}

type AssetIdentifier_AssetId struct {
	AssetId []byte `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3,oneof"`
}
type AssetIdentifier_AssetAlias struct {
	AssetAlias string `protobuf:"bytes,2,opt,name=asset_alias,json=assetAlias,oneof"`
}

func (*AssetIdentifier_AssetId) isAssetIdentifier_Identifier()    {}
func (*AssetIdentifier_AssetAlias) isAssetIdentifier_Identifier() {}

func (m *AssetIdentifier) GetIdentifier() isAssetIdentifier_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *AssetIdentifier) GetAssetId() []byte {
	if x, ok := m.GetIdentifier().(*AssetIdentifier_AssetId); ok {
		return x.AssetId
	}
	return nil
}

func (m *AssetIdentifier) GetAssetAlias() string {
	if x, ok := m.GetIdentifier().(*AssetIdentifier_AssetAlias); ok {
		return x.AssetAlias
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*AssetIdentifier) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _AssetIdentifier_OneofMarshaler, _AssetIdentifier_OneofUnmarshaler, _AssetIdentifier_OneofSizer, []interface{}{
		(*AssetIdentifier_AssetId)(nil),
		(*AssetIdentifier_AssetAlias)(nil),
	}
}

func _AssetIdentifier_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*AssetIdentifier)
	// identifier
	switch x := m.Identifier.(type) {
	case *AssetIdentifier_AssetId:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.AssetId)
	case *AssetIdentifier_AssetAlias:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.AssetAlias)
	case nil:
	default:
		return fmt.Errorf("AssetIdentifier.Identifier has unexpected type %T", x)
	}
	return nil
}

func _AssetIdentifier_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*AssetIdentifier)
	switch tag {
	case 1: // identifier.asset_id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Identifier = &AssetIdentifier_AssetId{x}
		return true, err
	case 2: // identifier.asset_alias
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Identifier = &AssetIdentifier_AssetAlias{x}
		return true, err
	default:
		return false, nil
	}
}

func _AssetIdentifier_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*AssetIdentifier)
	// identifier
	switch x := m.Identifier.(type) {
	case *AssetIdentifier_AssetId:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.AssetId)))
		n += len(x.AssetId)
	case *AssetIdentifier_AssetAlias:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.AssetAlias)))
		n += len(x.AssetAlias)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type AccountIdentifier struct {
	// Types that are valid to be assigned to Identifier:
	//	*AccountIdentifier_AccountId
	//	*AccountIdentifier_AccountAlias
	Identifier isAccountIdentifier_Identifier `protobuf_oneof:"identifier"`
}

func (m *AccountIdentifier) Reset()                    { *m = AccountIdentifier{} }
func (m *AccountIdentifier) String() string            { return proto.CompactTextString(m) }
func (*AccountIdentifier) ProtoMessage()               {}
func (*AccountIdentifier) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

type isAccountIdentifier_Identifier interface {
	isAccountIdentifier_Identifier()
}

type AccountIdentifier_AccountId struct {
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,oneof"`
}
type AccountIdentifier_AccountAlias struct {
	AccountAlias string `protobuf:"bytes,2,opt,name=account_alias,json=accountAlias,oneof"`
}

func (*AccountIdentifier_AccountId) isAccountIdentifier_Identifier()    {}
func (*AccountIdentifier_AccountAlias) isAccountIdentifier_Identifier() {}

func (m *AccountIdentifier) GetIdentifier() isAccountIdentifier_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *AccountIdentifier) GetAccountId() string {
	if x, ok := m.GetIdentifier().(*AccountIdentifier_AccountId); ok {
		return x.AccountId
	}
	return ""
}

func (m *AccountIdentifier) GetAccountAlias() string {
	if x, ok := m.GetIdentifier().(*AccountIdentifier_AccountAlias); ok {
		return x.AccountAlias
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*AccountIdentifier) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _AccountIdentifier_OneofMarshaler, _AccountIdentifier_OneofUnmarshaler, _AccountIdentifier_OneofSizer, []interface{}{
		(*AccountIdentifier_AccountId)(nil),
		(*AccountIdentifier_AccountAlias)(nil),
	}
}

func _AccountIdentifier_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*AccountIdentifier)
	// identifier
	switch x := m.Identifier.(type) {
	case *AccountIdentifier_AccountId:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.AccountId)
	case *AccountIdentifier_AccountAlias:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.AccountAlias)
	case nil:
	default:
		return fmt.Errorf("AccountIdentifier.Identifier has unexpected type %T", x)
	}
	return nil
}

func _AccountIdentifier_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*AccountIdentifier)
	switch tag {
	case 1: // identifier.account_id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Identifier = &AccountIdentifier_AccountId{x}
		return true, err
	case 2: // identifier.account_alias
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Identifier = &AccountIdentifier_AccountAlias{x}
		return true, err
	default:
		return false, nil
	}
}

func _AccountIdentifier_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*AccountIdentifier)
	// identifier
	switch x := m.Identifier.(type) {
	case *AccountIdentifier_AccountId:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.AccountId)))
		n += len(x.AccountId)
	case *AccountIdentifier_AccountAlias:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.AccountAlias)))
		n += len(x.AccountAlias)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Action struct {
	// Types that are valid to be assigned to Action:
	//	*Action_ControlAccount_
	//	*Action_ControlProgram_
	//	*Action_Issue_
	//	*Action_SpendAccount_
	//	*Action_SpendAccountUnspentOutput_
	//	*Action_SetTxReferenceData_
	Action isAction_Action `protobuf_oneof:"action"`
}

func (m *Action) Reset()                    { *m = Action{} }
func (m *Action) String() string            { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()               {}
func (*Action) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

type isAction_Action interface {
	isAction_Action()
}

type Action_ControlAccount_ struct {
	ControlAccount *Action_ControlAccount `protobuf:"bytes,1,opt,name=control_account,json=controlAccount,oneof"`
}
type Action_ControlProgram_ struct {
	ControlProgram *Action_ControlProgram `protobuf:"bytes,2,opt,name=control_program,json=controlProgram,oneof"`
}
type Action_Issue_ struct {
	Issue *Action_Issue `protobuf:"bytes,3,opt,name=issue,oneof"`
}
type Action_SpendAccount_ struct {
	SpendAccount *Action_SpendAccount `protobuf:"bytes,4,opt,name=spend_account,json=spendAccount,oneof"`
}
type Action_SpendAccountUnspentOutput_ struct {
	SpendAccountUnspentOutput *Action_SpendAccountUnspentOutput `protobuf:"bytes,5,opt,name=spend_account_unspent_output,json=spendAccountUnspentOutput,oneof"`
}
type Action_SetTxReferenceData_ struct {
	SetTxReferenceData *Action_SetTxReferenceData `protobuf:"bytes,6,opt,name=set_tx_reference_data,json=setTxReferenceData,oneof"`
}

func (*Action_ControlAccount_) isAction_Action()            {}
func (*Action_ControlProgram_) isAction_Action()            {}
func (*Action_Issue_) isAction_Action()                     {}
func (*Action_SpendAccount_) isAction_Action()              {}
func (*Action_SpendAccountUnspentOutput_) isAction_Action() {}
func (*Action_SetTxReferenceData_) isAction_Action()        {}

func (m *Action) GetAction() isAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *Action) GetControlAccount() *Action_ControlAccount {
	if x, ok := m.GetAction().(*Action_ControlAccount_); ok {
		return x.ControlAccount
	}
	return nil
}

func (m *Action) GetControlProgram() *Action_ControlProgram {
	if x, ok := m.GetAction().(*Action_ControlProgram_); ok {
		return x.ControlProgram
	}
	return nil
}

func (m *Action) GetIssue() *Action_Issue {
	if x, ok := m.GetAction().(*Action_Issue_); ok {
		return x.Issue
	}
	return nil
}

func (m *Action) GetSpendAccount() *Action_SpendAccount {
	if x, ok := m.GetAction().(*Action_SpendAccount_); ok {
		return x.SpendAccount
	}
	return nil
}

func (m *Action) GetSpendAccountUnspentOutput() *Action_SpendAccountUnspentOutput {
	if x, ok := m.GetAction().(*Action_SpendAccountUnspentOutput_); ok {
		return x.SpendAccountUnspentOutput
	}
	return nil
}

func (m *Action) GetSetTxReferenceData() *Action_SetTxReferenceData {
	if x, ok := m.GetAction().(*Action_SetTxReferenceData_); ok {
		return x.SetTxReferenceData
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Action) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Action_OneofMarshaler, _Action_OneofUnmarshaler, _Action_OneofSizer, []interface{}{
		(*Action_ControlAccount_)(nil),
		(*Action_ControlProgram_)(nil),
		(*Action_Issue_)(nil),
		(*Action_SpendAccount_)(nil),
		(*Action_SpendAccountUnspentOutput_)(nil),
		(*Action_SetTxReferenceData_)(nil),
	}
}

func _Action_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Action)
	// action
	switch x := m.Action.(type) {
	case *Action_ControlAccount_:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ControlAccount); err != nil {
			return err
		}
	case *Action_ControlProgram_:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ControlProgram); err != nil {
			return err
		}
	case *Action_Issue_:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Issue); err != nil {
			return err
		}
	case *Action_SpendAccount_:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SpendAccount); err != nil {
			return err
		}
	case *Action_SpendAccountUnspentOutput_:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SpendAccountUnspentOutput); err != nil {
			return err
		}
	case *Action_SetTxReferenceData_:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SetTxReferenceData); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Action.Action has unexpected type %T", x)
	}
	return nil
}

func _Action_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Action)
	switch tag {
	case 1: // action.control_account
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Action_ControlAccount)
		err := b.DecodeMessage(msg)
		m.Action = &Action_ControlAccount_{msg}
		return true, err
	case 2: // action.control_program
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Action_ControlProgram)
		err := b.DecodeMessage(msg)
		m.Action = &Action_ControlProgram_{msg}
		return true, err
	case 3: // action.issue
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Action_Issue)
		err := b.DecodeMessage(msg)
		m.Action = &Action_Issue_{msg}
		return true, err
	case 4: // action.spend_account
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Action_SpendAccount)
		err := b.DecodeMessage(msg)
		m.Action = &Action_SpendAccount_{msg}
		return true, err
	case 5: // action.spend_account_unspent_output
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Action_SpendAccountUnspentOutput)
		err := b.DecodeMessage(msg)
		m.Action = &Action_SpendAccountUnspentOutput_{msg}
		return true, err
	case 6: // action.set_tx_reference_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Action_SetTxReferenceData)
		err := b.DecodeMessage(msg)
		m.Action = &Action_SetTxReferenceData_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Action_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Action)
	// action
	switch x := m.Action.(type) {
	case *Action_ControlAccount_:
		s := proto.Size(x.ControlAccount)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_ControlProgram_:
		s := proto.Size(x.ControlProgram)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_Issue_:
		s := proto.Size(x.Issue)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_SpendAccount_:
		s := proto.Size(x.SpendAccount)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_SpendAccountUnspentOutput_:
		s := proto.Size(x.SpendAccountUnspentOutput)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Action_SetTxReferenceData_:
		s := proto.Size(x.SetTxReferenceData)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Action_ControlAccount struct {
	Asset         *AssetIdentifier   `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
	Amount        uint64             `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Account       *AccountIdentifier `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
	ReferenceData []byte             `protobuf:"bytes,4,opt,name=reference_data,json=referenceData,proto3" json:"reference_data,omitempty"`
}

func (m *Action_ControlAccount) Reset()                    { *m = Action_ControlAccount{} }
func (m *Action_ControlAccount) String() string            { return proto.CompactTextString(m) }
func (*Action_ControlAccount) ProtoMessage()               {}
func (*Action_ControlAccount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41, 0} }

func (m *Action_ControlAccount) GetAsset() *AssetIdentifier {
	if m != nil {
		return m.Asset
	}
	return nil
}

func (m *Action_ControlAccount) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Action_ControlAccount) GetAccount() *AccountIdentifier {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *Action_ControlAccount) GetReferenceData() []byte {
	if m != nil {
		return m.ReferenceData
	}
	return nil
}

type Action_ControlProgram struct {
	Asset          *AssetIdentifier `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
	Amount         uint64           `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	ControlProgram []byte           `protobuf:"bytes,3,opt,name=control_program,json=controlProgram,proto3" json:"control_program,omitempty"`
	ReferenceData  []byte           `protobuf:"bytes,4,opt,name=reference_data,json=referenceData,proto3" json:"reference_data,omitempty"`
}

func (m *Action_ControlProgram) Reset()                    { *m = Action_ControlProgram{} }
func (m *Action_ControlProgram) String() string            { return proto.CompactTextString(m) }
func (*Action_ControlProgram) ProtoMessage()               {}
func (*Action_ControlProgram) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41, 1} }

func (m *Action_ControlProgram) GetAsset() *AssetIdentifier {
	if m != nil {
		return m.Asset
	}
	return nil
}

func (m *Action_ControlProgram) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Action_ControlProgram) GetControlProgram() []byte {
	if m != nil {
		return m.ControlProgram
	}
	return nil
}

func (m *Action_ControlProgram) GetReferenceData() []byte {
	if m != nil {
		return m.ReferenceData
	}
	return nil
}

type Action_Issue struct {
	Asset         *AssetIdentifier `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
	Amount        uint64           `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	ReferenceData []byte           `protobuf:"bytes,3,opt,name=reference_data,json=referenceData,proto3" json:"reference_data,omitempty"`
}

func (m *Action_Issue) Reset()                    { *m = Action_Issue{} }
func (m *Action_Issue) String() string            { return proto.CompactTextString(m) }
func (*Action_Issue) ProtoMessage()               {}
func (*Action_Issue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41, 2} }

func (m *Action_Issue) GetAsset() *AssetIdentifier {
	if m != nil {
		return m.Asset
	}
	return nil
}

func (m *Action_Issue) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Action_Issue) GetReferenceData() []byte {
	if m != nil {
		return m.ReferenceData
	}
	return nil
}

type Action_SpendAccount struct {
	Asset         *AssetIdentifier   `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
	Amount        uint64             `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Account       *AccountIdentifier `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
	ReferenceData []byte             `protobuf:"bytes,4,opt,name=reference_data,json=referenceData,proto3" json:"reference_data,omitempty"`
	ClientToken   string             `protobuf:"bytes,5,opt,name=client_token,json=clientToken" json:"client_token,omitempty"`
}

func (m *Action_SpendAccount) Reset()                    { *m = Action_SpendAccount{} }
func (m *Action_SpendAccount) String() string            { return proto.CompactTextString(m) }
func (*Action_SpendAccount) ProtoMessage()               {}
func (*Action_SpendAccount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41, 3} }

func (m *Action_SpendAccount) GetAsset() *AssetIdentifier {
	if m != nil {
		return m.Asset
	}
	return nil
}

func (m *Action_SpendAccount) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Action_SpendAccount) GetAccount() *AccountIdentifier {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *Action_SpendAccount) GetReferenceData() []byte {
	if m != nil {
		return m.ReferenceData
	}
	return nil
}

func (m *Action_SpendAccount) GetClientToken() string {
	if m != nil {
		return m.ClientToken
	}
	return ""
}

type Action_SpendAccountUnspentOutput struct {
	TxId          []byte `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Position      uint32 `protobuf:"varint,2,opt,name=position" json:"position,omitempty"`
	ReferenceData []byte `protobuf:"bytes,3,opt,name=reference_data,json=referenceData,proto3" json:"reference_data,omitempty"`
	ClientToken   string `protobuf:"bytes,4,opt,name=client_token,json=clientToken" json:"client_token,omitempty"`
}

func (m *Action_SpendAccountUnspentOutput) Reset()         { *m = Action_SpendAccountUnspentOutput{} }
func (m *Action_SpendAccountUnspentOutput) String() string { return proto.CompactTextString(m) }
func (*Action_SpendAccountUnspentOutput) ProtoMessage()    {}
func (*Action_SpendAccountUnspentOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{41, 4}
}

func (m *Action_SpendAccountUnspentOutput) GetTxId() []byte {
	if m != nil {
		return m.TxId
	}
	return nil
}

func (m *Action_SpendAccountUnspentOutput) GetPosition() uint32 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (m *Action_SpendAccountUnspentOutput) GetReferenceData() []byte {
	if m != nil {
		return m.ReferenceData
	}
	return nil
}

func (m *Action_SpendAccountUnspentOutput) GetClientToken() string {
	if m != nil {
		return m.ClientToken
	}
	return ""
}

type Action_SetTxReferenceData struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Action_SetTxReferenceData) Reset()                    { *m = Action_SetTxReferenceData{} }
func (m *Action_SetTxReferenceData) String() string            { return proto.CompactTextString(m) }
func (*Action_SetTxReferenceData) ProtoMessage()               {}
func (*Action_SetTxReferenceData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41, 5} }

func (m *Action_SetTxReferenceData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type BuildTxsRequest struct {
	Requests []*BuildTxsRequest_Request `protobuf:"bytes,1,rep,name=requests" json:"requests,omitempty"`
}

func (m *BuildTxsRequest) Reset()                    { *m = BuildTxsRequest{} }
func (m *BuildTxsRequest) String() string            { return proto.CompactTextString(m) }
func (*BuildTxsRequest) ProtoMessage()               {}
func (*BuildTxsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *BuildTxsRequest) GetRequests() []*BuildTxsRequest_Request {
	if m != nil {
		return m.Requests
	}
	return nil
}

type BuildTxsRequest_Request struct {
	Transaction []byte    `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Actions     []*Action `protobuf:"bytes,2,rep,name=actions" json:"actions,omitempty"`
	Ttl         string    `protobuf:"bytes,3,opt,name=ttl" json:"ttl,omitempty"`
}

func (m *BuildTxsRequest_Request) Reset()                    { *m = BuildTxsRequest_Request{} }
func (m *BuildTxsRequest_Request) String() string            { return proto.CompactTextString(m) }
func (*BuildTxsRequest_Request) ProtoMessage()               {}
func (*BuildTxsRequest_Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42, 0} }

func (m *BuildTxsRequest_Request) GetTransaction() []byte {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *BuildTxsRequest_Request) GetActions() []*Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *BuildTxsRequest_Request) GetTtl() string {
	if m != nil {
		return m.Ttl
	}
	return ""
}

type TxTemplate struct {
	RawTransaction         []byte                           `protobuf:"bytes,1,opt,name=raw_transaction,json=rawTransaction,proto3" json:"raw_transaction,omitempty"`
	SigningInstructions    []*TxTemplate_SigningInstruction `protobuf:"bytes,2,rep,name=signing_instructions,json=signingInstructions" json:"signing_instructions,omitempty"`
	Local                  bool                             `protobuf:"varint,3,opt,name=local" json:"local,omitempty"`
	AllowAdditionalActions bool                             `protobuf:"varint,4,opt,name=allow_additional_actions,json=allowAdditionalActions" json:"allow_additional_actions,omitempty"`
}

func (m *TxTemplate) Reset()                    { *m = TxTemplate{} }
func (m *TxTemplate) String() string            { return proto.CompactTextString(m) }
func (*TxTemplate) ProtoMessage()               {}
func (*TxTemplate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *TxTemplate) GetRawTransaction() []byte {
	if m != nil {
		return m.RawTransaction
	}
	return nil
}

func (m *TxTemplate) GetSigningInstructions() []*TxTemplate_SigningInstruction {
	if m != nil {
		return m.SigningInstructions
	}
	return nil
}

func (m *TxTemplate) GetLocal() bool {
	if m != nil {
		return m.Local
	}
	return false
}

func (m *TxTemplate) GetAllowAdditionalActions() bool {
	if m != nil {
		return m.AllowAdditionalActions
	}
	return false
}

type TxTemplate_KeyID struct {
	Xpub           []byte   `protobuf:"bytes,1,opt,name=xpub,proto3" json:"xpub,omitempty"`
	DerivationPath [][]byte `protobuf:"bytes,2,rep,name=derivation_path,json=derivationPath,proto3" json:"derivation_path,omitempty"`
}

func (m *TxTemplate_KeyID) Reset()                    { *m = TxTemplate_KeyID{} }
func (m *TxTemplate_KeyID) String() string            { return proto.CompactTextString(m) }
func (*TxTemplate_KeyID) ProtoMessage()               {}
func (*TxTemplate_KeyID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43, 0} }

func (m *TxTemplate_KeyID) GetXpub() []byte {
	if m != nil {
		return m.Xpub
	}
	return nil
}

func (m *TxTemplate_KeyID) GetDerivationPath() [][]byte {
	if m != nil {
		return m.DerivationPath
	}
	return nil
}

type TxTemplate_SignatureComponent struct {
	Quorum     int32               `protobuf:"varint,1,opt,name=quorum" json:"quorum,omitempty"`
	KeyIds     []*TxTemplate_KeyID `protobuf:"bytes,2,rep,name=key_ids,json=keyIds" json:"key_ids,omitempty"`
	Program    []byte              `protobuf:"bytes,3,opt,name=program,proto3" json:"program,omitempty"`
	Signatures [][]byte            `protobuf:"bytes,4,rep,name=signatures,proto3" json:"signatures,omitempty"`
}

func (m *TxTemplate_SignatureComponent) Reset()         { *m = TxTemplate_SignatureComponent{} }
func (m *TxTemplate_SignatureComponent) String() string { return proto.CompactTextString(m) }
func (*TxTemplate_SignatureComponent) ProtoMessage()    {}
func (*TxTemplate_SignatureComponent) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{43, 1}
}

func (m *TxTemplate_SignatureComponent) GetQuorum() int32 {
	if m != nil {
		return m.Quorum
	}
	return 0
}

func (m *TxTemplate_SignatureComponent) GetKeyIds() []*TxTemplate_KeyID {
	if m != nil {
		return m.KeyIds
	}
	return nil
}

func (m *TxTemplate_SignatureComponent) GetProgram() []byte {
	if m != nil {
		return m.Program
	}
	return nil
}

func (m *TxTemplate_SignatureComponent) GetSignatures() [][]byte {
	if m != nil {
		return m.Signatures
	}
	return nil
}

type TxTemplate_WitnessComponent struct {
	// Types that are valid to be assigned to Component:
	//	*TxTemplate_WitnessComponent_Signature
	Component isTxTemplate_WitnessComponent_Component `protobuf_oneof:"component"`
}

func (m *TxTemplate_WitnessComponent) Reset()                    { *m = TxTemplate_WitnessComponent{} }
func (m *TxTemplate_WitnessComponent) String() string            { return proto.CompactTextString(m) }
func (*TxTemplate_WitnessComponent) ProtoMessage()               {}
func (*TxTemplate_WitnessComponent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43, 2} }

type isTxTemplate_WitnessComponent_Component interface {
	isTxTemplate_WitnessComponent_Component()
}

type TxTemplate_WitnessComponent_Signature struct {
	Signature *TxTemplate_SignatureComponent `protobuf:"bytes,1,opt,name=signature,oneof"`
}

func (*TxTemplate_WitnessComponent_Signature) isTxTemplate_WitnessComponent_Component() {}

func (m *TxTemplate_WitnessComponent) GetComponent() isTxTemplate_WitnessComponent_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

func (m *TxTemplate_WitnessComponent) GetSignature() *TxTemplate_SignatureComponent {
	if x, ok := m.GetComponent().(*TxTemplate_WitnessComponent_Signature); ok {
		return x.Signature
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TxTemplate_WitnessComponent) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TxTemplate_WitnessComponent_OneofMarshaler, _TxTemplate_WitnessComponent_OneofUnmarshaler, _TxTemplate_WitnessComponent_OneofSizer, []interface{}{
		(*TxTemplate_WitnessComponent_Signature)(nil),
	}
}

func _TxTemplate_WitnessComponent_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TxTemplate_WitnessComponent)
	// component
	switch x := m.Component.(type) {
	case *TxTemplate_WitnessComponent_Signature:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Signature); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TxTemplate_WitnessComponent.Component has unexpected type %T", x)
	}
	return nil
}

func _TxTemplate_WitnessComponent_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TxTemplate_WitnessComponent)
	switch tag {
	case 1: // component.signature
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TxTemplate_SignatureComponent)
		err := b.DecodeMessage(msg)
		m.Component = &TxTemplate_WitnessComponent_Signature{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TxTemplate_WitnessComponent_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TxTemplate_WitnessComponent)
	// component
	switch x := m.Component.(type) {
	case *TxTemplate_WitnessComponent_Signature:
		s := proto.Size(x.Signature)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type TxTemplate_SigningInstruction struct {
	Position          uint32                         `protobuf:"varint,1,opt,name=position" json:"position,omitempty"`
	AssetId           []byte                         `protobuf:"bytes,2,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Amount            uint64                         `protobuf:"varint,3,opt,name=amount" json:"amount,omitempty"`
	WitnessComponents []*TxTemplate_WitnessComponent `protobuf:"bytes,4,rep,name=witness_components,json=witnessComponents" json:"witness_components,omitempty"`
}

func (m *TxTemplate_SigningInstruction) Reset()         { *m = TxTemplate_SigningInstruction{} }
func (m *TxTemplate_SigningInstruction) String() string { return proto.CompactTextString(m) }
func (*TxTemplate_SigningInstruction) ProtoMessage()    {}
func (*TxTemplate_SigningInstruction) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{43, 3}
}

func (m *TxTemplate_SigningInstruction) GetPosition() uint32 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (m *TxTemplate_SigningInstruction) GetAssetId() []byte {
	if m != nil {
		return m.AssetId
	}
	return nil
}

func (m *TxTemplate_SigningInstruction) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TxTemplate_SigningInstruction) GetWitnessComponents() []*TxTemplate_WitnessComponent {
	if m != nil {
		return m.WitnessComponents
	}
	return nil
}

type TxsResponse struct {
	Responses []*TxsResponse_Response `protobuf:"bytes,1,rep,name=responses" json:"responses,omitempty"`
	Error     *Error                  `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *TxsResponse) Reset()                    { *m = TxsResponse{} }
func (m *TxsResponse) String() string            { return proto.CompactTextString(m) }
func (*TxsResponse) ProtoMessage()               {}
func (*TxsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *TxsResponse) GetResponses() []*TxsResponse_Response {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *TxsResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type TxsResponse_Response struct {
	Template *TxTemplate `protobuf:"bytes,1,opt,name=template" json:"template,omitempty"`
	Error    *Error      `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *TxsResponse_Response) Reset()                    { *m = TxsResponse_Response{} }
func (m *TxsResponse_Response) String() string            { return proto.CompactTextString(m) }
func (*TxsResponse_Response) ProtoMessage()               {}
func (*TxsResponse_Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44, 0} }

func (m *TxsResponse_Response) GetTemplate() *TxTemplate {
	if m != nil {
		return m.Template
	}
	return nil
}

func (m *TxsResponse_Response) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type SubmitTxsRequest struct {
	Transactions []*TxTemplate `protobuf:"bytes,1,rep,name=transactions" json:"transactions,omitempty"`
	WaitUntil    string        `protobuf:"bytes,2,opt,name=wait_until,json=waitUntil" json:"wait_until,omitempty"`
}

func (m *SubmitTxsRequest) Reset()                    { *m = SubmitTxsRequest{} }
func (m *SubmitTxsRequest) String() string            { return proto.CompactTextString(m) }
func (*SubmitTxsRequest) ProtoMessage()               {}
func (*SubmitTxsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *SubmitTxsRequest) GetTransactions() []*TxTemplate {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *SubmitTxsRequest) GetWaitUntil() string {
	if m != nil {
		return m.WaitUntil
	}
	return ""
}

type SubmitTxsResponse struct {
	Responses []*SubmitTxsResponse_Response `protobuf:"bytes,1,rep,name=responses" json:"responses,omitempty"`
	Error     *Error                        `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *SubmitTxsResponse) Reset()                    { *m = SubmitTxsResponse{} }
func (m *SubmitTxsResponse) String() string            { return proto.CompactTextString(m) }
func (*SubmitTxsResponse) ProtoMessage()               {}
func (*SubmitTxsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *SubmitTxsResponse) GetResponses() []*SubmitTxsResponse_Response {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *SubmitTxsResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type SubmitTxsResponse_Response struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Error *Error `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *SubmitTxsResponse_Response) Reset()                    { *m = SubmitTxsResponse_Response{} }
func (m *SubmitTxsResponse_Response) String() string            { return proto.CompactTextString(m) }
func (*SubmitTxsResponse_Response) ProtoMessage()               {}
func (*SubmitTxsResponse_Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46, 0} }

func (m *SubmitTxsResponse_Response) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SubmitTxsResponse_Response) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type XPub struct {
	Alias string `protobuf:"bytes,1,opt,name=alias" json:"alias,omitempty"`
	Xpub  []byte `protobuf:"bytes,2,opt,name=xpub,proto3" json:"xpub,omitempty"`
}

func (m *XPub) Reset()                    { *m = XPub{} }
func (m *XPub) String() string            { return proto.CompactTextString(m) }
func (*XPub) ProtoMessage()               {}
func (*XPub) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *XPub) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *XPub) GetXpub() []byte {
	if m != nil {
		return m.Xpub
	}
	return nil
}

type CreateKeyRequest struct {
	Alias string `protobuf:"bytes,1,opt,name=alias" json:"alias,omitempty"`
}

func (m *CreateKeyRequest) Reset()                    { *m = CreateKeyRequest{} }
func (m *CreateKeyRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateKeyRequest) ProtoMessage()               {}
func (*CreateKeyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *CreateKeyRequest) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

type CreateKeyResponse struct {
	Xpub  *XPub  `protobuf:"bytes,1,opt,name=xpub" json:"xpub,omitempty"`
	Error *Error `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *CreateKeyResponse) Reset()                    { *m = CreateKeyResponse{} }
func (m *CreateKeyResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateKeyResponse) ProtoMessage()               {}
func (*CreateKeyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *CreateKeyResponse) GetXpub() *XPub {
	if m != nil {
		return m.Xpub
	}
	return nil
}

func (m *CreateKeyResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ListKeysQuery struct {
	Aliases  []string `protobuf:"bytes,1,rep,name=aliases" json:"aliases,omitempty"`
	After    string   `protobuf:"bytes,2,opt,name=after" json:"after,omitempty"`
	PageSize int32    `protobuf:"varint,3,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (m *ListKeysQuery) Reset()                    { *m = ListKeysQuery{} }
func (m *ListKeysQuery) String() string            { return proto.CompactTextString(m) }
func (*ListKeysQuery) ProtoMessage()               {}
func (*ListKeysQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *ListKeysQuery) GetAliases() []string {
	if m != nil {
		return m.Aliases
	}
	return nil
}

func (m *ListKeysQuery) GetAfter() string {
	if m != nil {
		return m.After
	}
	return ""
}

func (m *ListKeysQuery) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type ListKeysResponse struct {
	Items    []*XPub        `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	LastPage bool           `protobuf:"varint,2,opt,name=last_page,json=lastPage" json:"last_page,omitempty"`
	Next     *ListKeysQuery `protobuf:"bytes,3,opt,name=next" json:"next,omitempty"`
	Error    *Error         `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *ListKeysResponse) Reset()                    { *m = ListKeysResponse{} }
func (m *ListKeysResponse) String() string            { return proto.CompactTextString(m) }
func (*ListKeysResponse) ProtoMessage()               {}
func (*ListKeysResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *ListKeysResponse) GetItems() []*XPub {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ListKeysResponse) GetLastPage() bool {
	if m != nil {
		return m.LastPage
	}
	return false
}

func (m *ListKeysResponse) GetNext() *ListKeysQuery {
	if m != nil {
		return m.Next
	}
	return nil
}

func (m *ListKeysResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type DeleteKeyRequest struct {
	Xpub []byte `protobuf:"bytes,1,opt,name=xpub,proto3" json:"xpub,omitempty"`
}

func (m *DeleteKeyRequest) Reset()                    { *m = DeleteKeyRequest{} }
func (m *DeleteKeyRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteKeyRequest) ProtoMessage()               {}
func (*DeleteKeyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *DeleteKeyRequest) GetXpub() []byte {
	if m != nil {
		return m.Xpub
	}
	return nil
}

type SignTxsRequest struct {
	Transactions []*TxTemplate `protobuf:"bytes,1,rep,name=transactions" json:"transactions,omitempty"`
	Xpubs        [][]byte      `protobuf:"bytes,2,rep,name=xpubs,proto3" json:"xpubs,omitempty"`
}

func (m *SignTxsRequest) Reset()                    { *m = SignTxsRequest{} }
func (m *SignTxsRequest) String() string            { return proto.CompactTextString(m) }
func (*SignTxsRequest) ProtoMessage()               {}
func (*SignTxsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *SignTxsRequest) GetTransactions() []*TxTemplate {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *SignTxsRequest) GetXpubs() [][]byte {
	if m != nil {
		return m.Xpubs
	}
	return nil
}

type SubmitTxRequest struct {
	Transaction []byte `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (m *SubmitTxRequest) Reset()                    { *m = SubmitTxRequest{} }
func (m *SubmitTxRequest) String() string            { return proto.CompactTextString(m) }
func (*SubmitTxRequest) ProtoMessage()               {}
func (*SubmitTxRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *SubmitTxRequest) GetTransaction() []byte {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type SubmitTxResponse struct {
	Ok    bool   `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	Error *Error `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *SubmitTxResponse) Reset()                    { *m = SubmitTxResponse{} }
func (m *SubmitTxResponse) String() string            { return proto.CompactTextString(m) }
func (*SubmitTxResponse) ProtoMessage()               {}
func (*SubmitTxResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *SubmitTxResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *SubmitTxResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type GetBlockRequest struct {
	Height uint64 `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
}

func (m *GetBlockRequest) Reset()                    { *m = GetBlockRequest{} }
func (m *GetBlockRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBlockRequest) ProtoMessage()               {}
func (*GetBlockRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

func (m *GetBlockRequest) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type GetBlockResponse struct {
	Block []byte `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	Error *Error `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *GetBlockResponse) Reset()                    { *m = GetBlockResponse{} }
func (m *GetBlockResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBlockResponse) ProtoMessage()               {}
func (*GetBlockResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *GetBlockResponse) GetBlock() []byte {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *GetBlockResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type GetSnapshotRequest struct {
	Height uint64 `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
}

func (m *GetSnapshotRequest) Reset()                    { *m = GetSnapshotRequest{} }
func (m *GetSnapshotRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSnapshotRequest) ProtoMessage()               {}
func (*GetSnapshotRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

func (m *GetSnapshotRequest) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type GetSnapshotResponse struct {
	Data  []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Error *Error `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *GetSnapshotResponse) Reset()                    { *m = GetSnapshotResponse{} }
func (m *GetSnapshotResponse) String() string            { return proto.CompactTextString(m) }
func (*GetSnapshotResponse) ProtoMessage()               {}
func (*GetSnapshotResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *GetSnapshotResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetSnapshotResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type GetSnapshotInfoResponse struct {
	Height       uint64 `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
	Size         uint64 `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	BlockchainId []byte `protobuf:"bytes,3,opt,name=blockchain_id,json=blockchainId,proto3" json:"blockchain_id,omitempty"`
	Error        *Error `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *GetSnapshotInfoResponse) Reset()                    { *m = GetSnapshotInfoResponse{} }
func (m *GetSnapshotInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*GetSnapshotInfoResponse) ProtoMessage()               {}
func (*GetSnapshotInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

func (m *GetSnapshotInfoResponse) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *GetSnapshotInfoResponse) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *GetSnapshotInfoResponse) GetBlockchainId() []byte {
	if m != nil {
		return m.BlockchainId
	}
	return nil
}

func (m *GetSnapshotInfoResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type GetBlockHeightResponse struct {
	Height uint64 `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
	Error  *Error `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *GetBlockHeightResponse) Reset()                    { *m = GetBlockHeightResponse{} }
func (m *GetBlockHeightResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBlockHeightResponse) ProtoMessage()               {}
func (*GetBlockHeightResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

func (m *GetBlockHeightResponse) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *GetBlockHeightResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type SignBlockRequest struct {
	Block []byte `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
}

func (m *SignBlockRequest) Reset()                    { *m = SignBlockRequest{} }
func (m *SignBlockRequest) String() string            { return proto.CompactTextString(m) }
func (*SignBlockRequest) ProtoMessage()               {}
func (*SignBlockRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *SignBlockRequest) GetBlock() []byte {
	if m != nil {
		return m.Block
	}
	return nil
}

type SignBlockResponse struct {
	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Error     *Error `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *SignBlockResponse) Reset()                    { *m = SignBlockResponse{} }
func (m *SignBlockResponse) String() string            { return proto.CompactTextString(m) }
func (*SignBlockResponse) ProtoMessage()               {}
func (*SignBlockResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

func (m *SignBlockResponse) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *SignBlockResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "chaincore.Empty")
	proto.RegisterType((*ErrorResponse)(nil), "chaincore.ErrorResponse")
	proto.RegisterType((*Error)(nil), "chaincore.Error")
	proto.RegisterType((*Asset)(nil), "chaincore.Asset")
	proto.RegisterType((*Asset_Key)(nil), "chaincore.Asset.Key")
	proto.RegisterType((*CreateAssetsRequest)(nil), "chaincore.CreateAssetsRequest")
	proto.RegisterType((*CreateAssetsRequest_Request)(nil), "chaincore.CreateAssetsRequest.Request")
	proto.RegisterType((*CreateAssetsResponse)(nil), "chaincore.CreateAssetsResponse")
	proto.RegisterType((*CreateAssetsResponse_Response)(nil), "chaincore.CreateAssetsResponse.Response")
	proto.RegisterType((*Account)(nil), "chaincore.Account")
	proto.RegisterType((*Account_Key)(nil), "chaincore.Account.Key")
	proto.RegisterType((*CreateAccountsRequest)(nil), "chaincore.CreateAccountsRequest")
	proto.RegisterType((*CreateAccountsRequest_Request)(nil), "chaincore.CreateAccountsRequest.Request")
	proto.RegisterType((*CreateAccountsResponse)(nil), "chaincore.CreateAccountsResponse")
	proto.RegisterType((*CreateAccountsResponse_Response)(nil), "chaincore.CreateAccountsResponse.Response")
	proto.RegisterType((*CreateControlProgramsRequest)(nil), "chaincore.CreateControlProgramsRequest")
	proto.RegisterType((*CreateControlProgramsRequest_Account)(nil), "chaincore.CreateControlProgramsRequest.Account")
	proto.RegisterType((*CreateControlProgramsRequest_Request)(nil), "chaincore.CreateControlProgramsRequest.Request")
	proto.RegisterType((*CreateControlProgramsResponse)(nil), "chaincore.CreateControlProgramsResponse")
	proto.RegisterType((*CreateControlProgramsResponse_Response)(nil), "chaincore.CreateControlProgramsResponse.Response")
	proto.RegisterType((*TxFeed)(nil), "chaincore.TxFeed")
	proto.RegisterType((*TxFeedResponse)(nil), "chaincore.TxFeedResponse")
	proto.RegisterType((*CreateTxFeedRequest)(nil), "chaincore.CreateTxFeedRequest")
	proto.RegisterType((*GetTxFeedRequest)(nil), "chaincore.GetTxFeedRequest")
	proto.RegisterType((*UpdateTxFeedRequest)(nil), "chaincore.UpdateTxFeedRequest")
	proto.RegisterType((*DeleteTxFeedRequest)(nil), "chaincore.DeleteTxFeedRequest")
	proto.RegisterType((*CreateAccessTokenRequest)(nil), "chaincore.CreateAccessTokenRequest")
	proto.RegisterType((*CreateAccessTokenResponse)(nil), "chaincore.CreateAccessTokenResponse")
	proto.RegisterType((*ListAccessTokensQuery)(nil), "chaincore.ListAccessTokensQuery")
	proto.RegisterType((*ListAccessTokensResponse)(nil), "chaincore.ListAccessTokensResponse")
	proto.RegisterType((*DeleteAccessTokenRequest)(nil), "chaincore.DeleteAccessTokenRequest")
	proto.RegisterType((*AccessToken)(nil), "chaincore.AccessToken")
	proto.RegisterType((*FilterParam)(nil), "chaincore.FilterParam")
	proto.RegisterType((*ListAccountsQuery)(nil), "chaincore.ListAccountsQuery")
	proto.RegisterType((*ListAccountsResponse)(nil), "chaincore.ListAccountsResponse")
	proto.RegisterType((*ListAssetsQuery)(nil), "chaincore.ListAssetsQuery")
	proto.RegisterType((*ListAssetsResponse)(nil), "chaincore.ListAssetsResponse")
	proto.RegisterType((*ListBalancesQuery)(nil), "chaincore.ListBalancesQuery")
	proto.RegisterType((*ListBalancesResponse)(nil), "chaincore.ListBalancesResponse")
	proto.RegisterType((*ListTxFeedsQuery)(nil), "chaincore.ListTxFeedsQuery")
	proto.RegisterType((*ListTxFeedsResponse)(nil), "chaincore.ListTxFeedsResponse")
	proto.RegisterType((*ListTxsQuery)(nil), "chaincore.ListTxsQuery")
	proto.RegisterType((*ListTxsResponse)(nil), "chaincore.ListTxsResponse")
	proto.RegisterType((*ListUnspentOutputsQuery)(nil), "chaincore.ListUnspentOutputsQuery")
	proto.RegisterType((*ListUnspentOutputsResponse)(nil), "chaincore.ListUnspentOutputsResponse")
	proto.RegisterType((*ResetRequest)(nil), "chaincore.ResetRequest")
	proto.RegisterType((*InfoResponse)(nil), "chaincore.InfoResponse")
	proto.RegisterType((*InfoResponse_Snapshot)(nil), "chaincore.InfoResponse.Snapshot")
	proto.RegisterType((*ConfigureRequest)(nil), "chaincore.ConfigureRequest")
	proto.RegisterType((*ConfigureRequest_BlockSigner)(nil), "chaincore.ConfigureRequest.BlockSigner")
	proto.RegisterType((*AssetIdentifier)(nil), "chaincore.AssetIdentifier")
	proto.RegisterType((*AccountIdentifier)(nil), "chaincore.AccountIdentifier")
	proto.RegisterType((*Action)(nil), "chaincore.Action")
	proto.RegisterType((*Action_ControlAccount)(nil), "chaincore.Action.ControlAccount")
	proto.RegisterType((*Action_ControlProgram)(nil), "chaincore.Action.ControlProgram")
	proto.RegisterType((*Action_Issue)(nil), "chaincore.Action.Issue")
	proto.RegisterType((*Action_SpendAccount)(nil), "chaincore.Action.SpendAccount")
	proto.RegisterType((*Action_SpendAccountUnspentOutput)(nil), "chaincore.Action.SpendAccountUnspentOutput")
	proto.RegisterType((*Action_SetTxReferenceData)(nil), "chaincore.Action.SetTxReferenceData")
	proto.RegisterType((*BuildTxsRequest)(nil), "chaincore.BuildTxsRequest")
	proto.RegisterType((*BuildTxsRequest_Request)(nil), "chaincore.BuildTxsRequest.Request")
	proto.RegisterType((*TxTemplate)(nil), "chaincore.TxTemplate")
	proto.RegisterType((*TxTemplate_KeyID)(nil), "chaincore.TxTemplate.KeyID")
	proto.RegisterType((*TxTemplate_SignatureComponent)(nil), "chaincore.TxTemplate.SignatureComponent")
	proto.RegisterType((*TxTemplate_WitnessComponent)(nil), "chaincore.TxTemplate.WitnessComponent")
	proto.RegisterType((*TxTemplate_SigningInstruction)(nil), "chaincore.TxTemplate.SigningInstruction")
	proto.RegisterType((*TxsResponse)(nil), "chaincore.TxsResponse")
	proto.RegisterType((*TxsResponse_Response)(nil), "chaincore.TxsResponse.Response")
	proto.RegisterType((*SubmitTxsRequest)(nil), "chaincore.SubmitTxsRequest")
	proto.RegisterType((*SubmitTxsResponse)(nil), "chaincore.SubmitTxsResponse")
	proto.RegisterType((*SubmitTxsResponse_Response)(nil), "chaincore.SubmitTxsResponse.Response")
	proto.RegisterType((*XPub)(nil), "chaincore.XPub")
	proto.RegisterType((*CreateKeyRequest)(nil), "chaincore.CreateKeyRequest")
	proto.RegisterType((*CreateKeyResponse)(nil), "chaincore.CreateKeyResponse")
	proto.RegisterType((*ListKeysQuery)(nil), "chaincore.ListKeysQuery")
	proto.RegisterType((*ListKeysResponse)(nil), "chaincore.ListKeysResponse")
	proto.RegisterType((*DeleteKeyRequest)(nil), "chaincore.DeleteKeyRequest")
	proto.RegisterType((*SignTxsRequest)(nil), "chaincore.SignTxsRequest")
	proto.RegisterType((*SubmitTxRequest)(nil), "chaincore.SubmitTxRequest")
	proto.RegisterType((*SubmitTxResponse)(nil), "chaincore.SubmitTxResponse")
	proto.RegisterType((*GetBlockRequest)(nil), "chaincore.GetBlockRequest")
	proto.RegisterType((*GetBlockResponse)(nil), "chaincore.GetBlockResponse")
	proto.RegisterType((*GetSnapshotRequest)(nil), "chaincore.GetSnapshotRequest")
	proto.RegisterType((*GetSnapshotResponse)(nil), "chaincore.GetSnapshotResponse")
	proto.RegisterType((*GetSnapshotInfoResponse)(nil), "chaincore.GetSnapshotInfoResponse")
	proto.RegisterType((*GetBlockHeightResponse)(nil), "chaincore.GetBlockHeightResponse")
	proto.RegisterType((*SignBlockRequest)(nil), "chaincore.SignBlockRequest")
	proto.RegisterType((*SignBlockResponse)(nil), "chaincore.SignBlockResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for App service

type AppClient interface {
	CreateAssets(ctx context.Context, in *CreateAssetsRequest, opts ...grpc.CallOption) (*CreateAssetsResponse, error)
	CreateAccounts(ctx context.Context, in *CreateAccountsRequest, opts ...grpc.CallOption) (*CreateAccountsResponse, error)
	CreateControlPrograms(ctx context.Context, in *CreateControlProgramsRequest, opts ...grpc.CallOption) (*CreateControlProgramsResponse, error)
	BuildTxs(ctx context.Context, in *BuildTxsRequest, opts ...grpc.CallOption) (*TxsResponse, error)
	SubmitTxs(ctx context.Context, in *SubmitTxsRequest, opts ...grpc.CallOption) (*SubmitTxsResponse, error)
	CreateTxFeed(ctx context.Context, in *CreateTxFeedRequest, opts ...grpc.CallOption) (*TxFeedResponse, error)
	GetTxFeed(ctx context.Context, in *GetTxFeedRequest, opts ...grpc.CallOption) (*TxFeedResponse, error)
	UpdateTxFeed(ctx context.Context, in *UpdateTxFeedRequest, opts ...grpc.CallOption) (*TxFeedResponse, error)
	DeleteTxFeed(ctx context.Context, in *DeleteTxFeedRequest, opts ...grpc.CallOption) (*ErrorResponse, error)
	CreateAccessToken(ctx context.Context, in *CreateAccessTokenRequest, opts ...grpc.CallOption) (*CreateAccessTokenResponse, error)
	ListAccessTokens(ctx context.Context, in *ListAccessTokensQuery, opts ...grpc.CallOption) (*ListAccessTokensResponse, error)
	DeleteAccessToken(ctx context.Context, in *DeleteAccessTokenRequest, opts ...grpc.CallOption) (*ErrorResponse, error)
	ListAssets(ctx context.Context, in *ListAssetsQuery, opts ...grpc.CallOption) (*ListAssetsResponse, error)
	ListAccounts(ctx context.Context, in *ListAccountsQuery, opts ...grpc.CallOption) (*ListAccountsResponse, error)
	ListBalances(ctx context.Context, in *ListBalancesQuery, opts ...grpc.CallOption) (*ListBalancesResponse, error)
	ListTxFeeds(ctx context.Context, in *ListTxFeedsQuery, opts ...grpc.CallOption) (*ListTxFeedsResponse, error)
	ListTxs(ctx context.Context, in *ListTxsQuery, opts ...grpc.CallOption) (*ListTxsResponse, error)
	ListUnspentOutputs(ctx context.Context, in *ListUnspentOutputsQuery, opts ...grpc.CallOption) (*ListUnspentOutputsResponse, error)
	Reset(ctx context.Context, in *ResetRequest, opts ...grpc.CallOption) (*ErrorResponse, error)
	Info(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*InfoResponse, error)
	Configure(ctx context.Context, in *ConfigureRequest, opts ...grpc.CallOption) (*ErrorResponse, error)
}

type appClient struct {
	cc *grpc.ClientConn
}

func NewAppClient(cc *grpc.ClientConn) AppClient {
	return &appClient{cc}
}

func (c *appClient) CreateAssets(ctx context.Context, in *CreateAssetsRequest, opts ...grpc.CallOption) (*CreateAssetsResponse, error) {
	out := new(CreateAssetsResponse)
	err := grpc.Invoke(ctx, "/chaincore.App/CreateAssets", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) CreateAccounts(ctx context.Context, in *CreateAccountsRequest, opts ...grpc.CallOption) (*CreateAccountsResponse, error) {
	out := new(CreateAccountsResponse)
	err := grpc.Invoke(ctx, "/chaincore.App/CreateAccounts", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) CreateControlPrograms(ctx context.Context, in *CreateControlProgramsRequest, opts ...grpc.CallOption) (*CreateControlProgramsResponse, error) {
	out := new(CreateControlProgramsResponse)
	err := grpc.Invoke(ctx, "/chaincore.App/createControlPrograms", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) BuildTxs(ctx context.Context, in *BuildTxsRequest, opts ...grpc.CallOption) (*TxsResponse, error) {
	out := new(TxsResponse)
	err := grpc.Invoke(ctx, "/chaincore.App/BuildTxs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) SubmitTxs(ctx context.Context, in *SubmitTxsRequest, opts ...grpc.CallOption) (*SubmitTxsResponse, error) {
	out := new(SubmitTxsResponse)
	err := grpc.Invoke(ctx, "/chaincore.App/SubmitTxs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) CreateTxFeed(ctx context.Context, in *CreateTxFeedRequest, opts ...grpc.CallOption) (*TxFeedResponse, error) {
	out := new(TxFeedResponse)
	err := grpc.Invoke(ctx, "/chaincore.App/CreateTxFeed", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) GetTxFeed(ctx context.Context, in *GetTxFeedRequest, opts ...grpc.CallOption) (*TxFeedResponse, error) {
	out := new(TxFeedResponse)
	err := grpc.Invoke(ctx, "/chaincore.App/GetTxFeed", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) UpdateTxFeed(ctx context.Context, in *UpdateTxFeedRequest, opts ...grpc.CallOption) (*TxFeedResponse, error) {
	out := new(TxFeedResponse)
	err := grpc.Invoke(ctx, "/chaincore.App/UpdateTxFeed", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) DeleteTxFeed(ctx context.Context, in *DeleteTxFeedRequest, opts ...grpc.CallOption) (*ErrorResponse, error) {
	out := new(ErrorResponse)
	err := grpc.Invoke(ctx, "/chaincore.App/DeleteTxFeed", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) CreateAccessToken(ctx context.Context, in *CreateAccessTokenRequest, opts ...grpc.CallOption) (*CreateAccessTokenResponse, error) {
	out := new(CreateAccessTokenResponse)
	err := grpc.Invoke(ctx, "/chaincore.App/CreateAccessToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) ListAccessTokens(ctx context.Context, in *ListAccessTokensQuery, opts ...grpc.CallOption) (*ListAccessTokensResponse, error) {
	out := new(ListAccessTokensResponse)
	err := grpc.Invoke(ctx, "/chaincore.App/ListAccessTokens", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) DeleteAccessToken(ctx context.Context, in *DeleteAccessTokenRequest, opts ...grpc.CallOption) (*ErrorResponse, error) {
	out := new(ErrorResponse)
	err := grpc.Invoke(ctx, "/chaincore.App/DeleteAccessToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) ListAssets(ctx context.Context, in *ListAssetsQuery, opts ...grpc.CallOption) (*ListAssetsResponse, error) {
	out := new(ListAssetsResponse)
	err := grpc.Invoke(ctx, "/chaincore.App/ListAssets", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) ListAccounts(ctx context.Context, in *ListAccountsQuery, opts ...grpc.CallOption) (*ListAccountsResponse, error) {
	out := new(ListAccountsResponse)
	err := grpc.Invoke(ctx, "/chaincore.App/ListAccounts", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) ListBalances(ctx context.Context, in *ListBalancesQuery, opts ...grpc.CallOption) (*ListBalancesResponse, error) {
	out := new(ListBalancesResponse)
	err := grpc.Invoke(ctx, "/chaincore.App/ListBalances", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) ListTxFeeds(ctx context.Context, in *ListTxFeedsQuery, opts ...grpc.CallOption) (*ListTxFeedsResponse, error) {
	out := new(ListTxFeedsResponse)
	err := grpc.Invoke(ctx, "/chaincore.App/ListTxFeeds", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) ListTxs(ctx context.Context, in *ListTxsQuery, opts ...grpc.CallOption) (*ListTxsResponse, error) {
	out := new(ListTxsResponse)
	err := grpc.Invoke(ctx, "/chaincore.App/ListTxs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) ListUnspentOutputs(ctx context.Context, in *ListUnspentOutputsQuery, opts ...grpc.CallOption) (*ListUnspentOutputsResponse, error) {
	out := new(ListUnspentOutputsResponse)
	err := grpc.Invoke(ctx, "/chaincore.App/ListUnspentOutputs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) Reset(ctx context.Context, in *ResetRequest, opts ...grpc.CallOption) (*ErrorResponse, error) {
	out := new(ErrorResponse)
	err := grpc.Invoke(ctx, "/chaincore.App/Reset", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) Info(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*InfoResponse, error) {
	out := new(InfoResponse)
	err := grpc.Invoke(ctx, "/chaincore.App/Info", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) Configure(ctx context.Context, in *ConfigureRequest, opts ...grpc.CallOption) (*ErrorResponse, error) {
	out := new(ErrorResponse)
	err := grpc.Invoke(ctx, "/chaincore.App/Configure", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for App service

type AppServer interface {
	CreateAssets(context.Context, *CreateAssetsRequest) (*CreateAssetsResponse, error)
	CreateAccounts(context.Context, *CreateAccountsRequest) (*CreateAccountsResponse, error)
	CreateControlPrograms(context.Context, *CreateControlProgramsRequest) (*CreateControlProgramsResponse, error)
	BuildTxs(context.Context, *BuildTxsRequest) (*TxsResponse, error)
	SubmitTxs(context.Context, *SubmitTxsRequest) (*SubmitTxsResponse, error)
	CreateTxFeed(context.Context, *CreateTxFeedRequest) (*TxFeedResponse, error)
	GetTxFeed(context.Context, *GetTxFeedRequest) (*TxFeedResponse, error)
	UpdateTxFeed(context.Context, *UpdateTxFeedRequest) (*TxFeedResponse, error)
	DeleteTxFeed(context.Context, *DeleteTxFeedRequest) (*ErrorResponse, error)
	CreateAccessToken(context.Context, *CreateAccessTokenRequest) (*CreateAccessTokenResponse, error)
	ListAccessTokens(context.Context, *ListAccessTokensQuery) (*ListAccessTokensResponse, error)
	DeleteAccessToken(context.Context, *DeleteAccessTokenRequest) (*ErrorResponse, error)
	ListAssets(context.Context, *ListAssetsQuery) (*ListAssetsResponse, error)
	ListAccounts(context.Context, *ListAccountsQuery) (*ListAccountsResponse, error)
	ListBalances(context.Context, *ListBalancesQuery) (*ListBalancesResponse, error)
	ListTxFeeds(context.Context, *ListTxFeedsQuery) (*ListTxFeedsResponse, error)
	ListTxs(context.Context, *ListTxsQuery) (*ListTxsResponse, error)
	ListUnspentOutputs(context.Context, *ListUnspentOutputsQuery) (*ListUnspentOutputsResponse, error)
	Reset(context.Context, *ResetRequest) (*ErrorResponse, error)
	Info(context.Context, *Empty) (*InfoResponse, error)
	Configure(context.Context, *ConfigureRequest) (*ErrorResponse, error)
}

func RegisterAppServer(s *grpc.Server, srv AppServer) {
	s.RegisterService(&_App_serviceDesc, srv)
}

func _App_CreateAssets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAssetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).CreateAssets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.App/CreateAssets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).CreateAssets(ctx, req.(*CreateAssetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_CreateAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).CreateAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.App/CreateAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).CreateAccounts(ctx, req.(*CreateAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_CreateControlPrograms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateControlProgramsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).CreateControlPrograms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.App/CreateControlPrograms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).CreateControlPrograms(ctx, req.(*CreateControlProgramsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_BuildTxs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildTxsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).BuildTxs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.App/BuildTxs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).BuildTxs(ctx, req.(*BuildTxsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_SubmitTxs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitTxsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).SubmitTxs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.App/SubmitTxs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).SubmitTxs(ctx, req.(*SubmitTxsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_CreateTxFeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTxFeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).CreateTxFeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.App/CreateTxFeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).CreateTxFeed(ctx, req.(*CreateTxFeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_GetTxFeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTxFeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).GetTxFeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.App/GetTxFeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).GetTxFeed(ctx, req.(*GetTxFeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_UpdateTxFeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTxFeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).UpdateTxFeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.App/UpdateTxFeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).UpdateTxFeed(ctx, req.(*UpdateTxFeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_DeleteTxFeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTxFeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).DeleteTxFeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.App/DeleteTxFeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).DeleteTxFeed(ctx, req.(*DeleteTxFeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_CreateAccessToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccessTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).CreateAccessToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.App/CreateAccessToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).CreateAccessToken(ctx, req.(*CreateAccessTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_ListAccessTokens_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAccessTokensQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).ListAccessTokens(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.App/ListAccessTokens",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).ListAccessTokens(ctx, req.(*ListAccessTokensQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_DeleteAccessToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAccessTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).DeleteAccessToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.App/DeleteAccessToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).DeleteAccessToken(ctx, req.(*DeleteAccessTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_ListAssets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAssetsQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).ListAssets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.App/ListAssets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).ListAssets(ctx, req.(*ListAssetsQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_ListAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAccountsQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).ListAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.App/ListAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).ListAccounts(ctx, req.(*ListAccountsQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_ListBalances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBalancesQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).ListBalances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.App/ListBalances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).ListBalances(ctx, req.(*ListBalancesQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_ListTxFeeds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTxFeedsQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).ListTxFeeds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.App/ListTxFeeds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).ListTxFeeds(ctx, req.(*ListTxFeedsQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_ListTxs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTxsQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).ListTxs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.App/ListTxs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).ListTxs(ctx, req.(*ListTxsQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_ListUnspentOutputs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUnspentOutputsQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).ListUnspentOutputs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.App/ListUnspentOutputs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).ListUnspentOutputs(ctx, req.(*ListUnspentOutputsQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_Reset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).Reset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.App/Reset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).Reset(ctx, req.(*ResetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.App/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).Info(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_Configure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).Configure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.App/Configure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).Configure(ctx, req.(*ConfigureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _App_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chaincore.App",
	HandlerType: (*AppServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAssets",
			Handler:    _App_CreateAssets_Handler,
		},
		{
			MethodName: "CreateAccounts",
			Handler:    _App_CreateAccounts_Handler,
		},
		{
			MethodName: "createControlPrograms",
			Handler:    _App_CreateControlPrograms_Handler,
		},
		{
			MethodName: "BuildTxs",
			Handler:    _App_BuildTxs_Handler,
		},
		{
			MethodName: "SubmitTxs",
			Handler:    _App_SubmitTxs_Handler,
		},
		{
			MethodName: "CreateTxFeed",
			Handler:    _App_CreateTxFeed_Handler,
		},
		{
			MethodName: "GetTxFeed",
			Handler:    _App_GetTxFeed_Handler,
		},
		{
			MethodName: "UpdateTxFeed",
			Handler:    _App_UpdateTxFeed_Handler,
		},
		{
			MethodName: "DeleteTxFeed",
			Handler:    _App_DeleteTxFeed_Handler,
		},
		{
			MethodName: "CreateAccessToken",
			Handler:    _App_CreateAccessToken_Handler,
		},
		{
			MethodName: "ListAccessTokens",
			Handler:    _App_ListAccessTokens_Handler,
		},
		{
			MethodName: "DeleteAccessToken",
			Handler:    _App_DeleteAccessToken_Handler,
		},
		{
			MethodName: "ListAssets",
			Handler:    _App_ListAssets_Handler,
		},
		{
			MethodName: "ListAccounts",
			Handler:    _App_ListAccounts_Handler,
		},
		{
			MethodName: "ListBalances",
			Handler:    _App_ListBalances_Handler,
		},
		{
			MethodName: "ListTxFeeds",
			Handler:    _App_ListTxFeeds_Handler,
		},
		{
			MethodName: "ListTxs",
			Handler:    _App_ListTxs_Handler,
		},
		{
			MethodName: "ListUnspentOutputs",
			Handler:    _App_ListUnspentOutputs_Handler,
		},
		{
			MethodName: "Reset",
			Handler:    _App_Reset_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _App_Info_Handler,
		},
		{
			MethodName: "Configure",
			Handler:    _App_Configure_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chaincore.proto",
}

// Client API for HSM service

type HSMClient interface {
	CreateKey(ctx context.Context, in *CreateKeyRequest, opts ...grpc.CallOption) (*CreateKeyResponse, error)
	ListKeys(ctx context.Context, in *ListKeysQuery, opts ...grpc.CallOption) (*ListKeysResponse, error)
	DeleteKey(ctx context.Context, in *DeleteKeyRequest, opts ...grpc.CallOption) (*ErrorResponse, error)
	SignTxs(ctx context.Context, in *SignTxsRequest, opts ...grpc.CallOption) (*TxsResponse, error)
}

type hSMClient struct {
	cc *grpc.ClientConn
}

func NewHSMClient(cc *grpc.ClientConn) HSMClient {
	return &hSMClient{cc}
}

func (c *hSMClient) CreateKey(ctx context.Context, in *CreateKeyRequest, opts ...grpc.CallOption) (*CreateKeyResponse, error) {
	out := new(CreateKeyResponse)
	err := grpc.Invoke(ctx, "/chaincore.HSM/CreateKey", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hSMClient) ListKeys(ctx context.Context, in *ListKeysQuery, opts ...grpc.CallOption) (*ListKeysResponse, error) {
	out := new(ListKeysResponse)
	err := grpc.Invoke(ctx, "/chaincore.HSM/ListKeys", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hSMClient) DeleteKey(ctx context.Context, in *DeleteKeyRequest, opts ...grpc.CallOption) (*ErrorResponse, error) {
	out := new(ErrorResponse)
	err := grpc.Invoke(ctx, "/chaincore.HSM/DeleteKey", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hSMClient) SignTxs(ctx context.Context, in *SignTxsRequest, opts ...grpc.CallOption) (*TxsResponse, error) {
	out := new(TxsResponse)
	err := grpc.Invoke(ctx, "/chaincore.HSM/SignTxs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for HSM service

type HSMServer interface {
	CreateKey(context.Context, *CreateKeyRequest) (*CreateKeyResponse, error)
	ListKeys(context.Context, *ListKeysQuery) (*ListKeysResponse, error)
	DeleteKey(context.Context, *DeleteKeyRequest) (*ErrorResponse, error)
	SignTxs(context.Context, *SignTxsRequest) (*TxsResponse, error)
}

func RegisterHSMServer(s *grpc.Server, srv HSMServer) {
	s.RegisterService(&_HSM_serviceDesc, srv)
}

func _HSM_CreateKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HSMServer).CreateKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.HSM/CreateKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HSMServer).CreateKey(ctx, req.(*CreateKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HSM_ListKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListKeysQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HSMServer).ListKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.HSM/ListKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HSMServer).ListKeys(ctx, req.(*ListKeysQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _HSM_DeleteKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HSMServer).DeleteKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.HSM/DeleteKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HSMServer).DeleteKey(ctx, req.(*DeleteKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HSM_SignTxs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignTxsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HSMServer).SignTxs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.HSM/SignTxs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HSMServer).SignTxs(ctx, req.(*SignTxsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HSM_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chaincore.HSM",
	HandlerType: (*HSMServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateKey",
			Handler:    _HSM_CreateKey_Handler,
		},
		{
			MethodName: "ListKeys",
			Handler:    _HSM_ListKeys_Handler,
		},
		{
			MethodName: "DeleteKey",
			Handler:    _HSM_DeleteKey_Handler,
		},
		{
			MethodName: "SignTxs",
			Handler:    _HSM_SignTxs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chaincore.proto",
}

// Client API for Node service

type NodeClient interface {
	SubmitTx(ctx context.Context, in *SubmitTxRequest, opts ...grpc.CallOption) (*SubmitTxResponse, error)
	GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error)
	GetSnapshot(ctx context.Context, in *GetSnapshotRequest, opts ...grpc.CallOption) (*GetSnapshotResponse, error)
	GetSnapshotInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetSnapshotInfoResponse, error)
	GetBlockHeight(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetBlockHeightResponse, error)
}

type nodeClient struct {
	cc *grpc.ClientConn
}

func NewNodeClient(cc *grpc.ClientConn) NodeClient {
	return &nodeClient{cc}
}

func (c *nodeClient) SubmitTx(ctx context.Context, in *SubmitTxRequest, opts ...grpc.CallOption) (*SubmitTxResponse, error) {
	out := new(SubmitTxResponse)
	err := grpc.Invoke(ctx, "/chaincore.Node/SubmitTx", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error) {
	out := new(GetBlockResponse)
	err := grpc.Invoke(ctx, "/chaincore.Node/GetBlock", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) GetSnapshot(ctx context.Context, in *GetSnapshotRequest, opts ...grpc.CallOption) (*GetSnapshotResponse, error) {
	out := new(GetSnapshotResponse)
	err := grpc.Invoke(ctx, "/chaincore.Node/GetSnapshot", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) GetSnapshotInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetSnapshotInfoResponse, error) {
	out := new(GetSnapshotInfoResponse)
	err := grpc.Invoke(ctx, "/chaincore.Node/GetSnapshotInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) GetBlockHeight(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetBlockHeightResponse, error) {
	out := new(GetBlockHeightResponse)
	err := grpc.Invoke(ctx, "/chaincore.Node/GetBlockHeight", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Node service

type NodeServer interface {
	SubmitTx(context.Context, *SubmitTxRequest) (*SubmitTxResponse, error)
	GetBlock(context.Context, *GetBlockRequest) (*GetBlockResponse, error)
	GetSnapshot(context.Context, *GetSnapshotRequest) (*GetSnapshotResponse, error)
	GetSnapshotInfo(context.Context, *Empty) (*GetSnapshotInfoResponse, error)
	GetBlockHeight(context.Context, *Empty) (*GetBlockHeightResponse, error)
}

func RegisterNodeServer(s *grpc.Server, srv NodeServer) {
	s.RegisterService(&_Node_serviceDesc, srv)
}

func _Node_SubmitTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitTxRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).SubmitTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.Node/SubmitTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).SubmitTx(ctx, req.(*SubmitTxRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_GetBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).GetBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.Node/GetBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).GetBlock(ctx, req.(*GetBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_GetSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).GetSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.Node/GetSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).GetSnapshot(ctx, req.(*GetSnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_GetSnapshotInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).GetSnapshotInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.Node/GetSnapshotInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).GetSnapshotInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_GetBlockHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).GetBlockHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.Node/GetBlockHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).GetBlockHeight(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Node_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chaincore.Node",
	HandlerType: (*NodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitTx",
			Handler:    _Node_SubmitTx_Handler,
		},
		{
			MethodName: "GetBlock",
			Handler:    _Node_GetBlock_Handler,
		},
		{
			MethodName: "GetSnapshot",
			Handler:    _Node_GetSnapshot_Handler,
		},
		{
			MethodName: "GetSnapshotInfo",
			Handler:    _Node_GetSnapshotInfo_Handler,
		},
		{
			MethodName: "GetBlockHeight",
			Handler:    _Node_GetBlockHeight_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chaincore.proto",
}

// Client API for Signer service

type SignerClient interface {
	SignBlock(ctx context.Context, in *SignBlockRequest, opts ...grpc.CallOption) (*SignBlockResponse, error)
}

type signerClient struct {
	cc *grpc.ClientConn
}

func NewSignerClient(cc *grpc.ClientConn) SignerClient {
	return &signerClient{cc}
}

func (c *signerClient) SignBlock(ctx context.Context, in *SignBlockRequest, opts ...grpc.CallOption) (*SignBlockResponse, error) {
	out := new(SignBlockResponse)
	err := grpc.Invoke(ctx, "/chaincore.Signer/SignBlock", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Signer service

type SignerServer interface {
	SignBlock(context.Context, *SignBlockRequest) (*SignBlockResponse, error)
}

func RegisterSignerServer(s *grpc.Server, srv SignerServer) {
	s.RegisterService(&_Signer_serviceDesc, srv)
}

func _Signer_SignBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignerServer).SignBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaincore.Signer/SignBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignerServer).SignBlock(ctx, req.(*SignBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Signer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chaincore.Signer",
	HandlerType: (*SignerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignBlock",
			Handler:    _Signer_SignBlock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chaincore.proto",
}

func init() { proto.RegisterFile("chaincore.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 3843 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xd4, 0x3b, 0x4d, 0x6f, 0x24, 0x49,
	0x56, 0x95, 0xf5, 0x5d, 0xaf, 0xca, 0x5f, 0xe1, 0x8f, 0xae, 0x4e, 0x77, 0xf7, 0xb8, 0xb3, 0xb7,
	0x67, 0xbc, 0x33, 0x83, 0x67, 0xd6, 0x33, 0x9a, 0xdd, 0x65, 0x97, 0x11, 0x76, 0x77, 0x4f, 0xdb,
	0xe3, 0xde, 0x1d, 0x4f, 0xda, 0xcd, 0xcc, 0xce, 0xa0, 0xcd, 0x4d, 0x57, 0x85, 0xed, 0xc4, 0x55,
	0x99, 0x35, 0x99, 0x51, 0xb6, 0x6b, 0x25, 0xc4, 0x01, 0x69, 0x25, 0x90, 0x38, 0xc0, 0x01, 0x89,
	0xaf, 0xd3, 0xde, 0xd0, 0x22, 0x84, 0x84, 0x84, 0x40, 0x42, 0x1c, 0xe0, 0x57, 0xc0, 0x8d, 0x13,
	0x07, 0x10, 0x12, 0x12, 0x82, 0x23, 0x8a, 0xaf, 0xcc, 0x88, 0xcc, 0xac, 0x72, 0xf6, 0x4e, 0x8f,
	0x80, 0x93, 0x2b, 0x5e, 0xbc, 0x8c, 0xf7, 0x19, 0x2f, 0x5e, 0xbc, 0x17, 0x86, 0x85, 0xde, 0xb9,
	0xeb, 0xf9, 0xbd, 0x20, 0xc4, 0x5b, 0xa3, 0x30, 0x20, 0x01, 0x6a, 0xc5, 0x00, 0xab, 0x01, 0xb5,
	0x27, 0xc3, 0x11, 0x99, 0x58, 0xdf, 0x84, 0xb9, 0x27, 0x61, 0x18, 0x84, 0x36, 0x8e, 0x46, 0x81,
	0x1f, 0x61, 0xf4, 0x2a, 0xd4, 0x30, 0x05, 0x74, 0x5b, 0x1b, 0xc6, 0x66, 0x7b, 0x7b, 0x71, 0x2b,
	0x59, 0x85, 0x23, 0xf2, 0x69, 0xeb, 0x37, 0xa0, 0xc6, 0xc6, 0x08, 0x41, 0xb5, 0x17, 0xf4, 0x71,
	0xd7, 0xd8, 0x30, 0x36, 0x5b, 0x36, 0xfb, 0x8d, 0xba, 0xd0, 0x18, 0xe2, 0x28, 0x72, 0xcf, 0x70,
	0xb7, 0xcc, 0xc0, 0x72, 0x88, 0xd6, 0xa0, 0xde, 0xc7, 0xc4, 0xf5, 0x06, 0xdd, 0x0a, 0x9b, 0x10,
	0x23, 0x74, 0x07, 0x5a, 0x04, 0x0f, 0x47, 0x41, 0xe8, 0x86, 0x93, 0x6e, 0x75, 0xc3, 0xd8, 0x6c,
	0xda, 0x09, 0x80, 0xd2, 0xe8, 0xbb, 0xc4, 0xed, 0xd6, 0x36, 0x8c, 0xcd, 0x8e, 0xcd, 0x7e, 0x5b,
	0xbf, 0x59, 0x81, 0xda, 0x4e, 0x14, 0x61, 0x82, 0xe6, 0xa1, 0xec, 0xf5, 0x19, 0xfd, 0x8e, 0x5d,
	0xf6, 0xfa, 0x68, 0x05, 0x6a, 0xee, 0xc0, 0x73, 0x23, 0x41, 0x9b, 0x0f, 0xd0, 0x5d, 0x80, 0xcb,
	0xa1, 0x73, 0x89, 0xc3, 0xc8, 0x0b, 0x7c, 0x26, 0x5d, 0xd5, 0x6e, 0x5d, 0x0e, 0x7f, 0x85, 0x03,
	0xd0, 0xd7, 0x61, 0xd1, 0x8b, 0xa2, 0xb1, 0xeb, 0xf7, 0xb0, 0x33, 0x0a, 0x83, 0xb3, 0xd0, 0x1d,
	0x32, 0x16, 0x3b, 0xf6, 0x82, 0x84, 0x1f, 0x72, 0x30, 0xda, 0x84, 0xea, 0x05, 0x9e, 0x44, 0xdd,
	0xea, 0x46, 0x65, 0xb3, 0xbd, 0xbd, 0xa2, 0x68, 0x88, 0xf1, 0xb3, 0x75, 0x80, 0x27, 0x36, 0xc3,
	0xa0, 0xd2, 0x7e, 0x31, 0x0e, 0xc2, 0xf1, 0x90, 0x71, 0x5e, 0xb3, 0xc5, 0x08, 0xdd, 0x03, 0xe8,
	0xe3, 0x53, 0xcf, 0xf7, 0x08, 0xe5, 0xa5, 0xce, 0xc8, 0x28, 0x10, 0x2a, 0x2f, 0x71, 0xcf, 0xa2,
	0x6e, 0x83, 0xcb, 0x4b, 0x7f, 0xa3, 0xdb, 0xd0, 0xf4, 0x22, 0x67, 0x10, 0xf4, 0xdc, 0x41, 0xb7,
	0xc9, 0x14, 0xd4, 0xf0, 0xa2, 0x67, 0x74, 0x68, 0x4e, 0xa0, 0x72, 0x80, 0x27, 0x68, 0x1d, 0x5a,
	0x61, 0x10, 0x10, 0xe7, 0x7a, 0x34, 0x3e, 0x11, 0xea, 0x68, 0x52, 0xc0, 0xa7, 0xa3, 0xf1, 0x09,
	0xba, 0x0f, 0x1d, 0x97, 0x72, 0xe7, 0x8c, 0xc6, 0x27, 0x17, 0x78, 0xc2, 0x74, 0xd3, 0xb1, 0xdb,
	0x0c, 0x76, 0xc8, 0x40, 0x68, 0x1b, 0x56, 0x39, 0x4a, 0x1f, 0x87, 0xde, 0xa5, 0x4b, 0x39, 0x71,
	0x46, 0x2e, 0x39, 0xef, 0x56, 0x36, 0x2a, 0x9b, 0x1d, 0x7b, 0x99, 0x4d, 0x3e, 0x8e, 0xe7, 0x0e,
	0x5d, 0x72, 0x6e, 0xfd, 0x56, 0x19, 0x96, 0x1f, 0x85, 0xd8, 0x25, 0x98, 0xc9, 0x1e, 0xd9, 0xf8,
	0x8b, 0x31, 0x8e, 0x08, 0xda, 0x85, 0x66, 0xc8, 0x7f, 0x46, 0x5d, 0x83, 0xe9, 0xe9, 0x55, 0x45,
	0x4f, 0x39, 0x5f, 0x6c, 0x89, 0xbf, 0x76, 0xfc, 0x9d, 0xf9, 0x67, 0x06, 0x34, 0xe4, 0x7a, 0xb1,
	0x4d, 0x8d, 0x94, 0x4d, 0x63, 0x89, 0xa9, 0xb9, 0x29, 0x9b, 0x2d, 0x29, 0xb2, 0xaa, 0xfe, 0xca,
	0x0c, 0xf5, 0x57, 0xa7, 0xaa, 0xbf, 0xa6, 0xa8, 0xff, 0x3e, 0x74, 0x7a, 0x03, 0x0f, 0xfb, 0xc4,
	0x21, 0xc1, 0x05, 0xe6, 0x46, 0x6b, 0xd9, 0x6d, 0x0e, 0x3b, 0xa6, 0x20, 0xeb, 0x9f, 0x0d, 0x58,
	0xd1, 0x25, 0x13, 0x7b, 0xea, 0x03, 0x68, 0x85, 0xe2, 0xb7, 0xd4, 0xc6, 0xe6, 0x54, 0x6d, 0x70,
	0xbc, 0x2d, 0xf9, 0xc3, 0x4e, 0x3e, 0x2d, 0xba, 0x37, 0xcd, 0xcf, 0xa0, 0xa9, 0xee, 0x67, 0x66,
	0x37, 0xa6, 0x38, 0xfd, 0x1b, 0x46, 0xd1, 0xe6, 0xd3, 0x85, 0xf7, 0xfd, 0x4f, 0xca, 0xd0, 0xd8,
	0xe9, 0xf5, 0x82, 0xb1, 0xaf, 0x6e, 0xbc, 0xd6, 0x8c, 0x8d, 0xf7, 0xba, 0xd8, 0x2e, 0x15, 0x26,
	0xf8, 0x9a, 0xca, 0x00, 0x5f, 0x27, 0x77, 0xc3, 0x54, 0x35, 0x8b, 0xe5, 0x58, 0xc4, 0xfc, 0xf5,
	0x82, 0x5e, 0xcf, 0x89, 0xf0, 0x79, 0xe9, 0xf5, 0x1c, 0xc6, 0x50, 0xde, 0x83, 0x5b, 0x12, 0x25,
	0xdf, 0xef, 0x57, 0xc5, 0x74, 0xca, 0xf3, 0xff, 0xcd, 0x80, 0x55, 0x61, 0x39, 0x3e, 0x1f, 0xfb,
	0xfe, 0xe3, 0x8c, 0xef, 0xe7, 0x58, 0x5b, 0xff, 0x26, 0xc7, 0xfb, 0x7f, 0x47, 0xf1, 0x7e, 0xdd,
	0xcf, 0x8d, 0xe9, 0x7e, 0x5e, 0xd6, 0xb4, 0x16, 0xdb, 0xa3, 0xa2, 0xda, 0x43, 0xea, 0xb2, 0x3a,
	0xc3, 0xbb, 0x6b, 0x59, 0xef, 0xfe, 0x57, 0x03, 0xd6, 0xd2, 0xbc, 0x0b, 0x1f, 0xdb, 0xcb, 0xfa,
	0xf7, 0xeb, 0x33, 0x24, 0x7e, 0x09, 0x1e, 0xfe, 0x23, 0xc5, 0xc3, 0xdf, 0x84, 0x86, 0xb0, 0x90,
	0xf0, 0x71, 0x94, 0x75, 0x31, 0x5b, 0xa2, 0x14, 0xf6, 0xf3, 0x9f, 0x95, 0xe1, 0x0e, 0x67, 0xfc,
	0x51, 0xe0, 0x93, 0x30, 0x18, 0x88, 0xe8, 0x1f, 0x5b, 0xf9, 0x20, 0x63, 0xe5, 0xb7, 0x32, 0x32,
	0xe7, 0x7f, 0x9a, 0x63, 0x6c, 0x27, 0xd9, 0x54, 0xaf, 0x00, 0x48, 0x7f, 0x94, 0x9b, 0x6b, 0xaf,
	0x64, 0xb7, 0x04, 0x6c, 0xbf, 0x8f, 0x1e, 0xc2, 0x9c, 0x44, 0x50, 0x76, 0xdb, 0x5e, 0xc9, 0x96,
	0xae, 0xbe, 0x43, 0xa1, 0xbb, 0x1d, 0x00, 0xaf, 0x8f, 0x7d, 0xe2, 0x9d, 0x7a, 0x38, 0x34, 0x7f,
	0x98, 0x38, 0xd3, 0x41, 0x5a, 0x5f, 0x85, 0xf9, 0x16, 0x2c, 0xee, 0x95, 0x62, 0x75, 0xee, 0xd6,
	0xa1, 0x4a, 0x26, 0x23, 0x6c, 0xfd, 0xa7, 0x01, 0x77, 0xa7, 0x7c, 0x2b, 0xcc, 0xf4, 0x51, 0xd6,
	0x49, 0xbe, 0x71, 0x33, 0xe1, 0x97, 0xe0, 0x2b, 0x9f, 0x2b, 0xbe, 0xf2, 0x1a, 0x2c, 0xf4, 0x38,
	0x89, 0xf8, 0x90, 0xe7, 0x21, 0x63, 0xbe, 0xa7, 0x51, 0x2e, 0xec, 0x26, 0xbf, 0x0a, 0xf5, 0xe3,
	0xeb, 0x0f, 0x30, 0xee, 0x17, 0x0c, 0x86, 0x6b, 0x50, 0x3f, 0xf5, 0x06, 0x04, 0x87, 0x32, 0xff,
	0xe1, 0x23, 0x86, 0x7d, 0x4a, 0xc1, 0x55, 0x81, 0x4d, 0x07, 0xd6, 0x19, 0xcc, 0xf3, 0xd5, 0x63,
	0x01, 0x7e, 0x81, 0x7a, 0x1d, 0xff, 0x2d, 0xac, 0xb7, 0xa4, 0xb0, 0x26, 0x90, 0x63, 0x94, 0xc2,
	0x62, 0x9c, 0xca, 0x53, 0x5c, 0x92, 0x9b, 0x75, 0xea, 0x26, 0x32, 0x94, 0x35, 0x19, 0xd2, 0x41,
	0xa4, 0x92, 0x0d, 0x22, 0x1f, 0xc2, 0xe2, 0x53, 0x4c, 0x74, 0x22, 0x8b, 0x89, 0xe2, 0xf6, 0x4a,
	0x4c, 0x75, 0x6b, 0x9a, 0xea, 0xf6, 0x4a, 0x82, 0xb0, 0xee, 0xd2, 0xd6, 0x6f, 0x1b, 0xb0, 0xfc,
	0x7c, 0xd4, 0xcf, 0x30, 0x5d, 0x78, 0x3d, 0xf4, 0x10, 0xe6, 0x47, 0x21, 0xbe, 0xf4, 0x82, 0x71,
	0xe4, 0x70, 0xed, 0x73, 0x96, 0xe7, 0x24, 0x74, 0xe7, 0x74, 0xaa, 0x6d, 0x52, 0xcc, 0x7c, 0x0f,
	0x96, 0x1f, 0xe3, 0x01, 0xfe, 0xb9, 0x79, 0x49, 0x2d, 0xf7, 0x3e, 0x74, 0xe3, 0xa8, 0x89, 0xa3,
	0x88, 0x29, 0x4f, 0xae, 0x99, 0x76, 0x34, 0xc4, 0xb7, 0xa0, 0x30, 0x06, 0xdf, 0x8e, 0x5f, 0xc0,
	0xed, 0x9c, 0xef, 0xe3, 0x80, 0x59, 0xe3, 0x06, 0xe2, 0x0e, 0x94, 0x3a, 0x91, 0x63, 0x74, 0x8e,
	0x54, 0xd8, 0x85, 0x7e, 0x08, 0xab, 0xcf, 0xbc, 0x88, 0x28, 0x2b, 0x44, 0x1f, 0x8f, 0x31, 0x4f,
	0xde, 0x19, 0x7f, 0x46, 0xc2, 0x1f, 0x3d, 0xb4, 0x47, 0xee, 0x19, 0x76, 0x22, 0xef, 0xc7, 0x58,
	0x1c, 0x5a, 0x4d, 0x0a, 0x38, 0xf2, 0x7e, 0x8c, 0x13, 0x7d, 0x57, 0xd4, 0xbd, 0xf0, 0xf7, 0x06,
	0x74, 0xd3, 0x04, 0x54, 0x91, 0x3c, 0x82, 0x87, 0x32, 0xb0, 0x4c, 0x15, 0x89, 0x21, 0x51, 0xea,
	0x03, 0x37, 0x22, 0xce, 0x48, 0x5e, 0x50, 0x9a, 0x76, 0x93, 0x02, 0x0e, 0xe9, 0x0d, 0xe5, 0x5d,
	0xa8, 0xfa, 0xf8, 0x9a, 0x30, 0xe2, 0xed, 0xed, 0x0d, 0x65, 0xa5, 0x5c, 0xf1, 0x6c, 0x86, 0x5d,
	0x58, 0x4b, 0xaf, 0x43, 0x97, 0xfb, 0xc9, 0xcd, 0x86, 0xb5, 0x4e, 0xa1, 0xad, 0x60, 0xe5, 0x05,
	0x18, 0x6e, 0x46, 0x11, 0x60, 0xb8, 0xb9, 0xa4, 0xb6, 0x2b, 0x8a, 0xb6, 0xef, 0x02, 0xf4, 0x98,
	0x37, 0xf4, 0x1d, 0x97, 0x08, 0x2f, 0x6e, 0x09, 0xc8, 0x0e, 0xb1, 0x2e, 0xa1, 0xfd, 0x01, 0xdb,
	0xc1, 0x87, 0x2e, 0x0d, 0x7d, 0x5d, 0xa8, 0x47, 0x24, 0xf4, 0xfc, 0xb3, 0xd8, 0x6f, 0xc5, 0x98,
	0xfa, 0xae, 0xe7, 0x93, 0xf7, 0xde, 0x65, 0x14, 0x2b, 0xd4, 0x77, 0xd9, 0x90, 0xc2, 0x4f, 0x26,
	0x04, 0xf3, 0x3c, 0xa3, 0x43, 0xe1, 0x6c, 0x88, 0x56, 0xa0, 0x7a, 0x12, 0x04, 0x03, 0x7e, 0x9f,
	0xdb, 0x2b, 0xd9, 0x6c, 0xb4, 0xdb, 0x80, 0xda, 0xa5, 0x3b, 0x18, 0x63, 0xeb, 0x8f, 0x0c, 0x58,
	0x12, 0x3a, 0x65, 0x99, 0x01, 0x77, 0x97, 0x24, 0xba, 0x18, 0x5a, 0x74, 0xf9, 0x0e, 0xcc, 0xf1,
	0x5f, 0xce, 0x88, 0xb2, 0xc9, 0xd3, 0x7d, 0xdd, 0xd4, 0x8a, 0x14, 0x76, 0xe7, 0x34, 0x19, 0x44,
	0xf9, 0x2e, 0xa5, 0x7b, 0x61, 0x55, 0xf7, 0x42, 0xeb, 0xaf, 0x0c, 0x58, 0x51, 0xb9, 0x8b, 0x7d,
	0x6d, 0x53, 0xf7, 0xb5, 0xbc, 0x6c, 0xa3, 0x88, 0x9f, 0xbd, 0xad, 0xf9, 0xd9, 0x9d, 0xac, 0x9f,
	0x25, 0x3a, 0x79, 0x41, 0x1f, 0xfb, 0x03, 0x03, 0x16, 0xd8, 0x1a, 0xec, 0x46, 0xf1, 0x7f, 0x4b,
	0xab, 0x7f, 0x61, 0x00, 0x4a, 0x78, 0x53, 0x6f, 0x29, 0xaa, 0x4e, 0x73, 0x6e, 0x29, 0x05, 0x34,
	0xba, 0xa5, 0x69, 0xd4, 0x4c, 0x6b, 0x34, 0xd1, 0xc6, 0x0b, 0xea, 0xf3, 0x4f, 0x84, 0x9f, 0xee,
	0xba, 0x03, 0xd7, 0xef, 0xe1, 0xaf, 0x52, 0xa3, 0xab, 0x50, 0x8f, 0xc6, 0x43, 0xe7, 0x64, 0xc2,
	0xee, 0x1e, 0x2d, 0xbb, 0x16, 0x8d, 0x87, 0xbb, 0x13, 0x56, 0x1d, 0xf1, 0x86, 0x38, 0x22, 0xee,
	0x70, 0xc4, 0x54, 0x5a, 0xb5, 0x13, 0x80, 0xf5, 0x53, 0xe1, 0xa9, 0x92, 0xbf, 0x58, 0xab, 0x2b,
	0x89, 0x56, 0x69, 0x8e, 0xf3, 0xe5, 0xbd, 0x52, 0xd3, 0xc0, 0x0b, 0x6a, 0xf1, 0x09, 0x2c, 0xd2,
	0x25, 0xf8, 0xf9, 0x28, 0x74, 0x18, 0x3b, 0x90, 0x31, 0xd5, 0x81, 0x52, 0x87, 0x83, 0xf5, 0x97,
	0x06, 0x2c, 0x2b, 0xeb, 0x28, 0x99, 0x9d, 0xe6, 0x41, 0x39, 0x59, 0x51, 0x11, 0xf1, 0xdf, 0xd2,
	0xc4, 0x5f, 0x4f, 0x89, 0xaf, 0xf2, 0xfe, 0x82, 0xd2, 0xff, 0xb4, 0x0c, 0x1d, 0xbe, 0xc4, 0x57,
	0xe9, 0x3e, 0xdf, 0x84, 0xae, 0x1b, 0xf5, 0xb0, 0xdf, 0xf7, 0xfc, 0x33, 0xe7, 0xca, 0x23, 0xe7,
	0xce, 0x20, 0xf0, 0xcf, 0x9c, 0x51, 0x30, 0xe0, 0xf5, 0xb6, 0xa6, 0xbd, 0x1a, 0xcf, 0x7f, 0xe2,
	0x91, 0xf3, 0x67, 0x81, 0x7f, 0x76, 0x18, 0x0c, 0x06, 0xa8, 0x0b, 0x0d, 0xea, 0x4f, 0xc1, 0x58,
	0x1e, 0x0f, 0x72, 0x48, 0xcf, 0x8e, 0x88, 0xb8, 0x21, 0x71, 0x28, 0x80, 0xdd, 0x0b, 0xab, 0x76,
	0x8b, 0x41, 0x8e, 0xbd, 0x21, 0x46, 0xb7, 0xa1, 0x89, 0xfd, 0x3e, 0x9f, 0xac, 0xb3, 0xc9, 0x06,
	0xf6, 0xfb, 0x6c, 0x2a, 0x36, 0x6e, 0x63, 0xaa, 0x71, 0x9b, 0x29, 0xe3, 0xca, 0xc8, 0x75, 0x7c,
	0xfd, 0xa5, 0x9c, 0xf8, 0x0d, 0xcd, 0x8a, 0xb7, 0x32, 0x56, 0xfc, 0xb9, 0x2c, 0xf8, 0x77, 0x06,
	0xdc, 0xa2, 0x9f, 0x3f, 0xf7, 0xa3, 0x11, 0xf6, 0xc9, 0x47, 0x63, 0x32, 0x1a, 0xff, 0x2f, 0x44,
	0xd7, 0x99, 0xa1, 0x40, 0xd7, 0x6e, 0x2d, 0xa5, 0xdd, 0x3f, 0x37, 0xc0, 0xcc, 0x4a, 0xf0, 0x65,
	0x14, 0xfd, 0x9e, 0xa6, 0x68, 0x2b, 0xa5, 0xe8, 0x1c, 0x4d, 0xbd, 0xa0, 0xce, 0xb7, 0xa0, 0x63,
	0x63, 0x1a, 0xfe, 0x45, 0x86, 0x74, 0x0f, 0x00, 0x5f, 0xe2, 0x70, 0x42, 0xce, 0x65, 0x7a, 0xd2,
	0xb4, 0x15, 0x88, 0xf5, 0x5f, 0x0d, 0xe8, 0xec, 0xfb, 0xa7, 0x41, 0x2c, 0xd3, 0x03, 0x98, 0xf3,
	0x22, 0xa7, 0x17, 0xf8, 0xa7, 0xde, 0xd9, 0x38, 0xc4, 0x7d, 0xf1, 0x4d, 0xc7, 0x8b, 0x1e, 0xc5,
	0x30, 0x8a, 0x94, 0x60, 0xd0, 0x0c, 0x89, 0x27, 0x54, 0x9d, 0x04, 0xb8, 0x43, 0xa8, 0x1e, 0xbc,
	0xc8, 0x89, 0xbc, 0x33, 0x5f, 0x58, 0xa4, 0x69, 0x37, 0xbd, 0xe8, 0x88, 0x8d, 0xe9, 0xcd, 0xc7,
	0x8b, 0x9c, 0x33, 0xec, 0xe3, 0xd0, 0x25, 0x41, 0x28, 0x0a, 0xd8, 0x6d, 0x2f, 0x7a, 0x2a, 0x41,
	0x94, 0x48, 0x3c, 0xef, 0x8c, 0xc3, 0x81, 0x28, 0xb1, 0x74, 0x62, 0xe0, 0xf3, 0x70, 0x80, 0xde,
	0x85, 0xb5, 0x04, 0xc9, 0x65, 0xb9, 0x9f, 0x56, 0x6e, 0x5c, 0x89, 0x67, 0xd5, 0xc4, 0xf0, 0x01,
	0xcc, 0x9d, 0x0c, 0x82, 0xde, 0x05, 0x53, 0xa2, 0xe3, 0xf5, 0x45, 0xd9, 0xb8, 0x93, 0x00, 0xf7,
	0xfb, 0x94, 0x45, 0x36, 0x76, 0xce, 0xb1, 0x77, 0x76, 0x4e, 0xd8, 0xd6, 0xab, 0xda, 0x6d, 0x06,
	0xdb, 0x63, 0x20, 0x9d, 0xba, 0x86, 0x0c, 0x0c, 0x39, 0xa1, 0xbe, 0xab, 0x7c, 0xb5, 0x07, 0xf7,
	0xf3, 0xbf, 0x72, 0x4e, 0x31, 0xe9, 0x9d, 0x73, 0x8d, 0xb6, 0x19, 0xfb, 0x77, 0xf3, 0x16, 0xf8,
	0x80, 0x63, 0xed, 0x10, 0x61, 0xac, 0x51, 0x18, 0xf4, 0xc7, 0x3d, 0x56, 0x99, 0xed, 0x48, 0x63,
	0x1d, 0xc6, 0x30, 0xb4, 0x05, 0xcb, 0x3e, 0x26, 0x57, 0x41, 0x78, 0xe1, 0x84, 0xa3, 0x5e, 0x5c,
	0xcf, 0x9f, 0x63, 0xbe, 0xbe, 0x24, 0xa6, 0xec, 0x51, 0x4f, 0xd6, 0xf5, 0x6f, 0x41, 0x83, 0xfa,
	0x15, 0x55, 0xcb, 0x3c, 0xdf, 0x9b, 0x74, 0xb8, 0xdf, 0xa7, 0x21, 0x4f, 0x7e, 0xbc, 0xc0, 0x43,
	0x9e, 0x18, 0x32, 0x55, 0x8d, 0xbd, 0x41, 0xdf, 0xe9, 0x05, 0xc3, 0xa1, 0x47, 0xba, 0x8b, 0xfc,
	0x1e, 0xcb, 0x60, 0x8f, 0x18, 0x88, 0x46, 0x45, 0x8e, 0x42, 0xaf, 0x9f, 0xdd, 0x25, 0x9e, 0x51,
	0x33, 0xc8, 0x63, 0x97, 0x60, 0xf4, 0x1d, 0xa8, 0x9f, 0x63, 0x77, 0x40, 0xce, 0xbb, 0x88, 0x6d,
	0xf8, 0x07, 0x8a, 0x83, 0xab, 0xfe, 0xb9, 0xb5, 0xc7, 0xb0, 0x9e, 0xf8, 0x24, 0x9c, 0xd8, 0xe2,
	0x13, 0xf4, 0x5d, 0x68, 0x46, 0xbe, 0x3b, 0x8a, 0xce, 0x03, 0xd2, 0x5d, 0xce, 0x5c, 0x42, 0xb4,
	0xcf, 0x8f, 0x04, 0x9e, 0x1d, 0x7f, 0x51, 0xb8, 0x2a, 0xf2, 0xbb, 0x06, 0x34, 0xe5, 0xe7, 0x54,
	0x17, 0x2e, 0x21, 0x78, 0x38, 0xe2, 0x25, 0xa1, 0x9a, 0x2d, 0x87, 0x34, 0xb2, 0x09, 0x1f, 0x28,
	0x33, 0x1f, 0x10, 0x23, 0x7a, 0xcd, 0x60, 0x31, 0xa6, 0xc2, 0xa0, 0xec, 0x37, 0x2b, 0xab, 0x07,
	0x57, 0xfe, 0x20, 0x70, 0xfb, 0xb8, 0x2f, 0x62, 0x93, 0x02, 0x41, 0xaf, 0x40, 0xdb, 0xf3, 0x79,
	0xdd, 0x05, 0x47, 0xbc, 0x96, 0xdb, 0xb4, 0xc1, 0xf3, 0x0f, 0x05, 0xc4, 0xfc, 0x36, 0xb4, 0x15,
	0x85, 0xa0, 0x45, 0xa8, 0x5c, 0xe0, 0x89, 0x08, 0xa9, 0xf4, 0x27, 0x0d, 0x51, 0xec, 0xea, 0x20,
	0xaf, 0x3c, 0x6c, 0xf0, 0x8b, 0xe5, 0x6f, 0x19, 0xd6, 0xbf, 0x54, 0x60, 0x31, 0xde, 0xd2, 0x32,
	0x5c, 0x68, 0x7b, 0xd6, 0xb8, 0x61, 0xcf, 0x96, 0x73, 0xf7, 0xac, 0xbe, 0xb1, 0x2a, 0x39, 0x1b,
	0x2b, 0xb3, 0xb1, 0xab, 0x2f, 0xb4, 0xb1, 0x6b, 0x33, 0x36, 0xf6, 0x3a, 0xb4, 0xf8, 0x86, 0x1a,
	0x8d, 0x4f, 0x44, 0x97, 0xa8, 0xc9, 0x00, 0x87, 0xe3, 0x13, 0x74, 0x04, 0x4b, 0x7c, 0x92, 0xcb,
	0x47, 0x49, 0x47, 0xdd, 0x06, 0x73, 0xb7, 0xd7, 0xd4, 0xba, 0x5a, 0x4a, 0x29, 0x5b, 0x6c, 0xeb,
	0x71, 0x1d, 0xd8, 0x0b, 0x27, 0xc9, 0xe0, 0x79, 0x38, 0x50, 0x2b, 0xc9, 0x4d, 0xad, 0x92, 0xbc,
	0x05, 0xcb, 0x43, 0xf7, 0xda, 0x89, 0x3b, 0x64, 0x57, 0x9e, 0xdf, 0x0f, 0xae, 0x98, 0x8f, 0xb5,
	0xec, 0xa5, 0xa1, 0x7b, 0xbd, 0x2f, 0x66, 0x3e, 0x61, 0x13, 0xe6, 0x67, 0xd0, 0x56, 0xe8, 0x50,
	0x4b, 0x52, 0xcd, 0x08, 0x4b, 0x8e, 0xc3, 0x81, 0x28, 0xcc, 0x27, 0x6a, 0xe0, 0x06, 0x6d, 0xbb,
	0x8a, 0xf4, 0x6b, 0x50, 0x17, 0xbd, 0x2a, 0xae, 0x76, 0x31, 0xb2, 0x1c, 0x58, 0x60, 0xb9, 0xfc,
	0x7e, 0x5c, 0x2e, 0x41, 0xeb, 0xd0, 0xe4, 0x9d, 0x2b, 0xd9, 0x07, 0x64, 0x25, 0x4a, 0x8e, 0x84,
	0xee, 0x03, 0xef, 0x72, 0xa5, 0xaa, 0xa5, 0xc0, 0x80, 0x39, 0xb5, 0x52, 0xcb, 0x83, 0xa5, 0x1d,
	0x59, 0x6d, 0x8d, 0x49, 0x7c, 0x25, 0x65, 0x59, 0xeb, 0x3f, 0x00, 0xea, 0x3b, 0x3c, 0xb0, 0x1d,
	0x24, 0xa5, 0x49, 0xbd, 0x3c, 0xbb, 0xa1, 0x5d, 0x30, 0x29, 0xee, 0x96, 0x28, 0x93, 0x26, 0xf5,
	0x58, 0x59, 0xbe, 0x94, 0x45, 0xe4, 0x83, 0x6c, 0x9d, 0xb3, 0x7c, 0xc3, 0x62, 0xa2, 0xf2, 0xa9,
	0x2c, 0x26, 0x6b, 0xa1, 0x6f, 0x41, 0x8d, 0x1a, 0x1e, 0xe7, 0xe4, 0x53, 0x62, 0x09, 0x6a, 0x7d,
	0xcc, 0xea, 0x01, 0xf4, 0x07, 0x7a, 0x02, 0x73, 0xf4, 0xe4, 0xef, 0xc7, 0x82, 0x54, 0xd9, 0x87,
	0xf7, 0xb2, 0x1f, 0x1e, 0x51, 0xb4, 0x44, 0x8c, 0x4e, 0xa4, 0x8c, 0x91, 0x0f, 0x77, 0xb4, 0x65,
	0x9c, 0x31, 0x4f, 0x28, 0x9c, 0x80, 0x65, 0x14, 0x6c, 0xeb, 0xb4, 0xb7, 0xdf, 0x98, 0xbd, 0xaa,
	0x96, 0x84, 0xec, 0x95, 0xec, 0xdb, 0xd1, 0xb4, 0x49, 0xf4, 0x03, 0x58, 0xa5, 0x6e, 0x42, 0xae,
	0x9d, 0x10, 0x9f, 0xe2, 0x10, 0x53, 0x47, 0x67, 0x6d, 0xe7, 0x3a, 0x23, 0xf4, 0xb5, 0x1c, 0x42,
	0x98, 0x1c, 0x5f, 0xdb, 0x12, 0xf9, 0xb1, 0x4b, 0xdc, 0xbd, 0x92, 0x8d, 0xa2, 0x0c, 0xd4, 0xfc,
	0x6b, 0x03, 0xe6, 0x75, 0xa3, 0xa1, 0xb7, 0xf5, 0xc6, 0x9c, 0x99, 0xbe, 0xf2, 0x26, 0xbe, 0x27,
	0x5b, 0x74, 0x6b, 0x50, 0x77, 0x87, 0x4c, 0x9f, 0x22, 0x16, 0xf3, 0x11, 0x7a, 0x2f, 0x29, 0xe8,
	0x67, 0xaf, 0x6d, 0x19, 0x4f, 0x4e, 0x5a, 0x21, 0x0f, 0x61, 0x3e, 0x25, 0x28, 0x6f, 0x09, 0xcd,
	0x85, 0x1a, 0xef, 0x7f, 0x9a, 0xf0, 0x2e, 0x3d, 0xe2, 0xe5, 0xf1, 0x9e, 0x53, 0x90, 0xaf, 0xe4,
	0x16, 0xe4, 0x0b, 0x32, 0x7b, 0x0d, 0x35, 0xe6, 0x8c, 0x2f, 0x91, 0xc5, 0x2c, 0xe5, 0x4a, 0x1e,
	0xe5, 0x7f, 0x34, 0xa0, 0xa3, 0x3a, 0xde, 0xff, 0x1b, 0x03, 0x17, 0x68, 0xfe, 0x99, 0xbf, 0x6f,
	0xc0, 0xed, 0xa9, 0xbb, 0x0a, 0x2d, 0x43, 0x8d, 0x5c, 0xc7, 0xb1, 0xd7, 0xae, 0x92, 0xeb, 0xfd,
	0x3e, 0x32, 0xa1, 0x39, 0x0a, 0x22, 0xde, 0x62, 0xa7, 0xe2, 0xcc, 0xd9, 0xf1, 0xb8, 0xa0, 0x4a,
	0x33, 0x8c, 0x55, 0xb3, 0x8c, 0x6d, 0x02, 0xca, 0x6e, 0xc2, 0xf8, 0xbd, 0x88, 0x91, 0xbc, 0x17,
	0xd9, 0x6d, 0x42, 0xdd, 0x65, 0xbb, 0xd6, 0xfa, 0x5b, 0x03, 0x16, 0x76, 0x69, 0xae, 0xc6, 0xae,
	0x99, 0x3c, 0x55, 0x78, 0x3f, 0xd3, 0xcd, 0x53, 0x6f, 0x33, 0x29, 0xec, 0x9c, 0x06, 0xde, 0xaf,
	0x25, 0xfd, 0xb5, 0x0d, 0x68, 0x93, 0xd0, 0xf5, 0x23, 0x4e, 0x4d, 0xf0, 0xa0, 0x82, 0xd0, 0x1b,
	0xd4, 0x9e, 0xf4, 0x97, 0xbc, 0x10, 0x2e, 0x65, 0x42, 0x8b, 0x2d, 0x31, 0xe8, 0xd9, 0x49, 0x88,
	0x7c, 0x2e, 0x43, 0x7f, 0x5a, 0xff, 0x5e, 0x03, 0x38, 0xbe, 0x3e, 0xc6, 0xc3, 0xd1, 0x80, 0x26,
	0x9b, 0xaf, 0xc1, 0x42, 0xe8, 0x5e, 0x39, 0x59, 0x9a, 0xf3, 0xa1, 0x7b, 0x75, 0xac, 0x90, 0xfd,
	0x1c, 0x56, 0x68, 0xae, 0xe0, 0xf9, 0x67, 0x8e, 0xe7, 0x47, 0x24, 0x1c, 0x6b, 0x3c, 0x6c, 0x6a,
	0x15, 0x13, 0xb9, 0xfa, 0xd6, 0x11, 0xff, 0x62, 0x3f, 0xf9, 0xc0, 0x5e, 0x8e, 0x32, 0x30, 0x76,
	0x5b, 0xe5, 0x6f, 0x53, 0xf8, 0xdd, 0x88, 0x0f, 0xd0, 0xb7, 0xa0, 0xeb, 0x0e, 0x06, 0xc1, 0x95,
	0xe3, 0xf6, 0xfb, 0xcc, 0xf4, 0x2e, 0x3d, 0xdd, 0x38, 0x59, 0x7e, 0x49, 0x5a, 0x63, 0xf3, 0x3b,
	0xf1, 0x34, 0x17, 0x3f, 0x32, 0x1f, 0x43, 0xed, 0x00, 0x4f, 0xf6, 0x1f, 0x53, 0x5b, 0x2a, 0xad,
	0x7d, 0xf6, 0x9b, 0x8a, 0x9c, 0xee, 0xd5, 0xf3, 0xc7, 0x1f, 0xf3, 0x7d, 0xad, 0x49, 0x6f, 0xfe,
	0xb1, 0x01, 0x88, 0x4a, 0xe0, 0x92, 0x71, 0x88, 0x1f, 0x05, 0xc3, 0x51, 0xe0, 0x63, 0x9f, 0x28,
	0x69, 0x8e, 0xa1, 0xa5, 0x39, 0xef, 0x42, 0xe3, 0x02, 0x4f, 0x1c, 0xaf, 0x2f, 0x95, 0xb2, 0x9e,
	0xaf, 0x14, 0xc6, 0x99, 0x5d, 0xbf, 0xc0, 0x93, 0xfd, 0x7e, 0x44, 0xb3, 0x67, 0x3d, 0x76, 0xc9,
	0x21, 0xcd, 0x88, 0x23, 0x49, 0x9d, 0xbf, 0x17, 0xea, 0xd8, 0x0a, 0xc4, 0xf4, 0x60, 0xf1, 0x13,
	0x8f, 0xf8, 0x38, 0x8a, 0x12, 0xde, 0xf6, 0xa0, 0x15, 0x63, 0x88, 0xd0, 0x31, 0xc3, 0x34, 0xba,
	0x60, 0x34, 0x23, 0x89, 0x3f, 0xde, 0x6d, 0x43, 0xab, 0x27, 0x67, 0xcc, 0xbf, 0x11, 0x9a, 0xd0,
	0xed, 0xa6, 0xed, 0x52, 0x23, 0xb5, 0x4b, 0x6f, 0x2b, 0x59, 0x15, 0x7f, 0x38, 0x11, 0xe7, 0x54,
	0x49, 0xa4, 0xaa, 0x68, 0x91, 0xea, 0x39, 0xa0, 0x2b, 0x2e, 0x90, 0x13, 0x93, 0x96, 0x0f, 0xa5,
	0x5e, 0xcd, 0x97, 0x22, 0xad, 0x00, 0x7b, 0xe9, 0x2a, 0x05, 0x89, 0xac, 0x7f, 0x32, 0xa0, 0xad,
	0xd6, 0x84, 0x7e, 0x29, 0xdb, 0x4b, 0x7e, 0x45, 0x5b, 0xfd, 0xe5, 0x74, 0x8e, 0xb1, 0xd2, 0x39,
	0xfe, 0x06, 0x34, 0x89, 0x60, 0x59, 0x58, 0x65, 0x35, 0x57, 0x1e, 0x3b, 0x46, 0x2b, 0x5c, 0xe5,
	0x18, 0xc0, 0xe2, 0xd1, 0xf8, 0x64, 0xe8, 0x11, 0x25, 0x1e, 0x7d, 0x1b, 0x3a, 0xca, 0x86, 0x96,
	0x42, 0x4e, 0x21, 0xa9, 0xa1, 0xd2, 0xbb, 0xe9, 0x95, 0xeb, 0xd1, 0x6c, 0x89, 0x78, 0x03, 0x91,
	0x58, 0xb7, 0x28, 0xe4, 0x39, 0x05, 0x58, 0xff, 0x60, 0xc0, 0x92, 0x42, 0x4e, 0x88, 0xf7, 0x28,
	0xab, 0xd1, 0x87, 0x0a, 0xb1, 0xcc, 0x07, 0x5f, 0x4a, 0xaf, 0xbb, 0x8a, 0x5e, 0xd3, 0x5d, 0xad,
	0xa2, 0x4a, 0x7b, 0x1b, 0xaa, 0x9f, 0xd2, 0x6b, 0x50, 0x7e, 0x8b, 0x5a, 0x06, 0x8d, 0x72, 0x12,
	0x34, 0xac, 0x4d, 0x58, 0xe4, 0x3d, 0xd1, 0x03, 0x3c, 0x99, 0xd9, 0xe0, 0xb6, 0x7e, 0x04, 0x4b,
	0x0a, 0x66, 0x5c, 0x4a, 0x4a, 0xe2, 0x50, 0x7b, 0x7b, 0x41, 0xe1, 0x8b, 0xf2, 0x21, 0x02, 0x53,
	0xf1, 0x67, 0x03, 0x73, 0xcf, 0xbc, 0x88, 0x1c, 0xe0, 0x89, 0xa8, 0x20, 0xd2, 0x1b, 0x38, 0xa5,
	0x2d, 0xb4, 0xdf, 0xb2, 0xe5, 0x30, 0x29, 0x03, 0x96, 0xa7, 0x96, 0x51, 0x2b, 0xa9, 0x42, 0xdf,
	0xcf, 0x0c, 0x5e, 0x6b, 0xa7, 0xcb, 0xc7, 0xfc, 0x3f, 0xd4, 0x0b, 0xe4, 0x19, 0x01, 0x8a, 0xd4,
	0xfb, 0xde, 0xd4, 0xea, 0x7d, 0xdd, 0x54, 0xbd, 0x2f, 0x96, 0xe6, 0x05, 0xab, 0x7c, 0xaf, 0xc2,
	0x22, 0xef, 0x89, 0x2a, 0x86, 0xc9, 0x89, 0xfa, 0x96, 0x0b, 0xf3, 0x34, 0x82, 0xbd, 0x9c, 0x5d,
	0xb2, 0x02, 0x35, 0xf5, 0xd5, 0x20, 0x1f, 0x58, 0xef, 0xc0, 0x82, 0x74, 0xf5, 0xc2, 0xc7, 0xb9,
	0xf5, 0x61, 0xb2, 0x7f, 0x55, 0xb7, 0x0e, 0x2e, 0x44, 0xcd, 0xa1, 0x1c, 0x5c, 0x14, 0xd6, 0xc5,
	0xd7, 0x61, 0xe1, 0x29, 0x26, 0xec, 0xee, 0x2c, 0x19, 0x48, 0x4a, 0x30, 0x86, 0x5a, 0x82, 0xb1,
	0x0e, 0xd9, 0x5b, 0x0a, 0x81, 0x9a, 0xd4, 0x70, 0xd9, 0x95, 0x5e, 0xd6, 0x70, 0xd9, 0xa0, 0x30,
	0xf1, 0x37, 0x01, 0x3d, 0xc5, 0x24, 0x2e, 0x2a, 0xdd, 0x40, 0xff, 0x63, 0x58, 0xd6, 0xb0, 0x05,
	0x0b, 0x39, 0xb9, 0x57, 0x61, 0x06, 0x7e, 0xcf, 0x80, 0x5b, 0xca, 0x9a, 0x5a, 0x29, 0x77, 0x0a,
	0x1b, 0x71, 0x25, 0xaa, 0xac, 0x54, 0xa2, 0x0a, 0x15, 0x6e, 0x8a, 0x32, 0xf5, 0x29, 0xac, 0x49,
	0x3d, 0xf3, 0x8a, 0xe5, 0x8d, 0x2c, 0x15, 0x5d, 0x79, 0x13, 0x16, 0xa9, 0x43, 0x6b, 0xd6, 0xce,
	0xb5, 0xa0, 0xf5, 0x03, 0x58, 0x52, 0x30, 0x05, 0xf9, 0x3b, 0xe9, 0x4c, 0xa1, 0xa3, 0x9c, 0xfe,
	0x45, 0x99, 0xd8, 0xfe, 0xc9, 0x1c, 0x54, 0x76, 0x46, 0x23, 0xf4, 0x31, 0x74, 0xd4, 0x87, 0xa8,
	0xe8, 0xde, 0xec, 0xf7, 0xba, 0xe6, 0x2b, 0x37, 0xbc, 0x60, 0xb5, 0x4a, 0xe8, 0x13, 0x98, 0xd7,
	0xdf, 0xfe, 0xa1, 0x8d, 0x9b, 0x1e, 0x42, 0x9a, 0xf7, 0x6f, 0x7c, 0x38, 0x68, 0x95, 0xd0, 0x00,
	0x56, 0x7b, 0x79, 0xef, 0xc5, 0xd0, 0x6b, 0x05, 0x9f, 0xb2, 0x99, 0x9b, 0x45, 0x9f, 0x9e, 0x59,
	0x25, 0xf4, 0xcb, 0xd0, 0x94, 0x17, 0x00, 0x64, 0x4e, 0xbf, 0x15, 0x98, 0x6b, 0xf9, 0x29, 0x88,
	0x55, 0xa2, 0x39, 0x5d, 0x7c, 0x82, 0xa2, 0xf5, 0xfc, 0x73, 0x95, 0xaf, 0x71, 0x67, 0xd6, 0xa1,
	0x6b, 0x95, 0xd0, 0x81, 0xb4, 0x92, 0x78, 0x75, 0x96, 0xb5, 0x92, 0xf6, 0x00, 0xc9, 0xbc, 0x9d,
	0xed, 0x83, 0x26, 0x8b, 0x3d, 0x81, 0x56, 0xfc, 0x1a, 0x4b, 0x63, 0x2b, 0xfd, 0x46, 0x6b, 0xf6,
	0x32, 0x07, 0xd0, 0x51, 0xdf, 0x61, 0x69, 0x3c, 0xe5, 0x3c, 0xd0, 0x9a, 0xbd, 0xd8, 0x87, 0xd0,
	0x51, 0x1f, 0x52, 0x69, 0x8b, 0xe5, 0xbc, 0xb0, 0x32, 0xbb, 0x19, 0xbf, 0x4e, 0xd6, 0x8a, 0xcf,
	0x71, 0xad, 0x5b, 0x92, 0xe7, 0x60, 0xa9, 0xa7, 0x38, 0xe6, 0xd7, 0x66, 0x23, 0xc5, 0x14, 0x3e,
	0xe7, 0x07, 0xad, 0xfa, 0x2a, 0x08, 0xdd, 0xf8, 0x64, 0xc8, 0x7c, 0x30, 0x03, 0x43, 0x59, 0xfc,
	0x18, 0x96, 0x32, 0x6f, 0x85, 0x34, 0xf6, 0xa7, 0xbd, 0x24, 0x9a, 0xa9, 0x94, 0x7d, 0x80, 0xe4,
	0x39, 0x04, 0x9a, 0xf1, 0x4a, 0xc2, 0xbc, 0x9b, 0x3b, 0xa7, 0x2c, 0xf5, 0x11, 0xef, 0x69, 0xc7,
	0xbb, 0x7b, 0xe6, 0x23, 0x16, 0x2d, 0x60, 0xe4, 0x3d, 0xac, 0x49, 0x16, 0x94, 0xcf, 0x0c, 0xd0,
	0xcc, 0xf7, 0x07, 0x99, 0x05, 0xd3, 0xef, 0x1f, 0xac, 0x12, 0x7a, 0x06, 0x6d, 0xa5, 0x71, 0x8f,
	0x66, 0x35, 0xf4, 0xcd, 0x7b, 0xf9, 0x93, 0x5a, 0x20, 0x68, 0x88, 0x06, 0x32, 0x9a, 0xd6, 0x54,
	0x36, 0xcd, 0xec, 0x84, 0xb2, 0x82, 0xcb, 0x5f, 0xbf, 0xe8, 0x9d, 0x51, 0x54, 0xa0, 0x71, 0x6a,
	0x3e, 0x9c, 0x89, 0xa3, 0x90, 0xf8, 0x2e, 0xd4, 0x58, 0xcf, 0x54, 0x63, 0x51, 0xed, 0xa2, 0xce,
	0xf4, 0x8e, 0x77, 0xa0, 0x4a, 0x4f, 0x5d, 0xa4, 0x1d, 0x17, 0xc3, 0x11, 0x99, 0x98, 0xb7, 0xa6,
	0x34, 0xa1, 0xac, 0x12, 0x7a, 0x0c, 0xad, 0xb8, 0xcd, 0xa0, 0xe9, 0x38, 0xdd, 0x7c, 0x98, 0x45,
	0x7a, 0xfb, 0x0f, 0xcb, 0x50, 0xd9, 0x3b, 0xfa, 0x1e, 0x0d, 0x96, 0x71, 0xf6, 0xad, 0xaf, 0x96,
	0xca, 0xde, 0xb5, 0x60, 0x99, 0x49, 0xd8, 0xad, 0x12, 0x7a, 0x04, 0x4d, 0x99, 0x97, 0xa2, 0xa9,
	0xc9, 0xaa, 0xb9, 0x9e, 0x33, 0xa3, 0x0b, 0x17, 0x67, 0xa7, 0x1a, 0x3b, 0xe9, 0x9c, 0x75, 0xa6,
	0x5e, 0xdf, 0x87, 0x86, 0xc8, 0x5d, 0x91, 0x1a, 0xfe, 0xf4, 0x7c, 0x76, 0xfa, 0x09, 0xb2, 0xfd,
	0xdf, 0x65, 0xa8, 0x7e, 0x3f, 0xe8, 0x63, 0xf4, 0x04, 0x9a, 0xf2, 0x5c, 0xd0, 0x36, 0x6f, 0x2a,
	0x6d, 0x35, 0xd7, 0x73, 0xe7, 0x94, 0xd0, 0xdf, 0x94, 0x49, 0x8d, 0xb6, 0x4c, 0x2a, 0xf9, 0x34,
	0xd7, 0x73, 0xe7, 0xe2, 0x65, 0xbe, 0x0f, 0x6d, 0x25, 0x5f, 0x43, 0x77, 0x75, 0xec, 0x54, 0x26,
	0xa9, 0xed, 0xb0, 0x9c, 0xd4, 0x91, 0x05, 0xa7, 0x85, 0x54, 0xfe, 0x97, 0xe3, 0x89, 0x56, 0xfe,
	0x32, 0x29, 0xa7, 0x7c, 0x0a, 0xf3, 0x7a, 0xda, 0x96, 0xb3, 0xd2, 0xfd, 0x1c, 0xe9, 0xf4, 0x1c,
	0xcf, 0x2a, 0x6d, 0xdb, 0x50, 0x17, 0x6d, 0x2c, 0x7a, 0x8c, 0xcb, 0x2c, 0x4c, 0x3f, 0xc6, 0x53,
	0x59, 0x9c, 0x7e, 0x8c, 0xa7, 0x13, 0x37, 0xab, 0xb4, 0xfb, 0x00, 0x16, 0x7a, 0xc1, 0x90, 0x23,
	0xf1, 0xff, 0xce, 0xdb, 0x85, 0x47, 0x74, 0x70, 0x48, 0x7f, 0x1f, 0x1a, 0x9f, 0x95, 0x47, 0x27,
	0x27, 0x75, 0x36, 0xf1, 0xce, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0xcb, 0x41, 0xb6, 0xd9, 0xc9,
	0x37, 0x00, 0x00,
}
