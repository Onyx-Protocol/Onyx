// Code generated by protoc-gen-go.
// source: snapshot.proto
// DO NOT EDIT!

/*
Package storage is a generated protocol buffer package.

It is generated from these files:
	snapshot.proto

It has these top-level messages:
	Snapshot
*/
package storage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Snapshot represents a snapshot of the blockchain, including the state
// tree and issuance memory.
type Snapshot struct {
	// Nodes contains every node within the state tree, including interior nodes.
	// The nodes are ordered according to a pre-order traversal.
	Nodes []*Snapshot_StateTreeNode `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
	// Nonces contains the record of recent nonces for ensuring
	// uniqueness of issuances.
	Nonces []*Snapshot_Nonce `protobuf:"bytes,2,rep,name=nonces" json:"nonces,omitempty"`
}

func (m *Snapshot) Reset()                    { *m = Snapshot{} }
func (m *Snapshot) String() string            { return proto.CompactTextString(m) }
func (*Snapshot) ProtoMessage()               {}
func (*Snapshot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Snapshot) GetNodes() []*Snapshot_StateTreeNode {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *Snapshot) GetNonces() []*Snapshot_Nonce {
	if m != nil {
		return m.Nonces
	}
	return nil
}

type Snapshot_Nonce struct {
	Hash     []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	ExpiryMs uint64 `protobuf:"varint,2,opt,name=expiry_ms,json=expiryMs" json:"expiry_ms,omitempty"`
}

func (m *Snapshot_Nonce) Reset()                    { *m = Snapshot_Nonce{} }
func (m *Snapshot_Nonce) String() string            { return proto.CompactTextString(m) }
func (*Snapshot_Nonce) ProtoMessage()               {}
func (*Snapshot_Nonce) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Snapshot_StateTreeNode struct {
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (m *Snapshot_StateTreeNode) Reset()                    { *m = Snapshot_StateTreeNode{} }
func (m *Snapshot_StateTreeNode) String() string            { return proto.CompactTextString(m) }
func (*Snapshot_StateTreeNode) ProtoMessage()               {}
func (*Snapshot_StateTreeNode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

func init() {
	proto.RegisterType((*Snapshot)(nil), "chain.core.txdb.internal.storage.Snapshot")
	proto.RegisterType((*Snapshot_Nonce)(nil), "chain.core.txdb.internal.storage.Snapshot.Nonce")
	proto.RegisterType((*Snapshot_StateTreeNode)(nil), "chain.core.txdb.internal.storage.Snapshot.StateTreeNode")
}

func init() { proto.RegisterFile("snapshot.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 218 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x90, 0x3b, 0x4f, 0xc4, 0x30,
	0x10, 0x84, 0xe5, 0x7b, 0x71, 0xb7, 0x3c, 0x84, 0x5c, 0x45, 0x47, 0x13, 0xa8, 0x52, 0xad, 0x10,
	0x34, 0xa9, 0xa9, 0x68, 0x48, 0xe1, 0x50, 0xd1, 0x20, 0x27, 0x59, 0xe1, 0x08, 0xf0, 0x46, 0xb6,
	0x8b, 0xa4, 0xe4, 0x9f, 0xa3, 0x38, 0xa6, 0xa0, 0x42, 0x74, 0xa3, 0x91, 0xbe, 0x6f, 0x56, 0x0b,
	0x17, 0xde, 0xea, 0xc1, 0x1b, 0x0e, 0x38, 0x38, 0x0e, 0x2c, 0xf3, 0xd6, 0xe8, 0xde, 0x62, 0xcb,
	0x8e, 0x30, 0x8c, 0x5d, 0x83, 0xbd, 0x0d, 0xe4, 0xac, 0xfe, 0x40, 0x1f, 0xd8, 0xe9, 0x37, 0xba,
	0xf9, 0x5a, 0xc1, 0xbe, 0x4e, 0x90, 0xac, 0x60, 0x6b, 0xb9, 0x23, 0x9f, 0x89, 0x7c, 0x5d, 0x9c,
	0xde, 0x95, 0xf8, 0x17, 0x8e, 0x3f, 0x28, 0xd6, 0x41, 0x07, 0x7a, 0x76, 0x44, 0x15, 0x77, 0xa4,
	0x16, 0x8d, 0x7c, 0x84, 0x9d, 0x65, 0xdb, 0x92, 0xcf, 0x56, 0x51, 0x78, 0xfb, 0x0f, 0x61, 0x35,
	0x83, 0x2a, 0xf1, 0xc7, 0x12, 0xb6, 0xb1, 0x90, 0x12, 0x36, 0x46, 0x7b, 0x93, 0x89, 0x5c, 0x14,
	0x67, 0x2a, 0x66, 0x79, 0x05, 0x07, 0x1a, 0x87, 0xde, 0x4d, 0xaf, 0x9f, 0xf3, 0x92, 0x28, 0x36,
	0x6a, 0xbf, 0x14, 0x4f, 0xfe, 0x78, 0x0d, 0xe7, 0xbf, 0x6e, 0x93, 0x97, 0xb0, 0x7e, 0xa7, 0x29,
	0x09, 0xe6, 0xf8, 0x70, 0x78, 0x39, 0x49, 0xf3, 0xcd, 0x2e, 0xfe, 0xed, 0xfe, 0x3b, 0x00, 0x00,
	0xff, 0xff, 0x24, 0x3f, 0x72, 0xb5, 0x49, 0x01, 0x00, 0x00,
}
