// Code generated by protoc-gen-go.
// source: entries.proto
// DO NOT EDIT!

/*
Package bc is a generated protocol buffer package.

It is generated from these files:
	entries.proto

It has these top-level messages:
	ProtoHash
	ProtoAssetID
	ProtoAssetAmount
	AssetDefinition
	ValueSource
	ValueDestination
	Program
	BlockHeaderEntry
	TxHeader
	Mux
	Nonce
	Output
	Retirement
	TimeRange
	Issuance
	Spend
*/
package bc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ProtoHash struct {
	V0 uint64 `protobuf:"fixed64,1,opt,name=v0" json:"v0,omitempty"`
	V1 uint64 `protobuf:"fixed64,2,opt,name=v1" json:"v1,omitempty"`
	V2 uint64 `protobuf:"fixed64,3,opt,name=v2" json:"v2,omitempty"`
	V3 uint64 `protobuf:"fixed64,4,opt,name=v3" json:"v3,omitempty"`
}

func (m *ProtoHash) Reset()                    { *m = ProtoHash{} }
func (m *ProtoHash) String() string            { return proto.CompactTextString(m) }
func (*ProtoHash) ProtoMessage()               {}
func (*ProtoHash) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ProtoAssetID struct {
	Hash *ProtoHash `protobuf:"bytes,1,opt,name=hash" json:"hash,omitempty"`
}

func (m *ProtoAssetID) Reset()                    { *m = ProtoAssetID{} }
func (m *ProtoAssetID) String() string            { return proto.CompactTextString(m) }
func (*ProtoAssetID) ProtoMessage()               {}
func (*ProtoAssetID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ProtoAssetID) GetHash() *ProtoHash {
	if m != nil {
		return m.Hash
	}
	return nil
}

type ProtoAssetAmount struct {
	AssetId *ProtoAssetID `protobuf:"bytes,1,opt,name=asset_id,json=assetId" json:"asset_id,omitempty"`
	Amount  uint64        `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
}

func (m *ProtoAssetAmount) Reset()                    { *m = ProtoAssetAmount{} }
func (m *ProtoAssetAmount) String() string            { return proto.CompactTextString(m) }
func (*ProtoAssetAmount) ProtoMessage()               {}
func (*ProtoAssetAmount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ProtoAssetAmount) GetAssetId() *ProtoAssetID {
	if m != nil {
		return m.AssetId
	}
	return nil
}

type AssetDefinition struct {
	InitialBlockId  *ProtoHash `protobuf:"bytes,1,opt,name=initial_block_id,json=initialBlockId" json:"initial_block_id,omitempty"`
	IssuanceProgram *Program   `protobuf:"bytes,2,opt,name=issuance_program,json=issuanceProgram" json:"issuance_program,omitempty"`
	Data            *ProtoHash `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *AssetDefinition) Reset()                    { *m = AssetDefinition{} }
func (m *AssetDefinition) String() string            { return proto.CompactTextString(m) }
func (*AssetDefinition) ProtoMessage()               {}
func (*AssetDefinition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AssetDefinition) GetInitialBlockId() *ProtoHash {
	if m != nil {
		return m.InitialBlockId
	}
	return nil
}

func (m *AssetDefinition) GetIssuanceProgram() *Program {
	if m != nil {
		return m.IssuanceProgram
	}
	return nil
}

func (m *AssetDefinition) GetData() *ProtoHash {
	if m != nil {
		return m.Data
	}
	return nil
}

type ValueSource struct {
	Ref      *ProtoHash        `protobuf:"bytes,1,opt,name=ref" json:"ref,omitempty"`
	Value    *ProtoAssetAmount `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Position uint64            `protobuf:"varint,3,opt,name=position" json:"position,omitempty"`
}

func (m *ValueSource) Reset()                    { *m = ValueSource{} }
func (m *ValueSource) String() string            { return proto.CompactTextString(m) }
func (*ValueSource) ProtoMessage()               {}
func (*ValueSource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ValueSource) GetRef() *ProtoHash {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *ValueSource) GetValue() *ProtoAssetAmount {
	if m != nil {
		return m.Value
	}
	return nil
}

type ValueDestination struct {
	Ref      *ProtoHash        `protobuf:"bytes,1,opt,name=ref" json:"ref,omitempty"`
	Value    *ProtoAssetAmount `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Position uint64            `protobuf:"varint,3,opt,name=position" json:"position,omitempty"`
}

func (m *ValueDestination) Reset()                    { *m = ValueDestination{} }
func (m *ValueDestination) String() string            { return proto.CompactTextString(m) }
func (*ValueDestination) ProtoMessage()               {}
func (*ValueDestination) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ValueDestination) GetRef() *ProtoHash {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *ValueDestination) GetValue() *ProtoAssetAmount {
	if m != nil {
		return m.Value
	}
	return nil
}

type Program struct {
	VmVersion uint64 `protobuf:"varint,1,opt,name=vm_version,json=vmVersion" json:"vm_version,omitempty"`
	Code      []byte `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (m *Program) Reset()                    { *m = Program{} }
func (m *Program) String() string            { return proto.CompactTextString(m) }
func (*Program) ProtoMessage()               {}
func (*Program) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type BlockHeaderEntry struct {
	Body    *BlockHeaderEntry_Body    `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
	Witness *BlockHeaderEntry_Witness `protobuf:"bytes,2,opt,name=witness" json:"witness,omitempty"`
}

func (m *BlockHeaderEntry) Reset()                    { *m = BlockHeaderEntry{} }
func (m *BlockHeaderEntry) String() string            { return proto.CompactTextString(m) }
func (*BlockHeaderEntry) ProtoMessage()               {}
func (*BlockHeaderEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *BlockHeaderEntry) GetBody() *BlockHeaderEntry_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *BlockHeaderEntry) GetWitness() *BlockHeaderEntry_Witness {
	if m != nil {
		return m.Witness
	}
	return nil
}

type BlockHeaderEntry_Body struct {
	Version              uint64     `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Height               uint64     `protobuf:"varint,2,opt,name=height" json:"height,omitempty"`
	PreviousBlockId      *ProtoHash `protobuf:"bytes,3,opt,name=previous_block_id,json=previousBlockId" json:"previous_block_id,omitempty"`
	TimestampMs          uint64     `protobuf:"varint,4,opt,name=timestamp_ms,json=timestampMs" json:"timestamp_ms,omitempty"`
	TransactionsRoot     *ProtoHash `protobuf:"bytes,5,opt,name=transactions_root,json=transactionsRoot" json:"transactions_root,omitempty"`
	AssetsRoot           *ProtoHash `protobuf:"bytes,6,opt,name=assets_root,json=assetsRoot" json:"assets_root,omitempty"`
	NextConsensusProgram []byte     `protobuf:"bytes,7,opt,name=next_consensus_program,json=nextConsensusProgram,proto3" json:"next_consensus_program,omitempty"`
	ExtHash              *ProtoHash `protobuf:"bytes,8,opt,name=ext_hash,json=extHash" json:"ext_hash,omitempty"`
}

func (m *BlockHeaderEntry_Body) Reset()                    { *m = BlockHeaderEntry_Body{} }
func (m *BlockHeaderEntry_Body) String() string            { return proto.CompactTextString(m) }
func (*BlockHeaderEntry_Body) ProtoMessage()               {}
func (*BlockHeaderEntry_Body) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 0} }

func (m *BlockHeaderEntry_Body) GetPreviousBlockId() *ProtoHash {
	if m != nil {
		return m.PreviousBlockId
	}
	return nil
}

func (m *BlockHeaderEntry_Body) GetTransactionsRoot() *ProtoHash {
	if m != nil {
		return m.TransactionsRoot
	}
	return nil
}

func (m *BlockHeaderEntry_Body) GetAssetsRoot() *ProtoHash {
	if m != nil {
		return m.AssetsRoot
	}
	return nil
}

func (m *BlockHeaderEntry_Body) GetExtHash() *ProtoHash {
	if m != nil {
		return m.ExtHash
	}
	return nil
}

type BlockHeaderEntry_Witness struct {
	Arguments [][]byte `protobuf:"bytes,1,rep,name=arguments,proto3" json:"arguments,omitempty"`
}

func (m *BlockHeaderEntry_Witness) Reset()                    { *m = BlockHeaderEntry_Witness{} }
func (m *BlockHeaderEntry_Witness) String() string            { return proto.CompactTextString(m) }
func (*BlockHeaderEntry_Witness) ProtoMessage()               {}
func (*BlockHeaderEntry_Witness) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 1} }

type TxHeader struct {
	Body *TxHeader_Body `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
}

func (m *TxHeader) Reset()                    { *m = TxHeader{} }
func (m *TxHeader) String() string            { return proto.CompactTextString(m) }
func (*TxHeader) ProtoMessage()               {}
func (*TxHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *TxHeader) GetBody() *TxHeader_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

type TxHeader_Body struct {
	Version   uint64       `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	ResultIds []*ProtoHash `protobuf:"bytes,2,rep,name=result_ids,json=resultIds" json:"result_ids,omitempty"`
	Data      *ProtoHash   `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	MinTimeMs uint64       `protobuf:"varint,4,opt,name=min_time_ms,json=minTimeMs" json:"min_time_ms,omitempty"`
	MaxTimeMs uint64       `protobuf:"varint,5,opt,name=max_time_ms,json=maxTimeMs" json:"max_time_ms,omitempty"`
	ExtHash   *ProtoHash   `protobuf:"bytes,6,opt,name=ext_hash,json=extHash" json:"ext_hash,omitempty"`
}

func (m *TxHeader_Body) Reset()                    { *m = TxHeader_Body{} }
func (m *TxHeader_Body) String() string            { return proto.CompactTextString(m) }
func (*TxHeader_Body) ProtoMessage()               {}
func (*TxHeader_Body) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8, 0} }

func (m *TxHeader_Body) GetResultIds() []*ProtoHash {
	if m != nil {
		return m.ResultIds
	}
	return nil
}

func (m *TxHeader_Body) GetData() *ProtoHash {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TxHeader_Body) GetExtHash() *ProtoHash {
	if m != nil {
		return m.ExtHash
	}
	return nil
}

type Mux struct {
	Body    *Mux_Body    `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
	Witness *Mux_Witness `protobuf:"bytes,2,opt,name=witness" json:"witness,omitempty"`
}

func (m *Mux) Reset()                    { *m = Mux{} }
func (m *Mux) String() string            { return proto.CompactTextString(m) }
func (*Mux) ProtoMessage()               {}
func (*Mux) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Mux) GetBody() *Mux_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Mux) GetWitness() *Mux_Witness {
	if m != nil {
		return m.Witness
	}
	return nil
}

type Mux_Body struct {
	Sources []*ValueSource `protobuf:"bytes,1,rep,name=sources" json:"sources,omitempty"`
	Program *Program       `protobuf:"bytes,2,opt,name=program" json:"program,omitempty"`
	ExtHash []byte         `protobuf:"bytes,3,opt,name=ext_hash,json=extHash,proto3" json:"ext_hash,omitempty"`
}

func (m *Mux_Body) Reset()                    { *m = Mux_Body{} }
func (m *Mux_Body) String() string            { return proto.CompactTextString(m) }
func (*Mux_Body) ProtoMessage()               {}
func (*Mux_Body) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9, 0} }

func (m *Mux_Body) GetSources() []*ValueSource {
	if m != nil {
		return m.Sources
	}
	return nil
}

func (m *Mux_Body) GetProgram() *Program {
	if m != nil {
		return m.Program
	}
	return nil
}

type Mux_Witness struct {
	Destinations []*ValueDestination `protobuf:"bytes,1,rep,name=destinations" json:"destinations,omitempty"`
	Arguments    [][]byte            `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty"`
}

func (m *Mux_Witness) Reset()                    { *m = Mux_Witness{} }
func (m *Mux_Witness) String() string            { return proto.CompactTextString(m) }
func (*Mux_Witness) ProtoMessage()               {}
func (*Mux_Witness) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9, 1} }

func (m *Mux_Witness) GetDestinations() []*ValueDestination {
	if m != nil {
		return m.Destinations
	}
	return nil
}

type Nonce struct {
	Body    *Nonce_Body    `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
	Witness *Nonce_Witness `protobuf:"bytes,2,opt,name=witness" json:"witness,omitempty"`
}

func (m *Nonce) Reset()                    { *m = Nonce{} }
func (m *Nonce) String() string            { return proto.CompactTextString(m) }
func (*Nonce) ProtoMessage()               {}
func (*Nonce) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Nonce) GetBody() *Nonce_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Nonce) GetWitness() *Nonce_Witness {
	if m != nil {
		return m.Witness
	}
	return nil
}

type Nonce_Body struct {
	Program     *Program   `protobuf:"bytes,1,opt,name=program" json:"program,omitempty"`
	TimeRangeId *ProtoHash `protobuf:"bytes,2,opt,name=time_range_id,json=timeRangeId" json:"time_range_id,omitempty"`
	ExtHash     *ProtoHash `protobuf:"bytes,3,opt,name=ext_hash,json=extHash" json:"ext_hash,omitempty"`
}

func (m *Nonce_Body) Reset()                    { *m = Nonce_Body{} }
func (m *Nonce_Body) String() string            { return proto.CompactTextString(m) }
func (*Nonce_Body) ProtoMessage()               {}
func (*Nonce_Body) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 0} }

func (m *Nonce_Body) GetProgram() *Program {
	if m != nil {
		return m.Program
	}
	return nil
}

func (m *Nonce_Body) GetTimeRangeId() *ProtoHash {
	if m != nil {
		return m.TimeRangeId
	}
	return nil
}

func (m *Nonce_Body) GetExtHash() *ProtoHash {
	if m != nil {
		return m.ExtHash
	}
	return nil
}

type Nonce_Witness struct {
	Arguments  [][]byte   `protobuf:"bytes,1,rep,name=arguments,proto3" json:"arguments,omitempty"`
	AnchoredId *ProtoHash `protobuf:"bytes,2,opt,name=anchored_id,json=anchoredId" json:"anchored_id,omitempty"`
}

func (m *Nonce_Witness) Reset()                    { *m = Nonce_Witness{} }
func (m *Nonce_Witness) String() string            { return proto.CompactTextString(m) }
func (*Nonce_Witness) ProtoMessage()               {}
func (*Nonce_Witness) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 1} }

func (m *Nonce_Witness) GetAnchoredId() *ProtoHash {
	if m != nil {
		return m.AnchoredId
	}
	return nil
}

type Output struct {
	Body *Output_Body `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
}

func (m *Output) Reset()                    { *m = Output{} }
func (m *Output) String() string            { return proto.CompactTextString(m) }
func (*Output) ProtoMessage()               {}
func (*Output) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *Output) GetBody() *Output_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

type Output_Body struct {
	Source         *ValueSource `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	ControlProgram *Program     `protobuf:"bytes,2,opt,name=control_program,json=controlProgram" json:"control_program,omitempty"`
	Data           *ProtoHash   `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	ExtHash        *ProtoHash   `protobuf:"bytes,4,opt,name=ext_hash,json=extHash" json:"ext_hash,omitempty"`
}

func (m *Output_Body) Reset()                    { *m = Output_Body{} }
func (m *Output_Body) String() string            { return proto.CompactTextString(m) }
func (*Output_Body) ProtoMessage()               {}
func (*Output_Body) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11, 0} }

func (m *Output_Body) GetSource() *ValueSource {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Output_Body) GetControlProgram() *Program {
	if m != nil {
		return m.ControlProgram
	}
	return nil
}

func (m *Output_Body) GetData() *ProtoHash {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Output_Body) GetExtHash() *ProtoHash {
	if m != nil {
		return m.ExtHash
	}
	return nil
}

type Retirement struct {
	Body *Retirement_Body `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
}

func (m *Retirement) Reset()                    { *m = Retirement{} }
func (m *Retirement) String() string            { return proto.CompactTextString(m) }
func (*Retirement) ProtoMessage()               {}
func (*Retirement) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Retirement) GetBody() *Retirement_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

type Retirement_Body struct {
	Source  *ValueSource `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	Data    *ProtoHash   `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	ExtHash *ProtoHash   `protobuf:"bytes,3,opt,name=ext_hash,json=extHash" json:"ext_hash,omitempty"`
}

func (m *Retirement_Body) Reset()                    { *m = Retirement_Body{} }
func (m *Retirement_Body) String() string            { return proto.CompactTextString(m) }
func (*Retirement_Body) ProtoMessage()               {}
func (*Retirement_Body) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12, 0} }

func (m *Retirement_Body) GetSource() *ValueSource {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Retirement_Body) GetData() *ProtoHash {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Retirement_Body) GetExtHash() *ProtoHash {
	if m != nil {
		return m.ExtHash
	}
	return nil
}

type TimeRange struct {
	Body *TimeRange_Body `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
}

func (m *TimeRange) Reset()                    { *m = TimeRange{} }
func (m *TimeRange) String() string            { return proto.CompactTextString(m) }
func (*TimeRange) ProtoMessage()               {}
func (*TimeRange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *TimeRange) GetBody() *TimeRange_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

type TimeRange_Body struct {
	MinTimeMs uint64     `protobuf:"varint,1,opt,name=min_time_ms,json=minTimeMs" json:"min_time_ms,omitempty"`
	MaxTimeMs uint64     `protobuf:"varint,2,opt,name=max_time_ms,json=maxTimeMs" json:"max_time_ms,omitempty"`
	ExtHash   *ProtoHash `protobuf:"bytes,3,opt,name=ext_hash,json=extHash" json:"ext_hash,omitempty"`
}

func (m *TimeRange_Body) Reset()                    { *m = TimeRange_Body{} }
func (m *TimeRange_Body) String() string            { return proto.CompactTextString(m) }
func (*TimeRange_Body) ProtoMessage()               {}
func (*TimeRange_Body) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13, 0} }

func (m *TimeRange_Body) GetExtHash() *ProtoHash {
	if m != nil {
		return m.ExtHash
	}
	return nil
}

type Issuance struct {
	Body    *Issuance_Body    `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
	Witness *Issuance_Witness `protobuf:"bytes,2,opt,name=witness" json:"witness,omitempty"`
}

func (m *Issuance) Reset()                    { *m = Issuance{} }
func (m *Issuance) String() string            { return proto.CompactTextString(m) }
func (*Issuance) ProtoMessage()               {}
func (*Issuance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *Issuance) GetBody() *Issuance_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Issuance) GetWitness() *Issuance_Witness {
	if m != nil {
		return m.Witness
	}
	return nil
}

type Issuance_Body struct {
	AnchorId *ProtoHash        `protobuf:"bytes,1,opt,name=anchor_id,json=anchorId" json:"anchor_id,omitempty"`
	Value    *ProtoAssetAmount `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Data     *ProtoHash        `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	ExtHash  *ProtoHash        `protobuf:"bytes,4,opt,name=ext_hash,json=extHash" json:"ext_hash,omitempty"`
}

func (m *Issuance_Body) Reset()                    { *m = Issuance_Body{} }
func (m *Issuance_Body) String() string            { return proto.CompactTextString(m) }
func (*Issuance_Body) ProtoMessage()               {}
func (*Issuance_Body) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14, 0} }

func (m *Issuance_Body) GetAnchorId() *ProtoHash {
	if m != nil {
		return m.AnchorId
	}
	return nil
}

func (m *Issuance_Body) GetValue() *ProtoAssetAmount {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Issuance_Body) GetData() *ProtoHash {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Issuance_Body) GetExtHash() *ProtoHash {
	if m != nil {
		return m.ExtHash
	}
	return nil
}

type Issuance_Witness struct {
	Destination     *ValueDestination `protobuf:"bytes,1,opt,name=destination" json:"destination,omitempty"`
	AssetDefinition *AssetDefinition  `protobuf:"bytes,2,opt,name=asset_definition,json=assetDefinition" json:"asset_definition,omitempty"`
	Arguments       [][]byte          `protobuf:"bytes,3,rep,name=arguments,proto3" json:"arguments,omitempty"`
	AnchoredId      *ProtoHash        `protobuf:"bytes,4,opt,name=anchored_id,json=anchoredId" json:"anchored_id,omitempty"`
}

func (m *Issuance_Witness) Reset()                    { *m = Issuance_Witness{} }
func (m *Issuance_Witness) String() string            { return proto.CompactTextString(m) }
func (*Issuance_Witness) ProtoMessage()               {}
func (*Issuance_Witness) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14, 1} }

func (m *Issuance_Witness) GetDestination() *ValueDestination {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *Issuance_Witness) GetAssetDefinition() *AssetDefinition {
	if m != nil {
		return m.AssetDefinition
	}
	return nil
}

func (m *Issuance_Witness) GetAnchoredId() *ProtoHash {
	if m != nil {
		return m.AnchoredId
	}
	return nil
}

type Spend struct {
	Body    *Spend_Body    `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
	Witness *Spend_Witness `protobuf:"bytes,2,opt,name=witness" json:"witness,omitempty"`
}

func (m *Spend) Reset()                    { *m = Spend{} }
func (m *Spend) String() string            { return proto.CompactTextString(m) }
func (*Spend) ProtoMessage()               {}
func (*Spend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *Spend) GetBody() *Spend_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Spend) GetWitness() *Spend_Witness {
	if m != nil {
		return m.Witness
	}
	return nil
}

type Spend_Body struct {
	SpentOutputId *ProtoHash `protobuf:"bytes,1,opt,name=spent_output_id,json=spentOutputId" json:"spent_output_id,omitempty"`
	Data          *ProtoHash `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	ExtHash       *ProtoHash `protobuf:"bytes,3,opt,name=ext_hash,json=extHash" json:"ext_hash,omitempty"`
}

func (m *Spend_Body) Reset()                    { *m = Spend_Body{} }
func (m *Spend_Body) String() string            { return proto.CompactTextString(m) }
func (*Spend_Body) ProtoMessage()               {}
func (*Spend_Body) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15, 0} }

func (m *Spend_Body) GetSpentOutputId() *ProtoHash {
	if m != nil {
		return m.SpentOutputId
	}
	return nil
}

func (m *Spend_Body) GetData() *ProtoHash {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Spend_Body) GetExtHash() *ProtoHash {
	if m != nil {
		return m.ExtHash
	}
	return nil
}

type Spend_Witness struct {
	Destination *ValueDestination `protobuf:"bytes,1,opt,name=destination" json:"destination,omitempty"`
	Arguments   [][]byte          `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty"`
	AnchoredId  *ProtoHash        `protobuf:"bytes,3,opt,name=anchored_id,json=anchoredId" json:"anchored_id,omitempty"`
}

func (m *Spend_Witness) Reset()                    { *m = Spend_Witness{} }
func (m *Spend_Witness) String() string            { return proto.CompactTextString(m) }
func (*Spend_Witness) ProtoMessage()               {}
func (*Spend_Witness) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15, 1} }

func (m *Spend_Witness) GetDestination() *ValueDestination {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *Spend_Witness) GetAnchoredId() *ProtoHash {
	if m != nil {
		return m.AnchoredId
	}
	return nil
}

func init() {
	proto.RegisterType((*ProtoHash)(nil), "bc.ProtoHash")
	proto.RegisterType((*ProtoAssetID)(nil), "bc.ProtoAssetID")
	proto.RegisterType((*ProtoAssetAmount)(nil), "bc.ProtoAssetAmount")
	proto.RegisterType((*AssetDefinition)(nil), "bc.AssetDefinition")
	proto.RegisterType((*ValueSource)(nil), "bc.ValueSource")
	proto.RegisterType((*ValueDestination)(nil), "bc.ValueDestination")
	proto.RegisterType((*Program)(nil), "bc.Program")
	proto.RegisterType((*BlockHeaderEntry)(nil), "bc.BlockHeaderEntry")
	proto.RegisterType((*BlockHeaderEntry_Body)(nil), "bc.BlockHeaderEntry.Body")
	proto.RegisterType((*BlockHeaderEntry_Witness)(nil), "bc.BlockHeaderEntry.Witness")
	proto.RegisterType((*TxHeader)(nil), "bc.TxHeader")
	proto.RegisterType((*TxHeader_Body)(nil), "bc.TxHeader.Body")
	proto.RegisterType((*Mux)(nil), "bc.Mux")
	proto.RegisterType((*Mux_Body)(nil), "bc.Mux.Body")
	proto.RegisterType((*Mux_Witness)(nil), "bc.Mux.Witness")
	proto.RegisterType((*Nonce)(nil), "bc.Nonce")
	proto.RegisterType((*Nonce_Body)(nil), "bc.Nonce.Body")
	proto.RegisterType((*Nonce_Witness)(nil), "bc.Nonce.Witness")
	proto.RegisterType((*Output)(nil), "bc.Output")
	proto.RegisterType((*Output_Body)(nil), "bc.Output.Body")
	proto.RegisterType((*Retirement)(nil), "bc.Retirement")
	proto.RegisterType((*Retirement_Body)(nil), "bc.Retirement.Body")
	proto.RegisterType((*TimeRange)(nil), "bc.TimeRange")
	proto.RegisterType((*TimeRange_Body)(nil), "bc.TimeRange.Body")
	proto.RegisterType((*Issuance)(nil), "bc.Issuance")
	proto.RegisterType((*Issuance_Body)(nil), "bc.Issuance.Body")
	proto.RegisterType((*Issuance_Witness)(nil), "bc.Issuance.Witness")
	proto.RegisterType((*Spend)(nil), "bc.Spend")
	proto.RegisterType((*Spend_Body)(nil), "bc.Spend.Body")
	proto.RegisterType((*Spend_Witness)(nil), "bc.Spend.Witness")
}

func init() { proto.RegisterFile("entries.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1124 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x57, 0xdf, 0x6e, 0x1b, 0xc5,
	0x17, 0xd6, 0xae, 0x37, 0xfe, 0x73, 0xec, 0xc4, 0xce, 0xfc, 0xa2, 0xca, 0xb5, 0xfa, 0x83, 0x74,
	0x51, 0x49, 0xda, 0x82, 0xd5, 0x24, 0x25, 0xfc, 0x11, 0x42, 0x6a, 0x09, 0x52, 0x2d, 0x14, 0x40,
	0xdb, 0xa8, 0xb9, 0xb4, 0x36, 0xbb, 0xd3, 0x78, 0x45, 0x76, 0xc6, 0xda, 0x99, 0x35, 0x8e, 0xe0,
	0x1e, 0x89, 0x9b, 0x3e, 0x05, 0x37, 0x70, 0x07, 0xf7, 0xbc, 0x02, 0x0f, 0xc0, 0x15, 0x7d, 0x09,
	0x6e, 0xd1, 0x9c, 0x9d, 0xb1, 0x77, 0x6d, 0xc7, 0x4e, 0xa5, 0x88, 0xbb, 0x9c, 0x3d, 0xdf, 0xcc,
	0x9c, 0xf9, 0xce, 0x77, 0x3e, 0x4f, 0x60, 0x9d, 0x32, 0x99, 0x44, 0x54, 0x74, 0x87, 0x09, 0x97,
	0x9c, 0xd8, 0x67, 0x81, 0xfb, 0x25, 0xd4, 0xbe, 0x51, 0xc1, 0x33, 0x5f, 0x0c, 0xc8, 0x06, 0xd8,
	0xa3, 0x47, 0x6d, 0x6b, 0xdb, 0xda, 0x2d, 0x7b, 0xf6, 0xe8, 0x11, 0xc6, 0x7b, 0x6d, 0x5b, 0xc7,
	0x7b, 0x18, 0xef, 0xb7, 0x4b, 0x3a, 0xde, 0xc7, 0xf8, 0xa0, 0xed, 0xe8, 0xf8, 0xc0, 0xdd, 0x83,
	0x06, 0x6e, 0xf6, 0x44, 0x08, 0x2a, 0x7b, 0x47, 0xe4, 0x2e, 0x38, 0x03, 0x5f, 0x0c, 0x70, 0xc7,
	0xfa, 0xfe, 0x7a, 0xf7, 0x2c, 0xe8, 0x4e, 0x0e, 0xf3, 0x30, 0xe5, 0x9e, 0x42, 0x6b, 0xba, 0xe4,
	0x49, 0xcc, 0x53, 0x26, 0xc9, 0x43, 0xa8, 0xfa, 0x2a, 0xec, 0x47, 0xa1, 0x5e, 0xda, 0x9a, 0x2c,
	0xd5, 0x5b, 0x7b, 0x15, 0x44, 0xf4, 0x42, 0x72, 0x0b, 0xca, 0x3e, 0x2e, 0xc3, 0x3a, 0x1d, 0x4f,
	0x47, 0xee, 0xcf, 0x16, 0x34, 0x11, 0x7c, 0x44, 0x5f, 0x46, 0x2c, 0x92, 0x11, 0x67, 0xe4, 0x43,
	0x68, 0xe1, 0x9f, 0xfe, 0x45, 0xff, 0xec, 0x82, 0x07, 0xdf, 0x4e, 0x0f, 0x98, 0xa9, 0x6d, 0x43,
	0xc3, 0x9e, 0x2a, 0x54, 0x2f, 0x24, 0x87, 0xd0, 0x8a, 0x84, 0x48, 0x7d, 0x16, 0xd0, 0xfe, 0x30,
	0xe1, 0xe7, 0x89, 0x1f, 0xe3, 0x71, 0xf5, 0xfd, 0xba, 0x5e, 0xa8, 0x3e, 0x79, 0x4d, 0x03, 0xd2,
	0x1f, 0x14, 0x01, 0xa1, 0x2f, 0x7d, 0xa4, 0x6c, 0x9e, 0x00, 0x95, 0x72, 0x47, 0x50, 0x7f, 0xe1,
	0x5f, 0xa4, 0xf4, 0x39, 0x4f, 0x93, 0x80, 0x92, 0xb7, 0xa1, 0x94, 0xd0, 0x97, 0x8b, 0xab, 0x52,
	0x19, 0xf2, 0x00, 0xd6, 0x46, 0x0a, 0xaf, 0xcf, 0xdf, 0x2a, 0x32, 0x93, 0x31, 0xe8, 0x65, 0x10,
	0xd2, 0x81, 0xea, 0x90, 0x0b, 0xbc, 0x3b, 0x96, 0xe0, 0x78, 0x93, 0xd8, 0xfd, 0x1e, 0x5a, 0x78,
	0xee, 0x11, 0x15, 0x32, 0x62, 0x3e, 0xf2, 0xf3, 0x9f, 0x1d, 0xfe, 0x29, 0x54, 0x0c, 0x45, 0xff,
	0x07, 0x18, 0xc5, 0xfd, 0x11, 0x4d, 0x84, 0x02, 0x5a, 0x08, 0xac, 0x8d, 0xe2, 0x17, 0xd9, 0x07,
	0x42, 0xc0, 0x09, 0x78, 0x98, 0x1d, 0xd8, 0xf0, 0xf0, 0x6f, 0xf7, 0x47, 0x07, 0x5a, 0xd8, 0x99,
	0x67, 0xd4, 0x0f, 0x69, 0xf2, 0x05, 0x93, 0xc9, 0x25, 0x79, 0x1f, 0x9c, 0x33, 0x1e, 0x5e, 0xea,
	0xe2, 0x6f, 0xab, 0xca, 0x66, 0x31, 0xdd, 0xa7, 0x3c, 0xbc, 0xf4, 0x10, 0x46, 0x0e, 0xa1, 0xf2,
	0x5d, 0x24, 0x19, 0x15, 0x42, 0xdf, 0xe5, 0xce, 0xc2, 0x15, 0xa7, 0x19, 0xc6, 0x33, 0xe0, 0xce,
	0x6b, 0x1b, 0x1c, 0xb5, 0x0d, 0x69, 0x43, 0xa5, 0x58, 0xb4, 0x09, 0x95, 0x22, 0x07, 0x34, 0x3a,
	0x1f, 0x4c, 0x14, 0x99, 0x45, 0xe4, 0x63, 0xd8, 0x1c, 0x26, 0x74, 0x14, 0xf1, 0x54, 0x4c, 0xe5,
	0xb7, 0x50, 0x19, 0x4d, 0x83, 0x33, 0xfa, 0xbb, 0x0b, 0x0d, 0x19, 0xc5, 0x54, 0x48, 0x3f, 0x1e,
	0xf6, 0x63, 0x81, 0x23, 0xe7, 0x78, 0xf5, 0xc9, 0xb7, 0x63, 0x41, 0x3e, 0x81, 0x4d, 0x99, 0xf8,
	0x4c, 0xf8, 0x81, 0x62, 0x58, 0xf4, 0x13, 0xce, 0x65, 0x7b, 0x6d, 0xd1, 0xee, 0xad, 0x3c, 0xce,
	0xe3, 0x5c, 0x92, 0x2e, 0xd4, 0x71, 0x9c, 0xf4, 0xaa, 0xf2, 0xa2, 0x55, 0x90, 0x21, 0x10, 0xff,
	0x18, 0x6e, 0x31, 0x3a, 0x96, 0xfd, 0x80, 0x33, 0x41, 0x99, 0x48, 0xc5, 0x64, 0x28, 0x2a, 0xd8,
	0xa6, 0x2d, 0x95, 0xfd, 0xdc, 0x24, 0x4d, 0xa7, 0x77, 0xa1, 0xaa, 0x16, 0xa1, 0x23, 0x54, 0x17,
	0x1d, 0x51, 0xa1, 0x63, 0xa9, 0xfe, 0xe8, 0xec, 0x40, 0x45, 0x13, 0x4f, 0xee, 0x40, 0xcd, 0x4f,
	0xce, 0xd3, 0x98, 0x32, 0x29, 0xda, 0xd6, 0x76, 0x69, 0xb7, 0xe1, 0x4d, 0x3f, 0xb8, 0xaf, 0x6c,
	0xa8, 0x9e, 0x8c, 0xb3, 0x86, 0x91, 0x7b, 0x05, 0x05, 0x6c, 0xaa, 0xbd, 0x4d, 0x2e, 0xd7, 0xf9,
	0xce, 0x5f, 0xd6, 0xca, 0x0e, 0xbe, 0x07, 0x90, 0x50, 0x91, 0x5e, 0x28, 0x07, 0x52, 0xfa, 0x28,
	0xcd, 0xd7, 0x5a, 0xcb, 0x00, 0xbd, 0x50, 0x5c, 0x63, 0xc8, 0xc9, 0x5b, 0x50, 0x8f, 0x23, 0xd6,
	0x57, 0xfd, 0x9a, 0xb6, 0xaf, 0x16, 0x47, 0xec, 0x24, 0x8a, 0xe9, 0xb1, 0xc0, 0xbc, 0x3f, 0x9e,
	0xe4, 0xd7, 0x74, 0xde, 0x1f, 0xeb, 0x7c, 0x9e, 0xba, 0xf2, 0x32, 0xea, 0xdc, 0x5f, 0x6c, 0x28,
	0x1d, 0xa7, 0x63, 0xb2, 0x5d, 0x20, 0xa3, 0xa1, 0xd0, 0xc7, 0xe9, 0x38, 0x3f, 0x01, 0xf7, 0x67,
	0x27, 0xa0, 0x69, 0x40, 0x73, 0xa2, 0x17, 0x9a, 0xb1, 0xfb, 0x50, 0x11, 0x68, 0x53, 0x59, 0x2b,
	0xf4, 0x92, 0x9c, 0x7d, 0x79, 0x26, 0x4f, 0xee, 0x41, 0x65, 0x89, 0x51, 0x9a, 0x1c, 0xb9, 0x9d,
	0xbb, 0x58, 0x09, 0xb5, 0x33, 0x11, 0x81, 0x3f, 0x15, 0xc1, 0x47, 0xd0, 0x08, 0xa7, 0x36, 0x65,
	0x0e, 0xdf, 0x9a, 0x1c, 0x9e, 0xf3, 0x30, 0xaf, 0x80, 0x2c, 0xca, 0xc7, 0x9e, 0x95, 0xcf, 0x1f,
	0x36, 0xac, 0x7d, 0xc5, 0x59, 0x40, 0x89, 0x5b, 0xa0, 0x6b, 0x43, 0xed, 0x8c, 0x89, 0x3c, 0x61,
	0x0f, 0x67, 0x09, 0xdb, 0x9c, 0xc2, 0xe6, 0x28, 0xfb, 0xc9, 0xa8, 0x2c, 0x47, 0x84, 0xb5, 0x84,
	0x88, 0x3d, 0x58, 0xc7, 0xee, 0x27, 0x3e, 0x3b, 0xa7, 0xca, 0x18, 0xec, 0x45, 0x6d, 0xc6, 0x89,
	0xf7, 0x14, 0xa4, 0x17, 0x16, 0x44, 0x51, 0x5a, 0x3a, 0x4f, 0xa7, 0xd7, 0x9c, 0x27, 0x34, 0x02,
	0x16, 0x0c, 0x78, 0x42, 0xc3, 0x2b, 0x6b, 0x00, 0x83, 0xe8, 0x85, 0xee, 0x6b, 0x0b, 0xca, 0x5f,
	0xa7, 0x72, 0x98, 0x4a, 0xf2, 0x4e, 0x81, 0x41, 0x14, 0x46, 0x96, 0xc9, 0xcf, 0xde, 0x6f, 0x86,
	0x95, 0x1d, 0x28, 0x67, 0x4a, 0xc9, 0xe3, 0xf3, 0x42, 0xd2, 0x69, 0xf2, 0x18, 0x9a, 0x01, 0x67,
	0x32, 0xe1, 0x17, 0xcb, 0x7e, 0x78, 0x37, 0x34, 0xe6, 0xfa, 0xbf, 0xbb, 0x05, 0xf6, 0x9c, 0xa5,
	0x23, 0xf5, 0xbb, 0x05, 0xe0, 0x51, 0x19, 0x25, 0x54, 0x91, 0x44, 0x76, 0x0a, 0x17, 0xfd, 0x9f,
	0x5a, 0x34, 0xcd, 0xe6, 0x2f, 0xfb, 0xc3, 0x9b, 0xde, 0xd5, 0x54, 0x6d, 0x5f, 0xaf, 0xea, 0xa5,
	0x3d, 0x57, 0xef, 0x9f, 0xda, 0x89, 0x51, 0x0b, 0x79, 0xb7, 0x50, 0x34, 0x41, 0x6f, 0x34, 0xc9,
	0x7c, 0xcd, 0x43, 0x5d, 0xf3, 0x8c, 0x61, 0x59, 0x2b, 0x0c, 0xcb, 0x5e, 0x66, 0x58, 0xcb, 0xeb,
	0xfc, 0xbb, 0x04, 0xd5, 0x9e, 0x7e, 0x36, 0x2d, 0xb2, 0x70, 0x93, 0xcb, 0x4f, 0x62, 0x77, 0x76,
	0x12, 0xb7, 0x0a, 0xc8, 0xb9, 0x61, 0xfc, 0xd5, 0xc8, 0xee, 0x01, 0xd4, 0x32, 0xf5, 0x5e, 0xf9,
	0xf2, 0xab, 0x66, 0xf9, 0x5e, 0xf8, 0x46, 0x6f, 0x9d, 0x9b, 0xd4, 0x5b, 0xe7, 0x4f, 0x6b, 0x3a,
	0xae, 0x87, 0x50, 0xcf, 0xf9, 0x99, 0x2e, 0x79, 0xb1, 0xf1, 0xe5, 0x81, 0xe4, 0x33, 0x68, 0x65,
	0x4f, 0xe8, 0x70, 0xf2, 0xfa, 0xd5, 0xf7, 0x40, 0xc1, 0xce, 0x3c, 0x8c, 0xbd, 0xa6, 0x3f, 0xf3,
	0x52, 0x2e, 0xd8, 0x44, 0x69, 0x85, 0x4d, 0x38, 0xab, 0x6c, 0xe2, 0x1f, 0x1b, 0xd6, 0x9e, 0x0f,
	0x29, 0x0b, 0x17, 0xf9, 0x2c, 0x26, 0x56, 0xfb, 0x6c, 0x06, 0xbb, 0xda, 0x67, 0x3f, 0x80, 0xa6,
	0x18, 0x52, 0x26, 0xfb, 0x1c, 0x5d, 0xe7, 0xca, 0x06, 0xaf, 0x23, 0x2a, 0xb3, 0x26, 0x7c, 0x59,
	0xdd, 0xdc, 0xcc, 0x75, 0x5e, 0xdd, 0x40, 0xe7, 0x96, 0xfe, 0x62, 0xcd, 0x32, 0x5f, 0x5a, 0xc1,
	0xfc, 0x59, 0x19, 0xff, 0xd3, 0x3b, 0xf8, 0x37, 0x00, 0x00, 0xff, 0xff, 0x0c, 0xf1, 0x8b, 0x54,
	0xfa, 0x0d, 0x00, 0x00,
}
